{"mappings":"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SAAS;QACT,QAAQ;QACR,OAAO;QACP,MAAM;QACN,aAAa;QACb,QAAQ;IACT;IACD,6BAA6B;QAC3B,UAAU;QACV,SAAS;QACT,eAAe;QACf,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,OAAO;QACP,MAAM;QACN,aAAa;QACb,QAAQ;IACT;IACD,0JACE;QACE,MAAM;QACN,OAAO;IACR;IACH,iFACE;QACE,MAAM;QACN,OAAO;IACR;IACH,2EAA2E;QACzE,QAAQ;IACT;IACD,uCAAuC;QACrC,SAAS;IACV;IACD,sCAAsC;QACpC,SAAS;IACV;IACD,iFACE;QACE,KAAK;IACN;IACH,0CAA0C;QACxC,SAAS;IACV;IACD,yCAAyC;QACvC,SAAS;IACV;IACD,6BAA6B;QAC3B,SAAS;IACV;IACD,sBAAsB;QACpB,UAAU;QACV,SAAS;IACV;IACD,qBAAqB;QACnB,SAAS;IACV;IACD,sCAAsC;QACpC,iBAAiB;QACjB,OAAO;QACP,MAAM;QACN,QAAQ;QACR,YAAY;QACZ,WAAW;QACX,UAAU;QACV,YAAY;QACZ,UAAU;QACV,MAAM;QACN,cAAc;IACf;IACD,oFACE;QACE,YAAY;QACZ,gBAAgB;QAChB,QAAQ;QACR,UAAU;QACV,KAAK;QACL,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,OAAO;QACP,MAAM;IACP;IACH,0HACE;QACE,SAAS;IACV;IACH,wFACE;QACE,UAAU;IACX;IACH,8HACE;QACE,MAAM;IACP;IACH,8HACE;QACE,OAAO;IACR;IACH,gGACE;QACE,OAAO;IACR;IACH,wGACE;QACE,MAAM;IACP;IACH,4FACE;QACE,OAAO;QACP,QAAQ;IACT;IACH,sGACE;QACE,YAAY;QACZ,MAAM;IACP;IACH,oBAAoB;QAClB,UAAU;QACV,QAAQ;IACT;IACD,iDAAiD;QAC/C,SAAS;IACV;IACD,0BAA0B;QACxB,OAAO;IACR;IACD,qCAAqC;QACnC,SAAS;IACV;IACD,wGACE;QACE,QAAQ;QACR,sBAAsB;IACvB;IACH,yBAAyB;QACvB,UAAU;QACV,OAAO;QACP,OAAO;QACP,SAA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","sources":["packages/ui/src/index.ts","packages/ui/src/ReservoirKitProvider.tsx","packages/ui/src/themes/darkTheme.ts","packages/ui/src/themes/ReservoirKitTheme.ts","packages/ui/src/ReservoirClientProvider.tsx","packages/ui/package.json","packages/ui/stitches.config.ts","packages/ui/src/lib/swr.ts","packages/ui/src/styles/calendar.ts","packages/ui/src/hooks/useMutationObservable.ts","packages/ui/src/hooks/useAttributes.ts","packages/ui/src/hooks/useReservoirClient.ts","packages/ui/src/hooks/useBids.tsx","packages/ui/src/hooks/useInfiniteApi.ts","packages/ui/src/hooks/useCart.ts","packages/ui/src/context/CartProvider.tsx","packages/ui/src/hooks/useChainCurrency.ts","packages/ui/src/hooks/useCoinConversion.ts","packages/ui/src/hooks/useCollectionActivity.ts","packages/ui/src/hooks/useCollections.ts","packages/ui/src/hooks/useDynamicTokens.ts","packages/ui/src/hooks/useTokens.ts","packages/ui/src/hooks/useListings.ts","packages/ui/src/hooks/useOwnerListings.ts","packages/ui/src/hooks/useSearchActivities.ts","packages/ui/src/hooks/useTokenActivity.ts","packages/ui/src/hooks/useUserCollections.ts","packages/ui/src/hooks/useUsersActivity.ts","packages/ui/src/hooks/useUserTokens.ts","packages/ui/src/hooks/useUserTopBids.ts","packages/ui/src/themes/lightTheme.ts","packages/ui/src/modal/buy/BuyModal.tsx","packages/ui/src/hooks/useFallbackState.ts","packages/ui/src/primitives/Anchor.tsx","packages/ui/src/primitives/Box.tsx","packages/ui/src/primitives/Button.tsx","packages/ui/src/primitives/Flex.tsx","packages/ui/src/primitives/FormatCryptoCurrency.tsx","packages/ui/src/primitives/FormatCrypto.tsx","packages/ui/src/lib/numbers.ts","packages/ui/src/primitives/Text.tsx","packages/ui/src/primitives/CryptoCurrencyIcon.tsx","packages/ui/src/primitives/EthLogo.tsx","packages/ui/src/img/EthIconGlyph.tsx","packages/ui/src/img/EthIconGray.tsx","packages/ui/src/img/EthIconPurple.tsx","packages/ui/src/constants/wrappedContracts.ts","packages/ui/src/img/WEthIcon.tsx","packages/ui/src/primitives/Tooltip.tsx","packages/ui/src/primitives/FormatCurrency.tsx","packages/ui/src/primitives/Loader.tsx","packages/ui/src/modal/Progress.tsx","packages/ui/src/modal/Modal.tsx","packages/ui/src/primitives/Dialog.tsx","packages/ui/src/hooks/useMediaQuery.ts","packages/ui/src/img/ReservoirText.tsx","packages/ui/src/modal/TokenLineItem.tsx","packages/ui/src/modal/TokenPrimitive.tsx","packages/ui/src/primitives/Grid.tsx","packages/ui/src/primitives/InfoTooltip.tsx","packages/ui/src/primitives/Popover.tsx","packages/ui/src/modal/buy/BuyModalRenderer.tsx","packages/ui/src/modal/ProgressBar.tsx","packages/ui/src/modal/QuantitySelector.tsx","packages/ui/src/primitives/PseudoInput.tsx","packages/ui/src/modal/list/ListModal.tsx","packages/ui/src/primitives/ErrorWell.tsx","packages/ui/src/primitives/Select.tsx","packages/ui/src/modal/list/ListModalRenderer.tsx","packages/ui/src/hooks/useListingPreapprovalCheck.ts","packages/ui/src/hooks/useMarketplaces.ts","packages/ui/src/lib/getLocalMarketplaceData.ts","packages/ui/src/hooks/useOnChainRoyalties.ts","packages/ui/src/lib/defaultExpirationOptions.ts","packages/ui/src/modal/list/TokenStats.tsx","packages/ui/src/modal/list/Token.tsx","packages/ui/src/lib/optimizeImage.ts","packages/ui/src/modal/Stat.tsx","packages/ui/src/primitives/FormatWrappedCurrency.tsx","packages/ui/src/modal/list/MarketplaceToggle.tsx","packages/ui/src/primitives/Switch.tsx","packages/ui/src/modal/list/MarketplacePriceInput.tsx","packages/ui/src/primitives/Input.tsx","packages/ui/src/modal/CurrencySelector.tsx","packages/ui/src/modal/list/TokenListingDetails.tsx","packages/ui/src/modal/list/ListingStat.tsx","packages/ui/src/hooks/useTimeSince.ts","packages/ui/src/modal/TransactionProgress.tsx","packages/ui/src/modal/SigninStep.tsx","packages/ui/src/modal/bid/BidModal.tsx","packages/ui/src/primitives/DateInput.tsx","packages/ui/src/modal/bid/BidModalRenderer.tsx","packages/ui/src/constants/wrappedContractNames.ts","packages/ui/src/modal/bid/TokenStats.tsx","packages/ui/src/modal/bid/TokenStatsHeader.tsx","packages/ui/src/modal/bid/SelectedAttribute.tsx","packages/ui/src/modal/bid/TransactionBidDetails.tsx","packages/ui/src/modal/bid/AttributeSelector.tsx","packages/ui/src/primitives/ScrollArea.tsx","packages/ui/src/modal/acceptBid/AcceptBidModal.tsx","packages/ui/src/modal/acceptBid/AcceptBidModalRenderer.tsx","packages/ui/src/modal/acceptBid/AcceptBidLineItem.tsx","packages/ui/src/primitives/Collapsible.tsx","packages/ui/src/modal/acceptBid/ApproveBidCollapsible.tsx","packages/ui/src/modal/ApproveCollapisble.tsx","packages/ui/src/primitives/Img.tsx","packages/ui/src/modal/acceptBid/AcceptBidSummaryLineItem.tsx","packages/ui/src/modal/cancelBid/CancelBidModal.tsx","packages/ui/src/modal/cancelBid/CancelBidModalRenderer.tsx","packages/ui/src/modal/cancelListing/CancelListingModal.tsx","packages/ui/src/modal/cancelListing/CancelListingModalRenderer.tsx","packages/ui/src/modal/editBid/EditBidModal.tsx","packages/ui/src/modal/editBid/EditBidModalRenderer.tsx","packages/ui/src/modal/editListing/EditListingModal.tsx","packages/ui/src/modal/editListing/EditListingModalRenderer.tsx","packages/ui/src/modal/editListing/PriceInput.tsx","packages/ui/src/modal/sweep/SweepModal.tsx","packages/ui/src/primitives/Slider.tsx","packages/ui/src/modal/ApprovePurchasingCollapsible.tsx","packages/ui/src/modal/TokenCheckout.tsx","packages/ui/src/modal/sweep/ItemToggle.tsx","packages/ui/src/primitives/ToggleGroup.tsx","packages/ui/src/modal/sweep/SweepItem.tsx","packages/ui/src/modal/sweep/SweepModalRenderer.tsx","packages/ui/src/components/TokenMedia/index.tsx","packages/ui/src/hooks/useModelViewer.ts","packages/ui/src/components/TokenMedia/MediaPlayButton.tsx","packages/ui/src/components/TokenMedia/TokenFallback.tsx","packages/ui/src/components/cart/CartPopover.tsx","packages/ui/src/components/cart/CartItem.tsx","packages/ui/src/components/cart/CartToast.tsx","packages/ui/src/components/cart/CartPopoverRenderer.tsx","packages/ui/src/components/cart/CartCheckoutModal.tsx"],"sourcesContent":["/// <reference path=\"./types/parcel.d.ts\" />\n\n//Providers\nexport { ReservoirKitProvider } from './ReservoirKitProvider'\nexport { ReservoirClientProvider } from './ReservoirClientProvider'\n\n// Hooks\nexport {\n  useCollections,\n  useCollectionActivity,\n  useUsersActivity,\n  useReservoirClient,\n  useTokens,\n  useSearchActivities,\n  useTokenActivity,\n  useCoinConversion,\n  useListings,\n  useOwnerListings,\n  useAttributes,\n  useBids,\n  useUserTokens,\n  useUserTopBids,\n  useUserCollections,\n  useCart,\n  useDynamicTokens,\n} from './hooks'\n\n// Themes\nexport { lightTheme, darkTheme } from './themes'\nexport type { ReservoirKitTheme } from './themes/ReservoirKitTheme'\n\n//Components\nexport { BuyModal } from './modal/buy/BuyModal'\nexport { BuyStep } from './modal/buy/BuyModalRenderer'\n\nexport { ListModal } from './modal/list/ListModal'\nexport { ListStep } from './modal/list/ListModalRenderer'\n\nexport { BidModal } from './modal/bid/BidModal'\nexport { BidStep } from './modal/bid/BidModalRenderer'\n\nexport { AcceptBidModal } from './modal/acceptBid/AcceptBidModal'\nexport { AcceptBidStep } from './modal/acceptBid/AcceptBidModalRenderer'\n\nexport { CancelBidModal } from './modal/cancelBid/CancelBidModal'\nexport { CancelStep as CancelBidStep } from './modal/cancelBid/CancelBidModalRenderer'\n\nexport { CancelListingModal } from './modal/cancelListing/CancelListingModal'\nexport { CancelStep as CancelListingStep } from './modal/cancelListing/CancelListingModalRenderer'\n\nexport { EditBidModal } from './modal/editBid/EditBidModal'\nexport { EditBidStep } from './modal/editBid/EditBidModalRenderer'\n\nexport { EditListingModal } from './modal/editListing/EditListingModal'\nexport { EditListingStep } from './modal/editListing/EditListingModalRenderer'\n\nexport { SweepModal } from './modal/sweep/SweepModal'\nexport { SweepStep } from './modal/sweep/SweepModalRenderer'\n\nexport {\n  default as TokenMedia,\n  extractMediaType,\n} from './components/TokenMedia'\n\nexport { default as CartPopover } from './components/cart/CartPopover'\nexport { CartProvider } from './context/CartProvider'\nexport type {\n  Cart,\n  CheckoutStatus,\n  CheckoutTransactionError,\n} from './context/CartProvider'\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  useEffect,\n  useState,\n  useRef,\n  ComponentPropsWithoutRef,\n  useCallback,\n} from 'react'\nimport { ReservoirClientOptions } from '@reservoir0x/reservoir-sdk'\nimport { ReservoirKitTheme, darkTheme } from './themes'\nimport { ReservoirClientProvider } from './ReservoirClientProvider'\nimport { SWRConfig } from 'swr'\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip'\n\nexport type CoinId = {\n  [key: string]: string\n}\nexport type CoinGecko = {\n  proxy?: string\n  apiKey?: string\n  coinIds?: CoinId\n}\n\ntype ReservoirKitProviderOptions = {\n  disablePoweredByReservoir?: boolean\n  coinGecko?: CoinGecko\n}\nexport interface ReservoirKitProviderProps {\n  children: ReactNode\n  options?: ReservoirClientOptions & ReservoirKitProviderOptions\n  theme?: ReservoirKitTheme\n  swrOptions?: ComponentPropsWithoutRef<typeof SWRConfig>['value']\n}\n\nimport { createTheme, ReservoirKitThemeContext } from '../stitches.config'\nimport { swrDefaultOptions } from './lib/swr'\n\nexport const ThemeContext = createContext<undefined | ReservoirKitThemeContext>(\n  undefined\n)\nexport const ProviderOptionsContext =\n  createContext<ReservoirKitProviderOptions>({})\n\nconst defaultOptions = {\n  chains: [{ baseApiUrl: 'https://api.reservoir.tools', id: 1, active: true }],\n}\n\nconst classNameObserverOptions = {\n  attributeFilter: ['class'],\n}\n\nimport calendarCss from './styles/calendar'\nimport useMutationObservable from './hooks/useMutationObservable'\n\nexport const ReservoirKitProvider: FC<ReservoirKitProviderProps> = function ({\n  children,\n  options = defaultOptions,\n  theme,\n  swrOptions = {},\n}: ReservoirKitProviderProps) {\n  const [globalTheme, setGlobalTheme] = useState<\n    undefined | ReservoirKitThemeContext\n  >()\n  const [providerOptions, setProviderOptions] =\n    useState<ReservoirKitProviderOptions>({})\n  const currentTheme = useRef(null as any)\n  const classNameCallback = useCallback(\n    (mutationList: MutationRecord[]) => {\n      mutationList.forEach((mutation) => {\n        const body = mutation.target as HTMLBodyElement\n        if (\n          mutation.attributeName === 'class' &&\n          body &&\n          !body.className.includes(currentTheme.current)\n        ) {\n          document.body.classList.add(currentTheme.current)\n        }\n      })\n    },\n    [currentTheme]\n  )\n\n  useMutationObservable(\n    classNameCallback,\n    typeof window !== 'undefined' ? document.body : null,\n    classNameObserverOptions\n  )\n\n  calendarCss()\n\n  useEffect(() => {\n    let newTheme = createTheme(theme ? (theme as any) : (darkTheme() as any))\n    let oldTheme = currentTheme.current\n    currentTheme.current = newTheme\n\n    document.body.classList.add(newTheme)\n\n    if (oldTheme) {\n      document.body.classList.remove(oldTheme)\n    }\n\n    setGlobalTheme(newTheme as any)\n  }, [JSON.stringify(theme)])\n\n  useEffect(() => {\n    setProviderOptions(options)\n  }, [options])\n\n  return (\n    <ThemeContext.Provider value={globalTheme}>\n      <TooltipPrimitive.Provider>\n        <ProviderOptionsContext.Provider value={providerOptions}>\n          <ReservoirClientProvider options={options}>\n            <SWRConfig value={{ ...swrDefaultOptions, ...swrOptions }}>\n              {children}\n            </SWRConfig>\n          </ReservoirClientProvider>\n        </ProviderOptionsContext.Provider>\n      </TooltipPrimitive.Provider>\n    </ThemeContext.Provider>\n  )\n}\n","import {\n  redDark,\n  indigoDark,\n  slateDark,\n  indigoDarkA,\n  blackA,\n  green,\n} from '@radix-ui/colors'\n\nimport {\n  ReservoirKitOverrides,\n  ReservoirKitTheme,\n  sharedThemeConfig,\n} from './ReservoirKitTheme'\n\nexport default function (overrides?: ReservoirKitOverrides): ReservoirKitTheme {\n  let sharedTheme = sharedThemeConfig(overrides)\n\n  return {\n    colors: {\n      ...redDark,\n      ...indigoDark,\n      ...indigoDarkA,\n      ...slateDark,\n      ...blackA,\n      ...green,\n\n      // accent colors\n      accentBase: '$indigo1',\n      accentBgSubtle: '$indigo2',\n      accentBg: '$indigo3',\n      accentBgHover: '$indigo4',\n      accentBgActive: '$indigo5',\n      accentLine: '$indigo6',\n      accentBorder: '$indigo7',\n      accentBorderHover: overrides?.primaryColor || '$indigo8',\n      accentSolid: overrides?.primaryColor || '$indigo9',\n      accentSolidHover:\n        overrides?.primaryHoverColor || overrides?.primaryColor || '$indigo10',\n      accentText: '$indigo11',\n      accentTextContrast: '$indigo12',\n\n      // neutral colors\n      neutralBase: '$slate1',\n      neutralBgSubtle: '$slate2',\n      neutralBg: '$slate3',\n      neutralBgHover: '$slate4',\n      neutralBgActive: '$slate5',\n      neutralLine: '$slate6',\n      neutralBorder: '$slate7',\n      neutralBorderHover: '$slate8',\n      neutralSolid: '$slate9',\n      neutralSolidHover: '$slate10',\n      neutralText: '$slate11',\n      neutralTextContrast: '$slate12',\n\n      // secondary colors\n      secondaryBase: '$indigoA1',\n      secondaryBgSubtle: '$indigoA2',\n      secondaryBg: '$indigoA3',\n      secondaryBgHover: '$indigoA4',\n      secondaryBgActive: '$indigoA5',\n      secondaryLine: '$indigoA6',\n      secondaryBorder: '$indigoA7',\n      secondaryBorderHover: '$indigoA8',\n      secondarySolid: '$indigoA9',\n      secondarySolidHover: '$indigoA10',\n      secondaryText: '$indigoA11',\n      secondaryTextContrast: '$indigoA12',\n\n      // general colors\n      borderColor: overrides?.borderColor || '$neutralBorder',\n      textColor: overrides?.textColor || '$neutralTextContrast',\n      focusColor: '$neutralTextContrast',\n      errorText: '$red12',\n      errorAccent: '$red10',\n      successAccent: '$green10',\n\n      // component colors\n      reservoirLogoColor: '#ECEDEE',\n      inputBackground: '$neutralBgHover',\n      buttonTextColor: overrides?.buttonTextColor || 'white',\n      buttonTextHoverColor: overrides?.buttonTextHoverColor || 'white',\n      overlayBackground: overrides?.overlayBackground || '$blackA10',\n      headerBackground: overrides?.headerBackground || '$neutralBgHover',\n      footerBackground: overrides?.footerBackground || '$neutralBg',\n      contentBackground: overrides?.contentBackground || '$neutralBgSubtle',\n      wellBackground: overrides?.wellBackground || '$neutralBase',\n      popoverBackground: overrides?.popoverBackground || '$neutralBgActive',\n    },\n    assets: {\n      ethIcon: overrides?.ethIcon || 'purple',\n    },\n    ...sharedTheme,\n  }\n}\n","export interface ReservoirKitTheme {\n  radii: {\n    borderRadius: string\n  }\n  fonts: {\n    body: string\n    button: string\n    headline: string\n  }\n  colors: ReservoirKitThemeColors\n  assets: {\n    ethIcon: 'glyph' | 'gray' | 'purple'\n  }\n}\n\nexport interface ReservoirKitThemeColors {\n  // accent colors\n  accentBase: string\n  accentBgSubtle: string\n  accentBg: string\n  accentBgHover: string\n  accentBgActive: string\n  accentLine: string\n  accentBorder: string\n  accentBorderHover: string\n  accentSolid: string\n  accentSolidHover: string\n  accentText: string\n  accentTextContrast: string\n\n  // neutral colors\n  neutralBase: string\n  neutralBgSubtle: string\n  neutralBg: string\n  neutralBgHover: string\n  neutralBgActive: string\n  neutralLine: string\n  neutralBorder: string\n  neutralBorderHover: string\n  neutralSolid: string\n  neutralSolidHover: string\n  neutralText: string\n  neutralTextContrast: string\n\n  // secondary colors\n  secondaryBase: string\n  secondaryBgSubtle: string\n  secondaryBg: string\n  secondaryBgHover: string\n  secondaryBgActive: string\n  secondaryLine: string\n  secondaryBorder: string\n  secondaryBorderHover: string\n  secondarySolid: string\n  secondarySolidHover: string\n  secondaryText: string\n  secondaryTextContrast: string\n\n  // general colors\n  borderColor: string\n  textColor: string\n  focusColor: string\n  errorText: string\n  errorAccent: string\n  successAccent: string\n\n  // component colors\n  reservoirLogoColor: string\n  inputBackground: string\n  buttonTextColor: string\n  buttonTextHoverColor: string\n  overlayBackground: string\n  headerBackground: string\n  footerBackground: string\n  contentBackground: string\n  wellBackground: string\n  popoverBackground: string\n}\n\nexport type ReservoirKitOverrides = {\n  borderRadius?: string\n  font?: string\n  buttonFont?: string\n  buttonTextColor?: string\n  buttonTextHoverColor?: string\n  headlineFont?: string\n  primaryColor?: string\n  primaryHoverColor?: string\n  wellBackground?: string\n  textColor?: string\n  headerBackground?: string\n  contentBackground?: string\n  footerBackground?: string\n  overlayBackground?: string\n  popoverBackground?: string\n  borderColor?: string\n  ethIcon?: ReservoirKitTheme['assets']['ethIcon']\n}\n\ntype ReservoirKitSharedTheme = Pick<ReservoirKitTheme, 'fonts' | 'radii'>\n\nexport const sharedThemeConfig = (\n  overrides?: ReservoirKitOverrides\n): ReservoirKitSharedTheme => {\n  return {\n    radii: {\n      borderRadius: overrides?.borderRadius || '4px',\n    },\n    fonts: {\n      body: overrides?.font || 'sans-serif',\n      button: overrides?.buttonFont || overrides?.font || 'sans-serif',\n      headline: overrides?.headlineFont || overrides?.font || 'sans-serif',\n    },\n  }\n}\n","import React, { createContext, FC, ReactNode, useState } from 'react'\nimport {\n  ReservoirClientOptions,\n  ReservoirClient,\n  createClient,\n} from '@reservoir0x/reservoir-sdk'\nimport { version } from '../package.json'\nexport interface ReservoirClientProviderProps {\n  children: ReactNode\n  options: ReservoirClientOptions\n}\n\nexport const ReservoirClientContext = createContext<ReservoirClient | null>(\n  null\n)\n\nexport const ReservoirClientProvider: FC<ReservoirClientProviderProps> =\n  function ({ children, options }: ReservoirClientProviderProps) {\n    const [clientContext, _] = useState<ReservoirClient | null>(\n      createClient({ ...options, uiVersion: version })\n    )\n\n    return (\n      <ReservoirClientContext.Provider value={clientContext}>\n        {children}\n      </ReservoirClientContext.Provider>\n    )\n  }\n","{\n  \"name\": \"@reservoir0x/reservoir-kit-ui\",\n  \"description\": \"ReservoirKit is the official frontend kit to get you started building dApps with the ReservoirProtocol.\",\n  \"version\": \"1.2.2\",\n  \"author\": \"Reservoir Protocol\",\n  \"license\": \"MIT\",\n  \"source\": \"src/index.ts\",\n  \"exports\": \"./dist/index.module.js\",\n  \"module\": \"dist/index.module.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"type\": \"module\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"nft\",\n    \"reservoir\",\n    \"reservoirkit\",\n    \"protocol\",\n    \"sdk\"\n  ],\n  \"sideEffects\": false,\n  \"scripts\": {\n    \"clean\": \"rm -rf dist\",\n    \"version\": \"yarn version\",\n    \"version:package\": \"sh ../../scripts/package-version.sh\",\n    \"version:update\": \"yarn version ${0}; PACKAGE_VERSION=$(yarn version:package); git add -A; git commit -m \\\"🎉 Release ui package v$PACKAGE_VERSION\\\"; git tag v${PACKAGE_VERSION}-UI; git push --tags;\",\n    \"version:prerelease\": \"yarn version prerelease; RC_VERSION=$(yarn version:package); git add -A; git commit -m \\\"✨ Prerelease ui package v$RC_VERSION\\\"; git tag v${RC_VERSION}-UI; git push --tags;\",\n    \"changelog\": \"node ../../scripts/generate-changelog.js package=ui\"\n  },\n  \"dependencies\": {\n    \"@fortawesome/fontawesome-svg-core\": \"^6.1.1\",\n    \"@fortawesome/free-solid-svg-icons\": \"^6.1.1\",\n    \"@fortawesome/react-fontawesome\": \"^0.2.0\",\n    \"@radix-ui/colors\": \"^0.1.8\",\n    \"@radix-ui/react-collapsible\": \"1.0.3\",\n    \"@radix-ui/react-dialog\": \"1.0.4\",\n    \"@radix-ui/react-popover\": \"1.0.6\",\n    \"@radix-ui/react-scroll-area\": \"1.0.4\",\n    \"@radix-ui/react-select\": \"1.2.2\",\n    \"@radix-ui/react-slider\": \"1.1.2\",\n    \"@radix-ui/react-switch\": \"1.0.3\",\n    \"@radix-ui/react-toggle-group\": \"1.0.4\",\n    \"@radix-ui/react-tooltip\": \"1.0.6\",\n    \"@react-hookz/web\": \"^19.2.0\",\n    \"@reservoir0x/reservoir-sdk\": \"^1.1.15\",\n    \"@stitches/react\": \"1.3.1-1\",\n    \"dayjs\": \"^1.11.4\",\n    \"flatpickr\": \"^4.6.13\",\n    \"framer-motion\": \"^6.4.2\",\n    \"react-flatpickr\": \"^3.10.13\",\n    \"swr\": \"2.0.1\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^18.0\",\n    \"react-dom\": \"^18.0\",\n    \"viem\": \"~1.0.6\",\n    \"wagmi\": \"~1.2.1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/reservoirprotocol/reservoir-kit\"\n  }\n}\n","import { createStitches } from '@stitches/react'\nimport type * as Stitches from '@stitches/react'\nimport { ReservoirKitTheme } from './src/themes/ReservoirKitTheme'\n\nexport type CSS = Stitches.CSS<typeof config>\nexport type CSSProps = { css?: CSS }\n\nexport const {\n  createTheme,\n  keyframes,\n  styled,\n  globalCss,\n  getCssText,\n  theme,\n  config,\n} = createStitches({\n  theme: {\n    space: {\n      1: '4px',\n      2: '8px',\n      3: '12px',\n      4: '16px',\n      5: '32px',\n      6: '64px',\n    },\n    fontSizes: {},\n    fontWeights: {},\n    fonts: {\n      body: 'sans-serif',\n      button: '$body',\n    },\n    lineHeights: {},\n    letterSpacings: {},\n    sizes: {},\n    radii: {\n      borderRadius: 0,\n    },\n    shadows: {},\n    transitions: {},\n  },\n  utils: {\n    // MARGIN\n    m: (value: Stitches.PropertyValue<'margin'>) => ({\n      margin: value,\n    }),\n    mx: (value: Stitches.PropertyValue<'margin'>) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (value: Stitches.PropertyValue<'margin'>) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n    mt: (value: Stitches.PropertyValue<'margin'>) => ({\n      marginTop: value,\n    }),\n    mb: (value: Stitches.PropertyValue<'margin'>) => ({\n      marginBottom: value,\n    }),\n    ml: (value: Stitches.PropertyValue<'margin'>) => ({\n      marginLeft: value,\n    }),\n    mr: (value: Stitches.PropertyValue<'margin'>) => ({\n      marginRight: value,\n    }),\n\n    // PADDING\n    p: (value: Stitches.PropertyValue<'padding'>) => ({\n      padding: value,\n    }),\n    px: (value: Stitches.PropertyValue<'padding'>) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (value: Stitches.PropertyValue<'padding'>) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n    pt: (value: Stitches.PropertyValue<'padding'>) => ({\n      paddingTop: value,\n    }),\n    pb: (value: Stitches.PropertyValue<'padding'>) => ({\n      paddingBottom: value,\n    }),\n    pl: (value: Stitches.PropertyValue<'padding'>) => ({\n      paddingLeft: value,\n    }),\n    pr: (value: Stitches.PropertyValue<'padding'>) => ({\n      paddingRight: value,\n    }),\n    // DIMENSIONS\n    w: (value: Stitches.PropertyValue<'width'>) => ({\n      width: value,\n    }),\n    h: (value: Stitches.PropertyValue<'height'>) => ({\n      height: value,\n    }),\n    size: (value: Stitches.PropertyValue<'width'>) => ({\n      width: value,\n      height: value,\n    }),\n  },\n  media: {\n    bp1: '(min-width: 600px)',\n    bp2: '(min-width: 905px)',\n    bp3: '(min-width: 1240px)',\n    bp4: '(min-width: 1440px)',\n    motion: '(prefers-reduced-motion)',\n    hover: '(any-hover: hover)',\n    dark: '(prefers-color-scheme: dark)',\n    light: '(prefers-color-scheme: light)',\n  },\n  prefix: 'rk',\n})\n\nexport type ReservoirKitThemeContext = {\n  assets: {\n    ethIcon: {\n      value: ReservoirKitTheme['assets']['ethIcon']\n    }\n  }\n} & typeof theme\n","import { ComponentPropsWithoutRef } from 'react'\nimport { SWRConfig } from 'swr'\nimport { version } from '../../package.json'\n\nexport const defaultHeaders = (\n  apiKey?: string | null,\n  clientVersion?: string | null\n) => {\n  const headers: HeadersInit = {\n    'x-rkui-version': version,\n  }\n  if (apiKey) {\n    headers['x-api-key'] = apiKey\n  }\n  if (clientVersion) {\n    headers['x-rkc-version'] = clientVersion\n  }\n  return headers\n}\n\nexport const defaultFetcher = (params: string[] | string) => {\n  let resource\n  let apiKey\n  let clientVersion\n  if (Array.isArray(params)) {\n    resource = params[0]\n    apiKey = params[1]\n    clientVersion = params[2]\n  } else {\n    resource = params\n  }\n  const headers = defaultHeaders(apiKey, clientVersion)\n  return fetch(resource, {\n    headers,\n  })\n    .then((res) => {\n      if (res.headers.get('deprecation') === 'true') {\n        console.warn(\n          `Warning: API ${res.url} is deprecated. Stability and performance may be affected.`\n        )\n      }\n\n      return res.json()\n    })\n    .catch((e) => {\n      throw e\n    })\n}\n\nexport const swrDefaultOptions: ComponentPropsWithoutRef<\n  typeof SWRConfig\n>['value'] = {\n  fetcher: defaultFetcher,\n  revalidateOnFocus: false,\n}\n","import { globalCss, keyframes } from '../../stitches.config'\n\nconst fpFadeInDown = keyframes({\n  '0%': {\n    opacity: 0,\n    transform: 'translate3d(0, -20px, 0)',\n  },\n  '100%': {\n    opacity: 1,\n    transform: 'translate3d(0, 0, 0)',\n  },\n})\n\nconst calendarCss = globalCss({\n  '.flatpickr-calendar': {\n    opacity: 0,\n    display: 'none',\n    textAlign: 'center',\n    visibility: 'hidden',\n    padding: 20,\n    animation: 'none',\n    direction: 'ltr',\n    fontSize: 14,\n    lineHeight: '24px',\n    borderRadius: 5,\n    position: 'absolute',\n    width: 307.875,\n    boxSizing: 'border-box',\n    touchAction: 'manipulation',\n    backgroundColor: '$contentBackground',\n    boxShadow:\n      '1px 0 0 #20222c, -1px 0 0 #20222c, 0 1px 0 #20222c, 0 -1px 0 #20222c, 0 3px 13px rgba(0,0,0,0.08)',\n    border: '1px solid $borderColor',\n    fontFamily: '$body',\n  },\n  '.flatpickr-calendar.open': {\n    opacity: 1,\n    maxHeight: 640,\n    visibility: 'visible',\n    display: 'inline-block',\n    zIndex: 99999,\n    pointerEvents: 'all',\n  },\n  '.flatpickr-calendar.inline': {\n    opacity: 1,\n    maxHeight: 640,\n    visibility: 'visible',\n    display: 'block',\n    position: 'relative',\n    top: 2,\n  },\n  '.flatpickr-calendar.animate.open': {\n    animation: `${fpFadeInDown} 300ms cubic-bezier(0.23, 1, 0.32, 1)`,\n  },\n  '.flatpickr-calendar.static': {\n    position: 'absolute',\n    top: 'calc(100% + 2px)',\n  },\n  '.flatpickr-calendar.static.open': {\n    zIndex: 999,\n    display: 'block',\n  },\n  '.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7)':\n    {\n      boxShadow: 'none !important',\n    },\n  '.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1)':\n    {\n      boxShadow: '-2px 0 0 #e6e6e6, 5px 0 0 #e6e6e6',\n    },\n  '.flatpickr-calendar .hasWeeks .dayContainer': {\n    borderBottom: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: 0,\n  },\n  '.flatpickr-calendar .hasTime .dayContainer': {\n    borderBottom: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  '.flatpickr-calendar.hasTime .flatpickr-time': {\n    height: 40,\n  },\n  '.flatpickr-calendar.noCalendar.hasTime .flatpickr-time': {\n    height: 'auto',\n  },\n  '.flatpickr-calendar:before': {\n    position: 'absolute',\n    display: 'block',\n    pointerEvents: 'none',\n    border: 'solid transparent',\n    content: '',\n    height: 0,\n    width: 0,\n    left: 22,\n    borderWidth: 5,\n    margin: '0 -5px',\n  },\n  '.flatpickr-calendar:after': {\n    position: 'absolute',\n    display: 'block',\n    pointerEvents: 'none',\n    border: 'solid transparent',\n    content: '',\n    height: 0,\n    width: 0,\n    left: 22,\n    borderWidth: 4,\n    margin: '0 -4px',\n  },\n  '.flatpickr-calendar.rightMost:before, .flatpickr-calendar.arrowRight:before, .flatpickr-calendar.rightMost:after, .flatpickr-calendar.arrowRight:after':\n    {\n      left: 'auto',\n      right: 22,\n    },\n  '.flatpickr-calendar.arrowCenter:before, .flatpickr-calendar.arrowCenter:after':\n    {\n      left: '50%',\n      right: '50%',\n    },\n  '.flatpickr-calendar.arrowTop:before, .flatpickr-calendar.arrowTop:after': {\n    bottom: '100%',\n  },\n  '.flatpickr-calendar.arrowTop:before': {\n    display: 'none',\n  },\n  '.flatpickr-calendar.arrowTop:after': {\n    display: 'none',\n  },\n  '.flatpickr-calendar.arrowBottom:before, .flatpickr-calendar.arrowBottom:after':\n    {\n      top: '100%',\n    },\n  '.flatpickr-calendar.arrowBottom:before': {\n    display: 'none',\n  },\n  '.flatpickr-calendar.arrowBottom:after': {\n    display: 'none',\n  },\n  '.flatpickr-calendar:focus': {\n    outline: 0,\n  },\n  '.flatpickr-wrapper': {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  '.flatpickr-months': {\n    display: 'flex',\n  },\n  '.flatpickr-months .flatpickr-month': {\n    backgroundColor: '$contentBackground',\n    color: '$neutralTextContrast',\n    fill: '$neutralTextContrast',\n    height: 34,\n    lineHeight: '1px',\n    textAlign: 'center',\n    position: 'relative',\n    userSelect: 'none',\n    overflow: 'hidden',\n    flex: 1,\n    marginBottom: 8,\n  },\n  '.flatpickr-months .flatpickr-prev-month, .flatpickr-months .flatpickr-next-month':\n    {\n      userSelect: 'none',\n      textDecoration: 'none',\n      cursor: 'pointer',\n      position: 'absolute',\n      top: 20,\n      height: 34,\n      padding: 10,\n      zIndex: 3,\n      color: '$neutralText',\n      fill: '$neutralText',\n    },\n  '.flatpickr-months .flatpickr-prev-month.flatpickr-disabled, .flatpickr-months .flatpickr-next-month.flatpickr-disabled':\n    {\n      display: 'none',\n    },\n  '.flatpickr-months .flatpickr-prev-month i, .flatpickr-months .flatpickr-next-month i':\n    {\n      position: 'relative',\n    },\n  '.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month, .flatpickr-months .flatpickr-next-month.flatpickr-prev-month':\n    {\n      left: 0,\n    },\n  '.flatpickr-months .flatpickr-prev-month.flatpickr-next-month, .flatpickr-months .flatpickr-next-month.flatpickr-next-month':\n    {\n      right: 0,\n    },\n  '.flatpickr-months .flatpickr-prev-month:hover, .flatpickr-months .flatpickr-next-month:hover':\n    {\n      color: '$neutralText',\n    },\n  '.flatpickr-months .flatpickr-prev-month:hover svg, .flatpickr-months .flatpickr-next-month:hover svg':\n    {\n      fill: '$neutralTextContrast',\n    },\n  '.flatpickr-months .flatpickr-prev-month svg, .flatpickr-months .flatpickr-next-month svg':\n    {\n      width: 14,\n      height: 14,\n    },\n  '.flatpickr-months .flatpickr-prev-month svg path, .flatpickr-months .flatpickr-next-month svg path':\n    {\n      transition: 'fill 0.1s',\n      fill: 'inherit',\n    },\n  '.numInputWrapper': {\n    position: 'relative',\n    height: 'auto',\n  },\n  '.numInputWrapper input, .numInputWrapper span': {\n    display: 'inline-block',\n  },\n  '.numInputWrapper input': {\n    width: '100%',\n  },\n  '.numInputWrapper input::-ms-clear': {\n    display: 'none',\n  },\n  '.numInputWrapper input::-webkit-outer-spin-button, .numInputWrapper input::-webkit-inner-spin-button':\n    {\n      margin: 0,\n      '-webkit-appearance': 'none',\n    },\n  '.numInputWrapper span': {\n    position: 'absolute',\n    right: 0,\n    width: 14,\n    padding: '0 4px 0 2px',\n    height: '50%',\n    lineHeight: '50%',\n    opacity: 0,\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n  },\n  '.numInputWrapper span:hover': {\n    background: '$neutralBgHover',\n  },\n  '.numInputWrapper span:active': {\n    background: '$neutralBgActive',\n  },\n  '.numInputWrapper span:after': {\n    display: 'block',\n    content: '',\n    position: 'absolute',\n  },\n  '.numInputWrapper span.arrowUp': {\n    top: 0,\n    borderBottom: 0,\n  },\n  '.numInputWrapper span.arrowUp:after': {\n    borderLeft: '4px solid transparent',\n    borderRight: '4px solid transparent',\n    borderBottom: '4px solid $neutralText',\n    top: '26%',\n  },\n  '.numInputWrapper span.arrowDown': {\n    top: '50%',\n  },\n  '.numInputWrapper span.arrowDown:after': {\n    borderLeft: '4px solid transparent',\n    borderRight: '4px solid transparent',\n    borderTop: '4px solid $neutralText',\n    top: '40%',\n  },\n  '.numInputWrapper span svg': {\n    width: 'inherit',\n    height: 'auto',\n  },\n  '.numInputWrapper span svg path': {\n    fill: '$neutralBgHover',\n  },\n  '.numInputWrapper:hover': {\n    background: '$neutralBgHover',\n  },\n  '.numInputWrapper:hover span': {\n    opacity: 1,\n  },\n  '.flatpickr-current-month': {\n    fontSize: '135%',\n    fontWeight: 300,\n    color: '$neutralText',\n    position: 'absolute',\n    width: '83%',\n    left: '12.5%',\n    lineHeight: '1px',\n    height: 34,\n    display: 'flex',\n    alignItems: 'center',\n    gap: 12,\n    textAlign: 'center',\n    transform: 'translate3d(0px, 0px, 0px)',\n  },\n  '.flatpickr-current-month span.cur-month': {\n    fontFamily: 'inherit',\n    fontWeight: 700,\n    color: '$neutralText',\n    display: 'inline-block',\n    marginLeft: '0.5ch',\n    padding: 0,\n  },\n  '.flatpickr-current-month span.cur-month:hover': {\n    background: 'rgba(192,187,167,0.05)',\n  },\n  '.flatpickr-current-month .numInputWrapper': {\n    width: '7ch\\0',\n    display: 'inline-block',\n  },\n  '.flatpickr-current-month .numInputWrapper span.arrowUp:after': {\n    borderBottomColor: '$neutralText',\n  },\n  '.flatpickr-current-month .numInputWrapper span.arrowDown:after': {\n    borderTopColor: '$neutralText',\n  },\n  '.flatpickr-current-month input.cur-year': {\n    backgroundColor: 'transparent',\n    boxSizing: 'border-box',\n    color: '$neutralText',\n    cursor: 'text',\n    margin: 0,\n    display: 'inline-block',\n    fontSize: 'inherit',\n    fontFamily: 'inherit',\n    lineHeight: 'inherit',\n    height: 'auto',\n    border: 0,\n    borderRadius: 0,\n    verticalAlign: 'initial',\n    appearance: 'textfield',\n    padding: '4px 0px',\n  },\n  '.flatpickr-current-month input.cur-year:focus': {\n    outline: 0,\n  },\n  '.flatpickr-current-month input.cur-year[disabled], .flatpickr-current-month input.cur-year[disabled]:hover':\n    {\n      fontSize: '100%',\n      color: '$neutralText',\n      background: 'transparent',\n      pointerEvents: 'none',\n    },\n  '.flatpickr-current-month .flatpickr-monthDropdown-months': {\n    appearance: 'menulist',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    color: '$neutralText',\n    cursor: 'pointer',\n    fontSize: 'inherit',\n    fontFamily: 'inherit',\n    height: 'auto',\n    lineHeight: 'inherit',\n    outline: 'none',\n    position: 'relative',\n    verticalAlign: 'initial',\n    width: 'auto',\n    padding: '4px 8px',\n  },\n  '.flatpickr-current-month .flatpickr-monthDropdown-months:focus, .flatpickr-current-month .flatpickr-monthDropdown-months:active':\n    {\n      outline: 'none',\n    },\n  '.flatpickr-current-month .flatpickr-monthDropdown-months:hover': {\n    backgroundColor: '$neutralBgHover',\n  },\n  '.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month':\n    {\n      backgroundColor: '$neutralBg',\n      outline: 'none',\n      padding: 0,\n    },\n  '.flatpickr-weekdays': {\n    backgroundColor: 'transparent',\n    color: '$neutralText',\n    textAlign: 'center',\n    overflow: 'hidden',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    height: 28,\n    border: 'transparent',\n    marginBottom: 8,\n  },\n  '.flatpickr-weekdays .flatpickr-weekdaycontainer': {\n    display: 'flex',\n    flex: 1,\n  },\n  'span.flatpickr-weekday': {\n    cursor: 'default',\n    fontSize: '90%',\n    background: 'transparent',\n    color: '$neutralText',\n    lineHeight: '1px',\n    margin: 0,\n    textAlign: 'center',\n    display: 'block',\n    flex: 1,\n    fontWeight: 'bolder',\n  },\n  '.dayContainer, .flatpickr-weeks': {\n    padding: '1px 0 0 0',\n  },\n  '.flatpickr-days': {\n    position: 'relative',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'flex-start',\n    width: 307.875,\n    marginBottom: 12,\n  },\n  '.flatpickr-days:focus': {\n    outline: 0,\n  },\n  '.dayContainer': {\n    padding: 0,\n    outline: 0,\n    textAlign: 'left',\n    width: 307.875,\n    minWidth: 307.875,\n    maxWidth: 307.875,\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    '-ms-flex-pack': 'justify',\n    justifyContent: 'space-around',\n    transform: 'translate3d(0px, 0px, 0px)',\n    opacity: 1,\n  },\n  '.dayContainer + .dayContainer': {\n    boxShadow: '-1px 0 0 #20222c',\n  },\n  '.flatpickr-day': {\n    background: 'none',\n    border: '1px solid transparent',\n    borderRadius: 150,\n    boxSizing: 'border-box',\n    color: '$neutralText',\n    cursor: 'pointer',\n    fontWeight: 400,\n    width: '14.2857143%',\n    flexBasis: '14.2857143%',\n    maxWidth: 39,\n    height: 39,\n    lineHeight: '39px',\n    margin: 0,\n    display: 'inline-block',\n    position: 'relative',\n    '-webkit-box-pack': 'center',\n    '-ms-flex-pack': 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  '.flatpickr-day.inRange, .flatpickr-day.prevMonthDay.inRange, .flatpickr-day.nextMonthDay.inRange, .flatpickr-day.today.inRange, .flatpickr-day.prevMonthDay.today.inRange, .flatpickr-day.nextMonthDay.today.inRange, .flatpickr-day:hover, .flatpickr-day.prevMonthDay:hover, .flatpickr-day.nextMonthDay:hover, .flatpickr-day:focus, .flatpickr-day.prevMonthDay:focus, .flatpickr-day.nextMonthDay:focus':\n    {\n      cursor: 'pointer',\n      outline: 0,\n      backgroundColor: '$accentBg',\n      borderColor: '$neutralBorder',\n    },\n  '.flatpickr-day.today': {\n    borderColor: '$neutralBorder',\n  },\n  '.flatpickr-day.today:hover, .flatpickr-day.today:focus': {\n    borderColor: '$neutralBorder',\n    backgroundColor: '$neutralBg',\n    color: '$buttonTextColor',\n  },\n  '.flatpickr-day.selected, .flatpickr-day.startRange, .flatpickr-day.endRange, .flatpickr-day.selected.inRange, .flatpickr-day.startRange.inRange, .flatpickr-day.endRange.inRange, .flatpickr-day.selected:focus, .flatpickr-day.startRange:focus, .flatpickr-day.endRange:focus, .flatpickr-day.selected:hover, .flatpickr-day.startRange:hover, .flatpickr-day.endRange:hover, .flatpickr-day.selected.prevMonthDay, .flatpickr-day.startRange.prevMonthDay, .flatpickr-day.endRange.prevMonthDay, .flatpickr-day.selected.nextMonthDay, .flatpickr-day.startRange.nextMonthDay, .flatpickr-day.endRange.nextMonthDay':\n    {\n      backgroundColor: '$accentBg',\n      boxShadow: 'none',\n      color: '$neutralTextContrast',\n      borderColor: '$borderColor',\n    },\n  '.flatpickr-day.selected.startRange, .flatpickr-day.startRange.startRange, .flatpickr-day.endRange.startRange':\n    {\n      borderRadius: '50px 0 0 50px',\n    },\n  '.flatpickr-day.selected.endRange, .flatpickr-day.startRange.endRange, .flatpickr-day.endRange.endRange':\n    {\n      borderRadius: '0 50px 50px 0',\n    },\n  '.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)), .flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)), .flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1))':\n    {\n      boxShadow: '-10px 0 0 #80cbc4',\n    },\n  '.flatpickr-day.selected.startRange.endRange, .flatpickr-day.startRange.startRange.endRange, .flatpickr-day.endRange.startRange.endRange':\n    {\n      borderRadius: 50,\n    },\n  '.flatpickr-day.inRange': {\n    borderRadius: 0,\n    boxShadow: '-5px 0 0 #646c8c, 5px 0 0 #646c8c',\n  },\n  '.flatpickr-day.flatpickr-disabled, .flatpickr-day.flatpickr-disabled:hover, .flatpickr-day.prevMonthDay, .flatpickr-day.nextMonthDay, .flatpickr-day.notAllowed, .flatpickr-day.notAllowed.prevMonthDay, .flatpickr-day.notAllowed.nextMonthDay':\n    {\n      color: '$neutralText',\n      background: 'transparent',\n      borderColor: 'transparent',\n      cursor: 'default',\n    },\n  '.flatpickr-day.flatpickr-disabled, .flatpickr-day.flatpickr-disabled:hover':\n    {\n      cursor: 'not-allowed',\n      color: '$neutralText',\n      opacity: 0.5,\n    },\n  '.flatpickr-day.week.selected': {\n    borderRadius: 0,\n    boxShadow: '-5px 0 0 #80cbc4, 5px 0 0 #80cbc4',\n  },\n  '.flatpickr-day.hidden': {\n    visibility: 'hidden',\n  },\n  '.rangeMode .flatpickr-day': {\n    marginTop: 1,\n  },\n  '.flatpickr-weekwrapper': {\n    float: 'left',\n  },\n  '.flatpickr-weekwrapper .flatpickr-weeks': {\n    padding: '0 12px',\n    boxShadow: '1px 0 0 #20222c',\n  },\n  '.flatpickr-weekwrapper .flatpickr-weekday': {\n    float: 'none',\n    width: '100%',\n    lineHeight: '28px',\n  },\n  '.flatpickr-weekwrapper span.flatpickr-day, .flatpickr-weekwrapper span.flatpickr-day:hover':\n    {\n      display: 'block',\n      width: '100%',\n      maxWidth: 'none',\n      color: '$neutralText',\n      background: 'transparent',\n      cursor: 'default',\n      border: 'none',\n    },\n  '.flatpickr-innerContainer': {\n    display: 'flex',\n    boxSizing: 'border-box',\n    overflow: 'hidden',\n  },\n  '.flatpickr-rContainer': {\n    display: 'inline-block',\n    padding: 0,\n    boxSizing: 'border-box',\n  },\n  '.flatpickr-time': {\n    textAlign: 'center',\n    outline: 0,\n    height: 0,\n    lineHeight: '40px',\n    maxHeight: 40,\n    boxSizing: 'border-box',\n    overflow: 'hidden',\n    display: 'flex',\n  },\n  '.flatpickr-time:after': {\n    content: '',\n    display: 'table',\n    clear: 'both',\n  },\n  '.flatpickr-time .numInputWrapper': {\n    flex: 1,\n    width: '40%',\n    height: 40,\n    float: 'left',\n  },\n  '.flatpickr-time .numInputWrapper span.arrowUp:after': {\n    borderBottomColor: '$neutralText',\n  },\n  '.flatpickr-time .numInputWrapper span.arrowDown:after': {\n    borderTopColor: '$neutralText',\n  },\n  '.flatpickr-time.hasSeconds .numInputWrapper': {\n    width: '26%',\n  },\n  '.flatpickr-time.time24hr .numInputWrapper': {\n    width: '49%',\n  },\n  '.flatpickr-time input': {\n    background: 'transparent',\n    boxShadow: 'none',\n    border: 0,\n    borderRadius: 0,\n    textAlign: 'center',\n    margin: 0,\n    padding: 0,\n    height: 'inherit',\n    lineHeight: 'inherit',\n    color: '$neutralText',\n    fontSize: 14,\n    position: 'relative',\n    boxSizing: 'border-box',\n    appearance: 'textfield',\n  },\n  '.flatpickr-time input.flatpickr-hour': {},\n  '.flatpickr-time input.flatpickr-minute, .flatpickr-time input.flatpickr-second':\n    {\n      fontWeight: 400,\n    },\n  '.flatpickr-time input:focus': {\n    outline: 0,\n    border: 0,\n  },\n  '.flatpickr-time .flatpickr-time-separator, .flatpickr-time .flatpickr-am-pm':\n    {\n      height: 'inherit',\n      float: 'left',\n      lineHeight: 'inherit',\n      color: '$neutralText',\n      fontWeight: 'bold',\n      width: '2%',\n      userSelect: 'none',\n      '-ms-flex-item-align': 'center',\n      alignSelf: 'center',\n    },\n  '.flatpickr-time .flatpickr-am-pm': {\n    outline: 0,\n    width: '18%',\n    cursor: 'pointer',\n    textAlign: 'center',\n    fontWeight: 400,\n  },\n  '.flatpickr-time input:hover, .flatpickr-time .flatpickr-am-pm:hover, .flatpickr-time input:focus, .flatpickr-time .flatpickr-am-pm:focus':\n    {\n      background: '$neutralBgHover',\n    },\n  '.flatpickr-input[readonly]': {\n    cursor: 'pointer',\n  },\n  '.flatpickr-input.flatpickr-mobile': {\n    '&::-webkit-inner-spin-button': {\n      display: 'none',\n      '-webkit-appearance': 'none',\n    },\n    '&::-webkit-calendar-picker-indicator': {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      backgroundImage: 'none',\n    },\n    '&::-webkit-datetime-edit': {\n      display: 'none',\n      '-webkit-appearance': 'none',\n    },\n    '&::-webkit-date-and-time-value': {\n      display: 'none',\n      '-webkit-appearance': 'none',\n    },\n  },\n  '@-moz-document url-prefix()': {\n    '@media only screen and (max-width: 600px)': {\n      '.flatpickr-input[type=\"text\"]': {\n        color: 'transparent',\n      },\n    },\n  },\n})\n\nexport default calendarCss\n","import { useEffect, useState } from 'react'\n\nconst useMutationObservable = (\n  callback: MutationCallback,\n  el?: HTMLElement | null,\n  options?: MutationObserverInit\n) => {\n  const [observer, setObserver] = useState<MutationObserver | null>(null)\n\n  useEffect(() => {\n    if (observer) {\n      observer.disconnect()\n    }\n    if (\n      !el ||\n      typeof window === 'undefined' ||\n      !('MutationObserver' in window)\n    ) {\n      return\n    }\n\n    const obs = new MutationObserver(callback)\n    obs.observe(el, options)\n    setObserver(obs)\n\n    return () => {\n      obs.disconnect()\n    }\n  }, [el, callback, options])\n\n  return observer\n}\n\nexport default useMutationObservable\n","import { paths } from '@reservoir0x/reservoir-sdk'\nimport useSWR, { SWRConfiguration } from 'swr'\nimport useReservoirClient from './useReservoirClient'\n\ntype AttributesResponse =\n  paths['/collections/{collection}/attributes/all/v2']['get']['responses']['200']['schema']\n\nexport default function (\n  collection?: string | undefined,\n  chainId?: number,\n  swrOptions: SWRConfiguration = {}\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const pathname = `${chain?.baseApiUrl}/collections/${collection}/attributes/all/v2`\n\n  const path = collection ? new URL(pathname) : null\n\n  const { data, mutate, error, isValidating } = useSWR<AttributesResponse>(\n    path ? [path.href, chain?.apiKey, client?.version] : null,\n    null,\n    {\n      revalidateOnMount: true,\n      ...swrOptions,\n    }\n  )\n  const collections: AttributesResponse['attributes'] | null =\n    data && data.attributes ? data.attributes : null\n\n  return { response: data, data: collections, mutate, error, isValidating }\n}\n","import { ReservoirClientContext } from '../ReservoirClientProvider'\nimport { useContext } from 'react'\n\nexport default function () {\n  return useContext(ReservoirClientContext)\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport { useInfiniteApi, useReservoirClient } from './'\nimport { useMemo } from 'react'\n\ntype Bids = paths['/orders/bids/v5']['get']['responses']['200']['schema']\ntype BidsQuery = paths['/orders/bids/v5']['get']['parameters']['query']\n\nexport default function (\n  options: BidsQuery,\n  swrOptions: SWRInfiniteConfiguration = {},\n  enabled: boolean = true,\n  chainId?: number\n) {\n  const client = useReservoirClient()\n\n  const response = useInfiniteApi<Bids>(\n    (pageIndex, previousPageData) => {\n      if (!enabled) {\n        return null\n      }\n\n      const chain =\n        chainId !== undefined\n          ? client?.chains.find((chain) => chain.id === chainId)\n          : client?.currentChain()\n\n      const url = new URL(`${chain?.baseApiUrl || ''}/orders/bids/v5`)\n      let query = options || {}\n\n      if (\n        query.normalizeRoyalties === undefined &&\n        client?.normalizeRoyalties !== undefined\n      ) {\n        query.normalizeRoyalties = client?.normalizeRoyalties\n      }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      setParams(url, query)\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const bids = useMemo(\n    () => response.data?.flatMap((page) => page.orders || []) ?? [],\n    [response.data]\n  )\n\n  return {\n    ...response,\n    data: bids,\n  }\n}\n","import { useState } from 'react'\nimport { useSWRConfig } from 'swr'\nimport useSWRInfinite from 'swr/infinite'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\n\ntype SWRInfiniteParams = Parameters<typeof useSWRInfinite>\n\nexport default function <ResponseType>(\n  getKey: SWRInfiniteParams['0'],\n  options: SWRInfiniteConfiguration,\n  limit?: number\n) {\n  const { mutate: globalMutate } = useSWRConfig()\n  const [keys, setKeys] = useState<string[]>([])\n  const response = useSWRInfinite<ResponseType>(\n    (pageIndex, previousPageData) => {\n      const params = getKey(pageIndex, previousPageData)\n      const key = params && params[0] ? params[0] : null\n      if (key && !keys.includes(key)) {\n        setKeys([...keys, key])\n      }\n      return params\n    },\n    null,\n    options\n  )\n\n  const { size, error, setSize, mutate } = response\n  const data = response.data as any\n  let hasNextPage: boolean\n  if (limit !== undefined) {\n    hasNextPage =\n      size === 0 || Boolean(data?.[size - 1]?.collections?.length === limit)\n  } else {\n    hasNextPage = size === 0 || Boolean(data?.[size - 1]?.continuation)\n  }\n  const isFetchingInitialData = !data && !error && size > 0\n  const isFetchingPage =\n    size > 0 &&\n    (isFetchingInitialData || (data && typeof data[size - 1] === 'undefined'))\n\n  const fetchNextPage = () => {\n    if (!isFetchingPage && hasNextPage) {\n      setSize((size) => size + 1)\n    }\n  }\n\n  const resetCache = () => {\n    setSize(0)\n    return mutate(undefined, {\n      revalidate: false,\n    }).then(() => {\n      globalMutate(\n        (key) => {\n          const url = key && key[0] ? key[0] : null\n          if (url) {\n            return keys.includes(url)\n          }\n          return false\n        },\n        undefined,\n        false\n      ).then(() => {\n        setKeys([])\n      })\n    })\n  }\n\n  return {\n    ...response,\n    hasNextPage,\n    isFetchingInitialData,\n    isFetchingPage,\n    resetCache,\n    fetchNextPage,\n  }\n}\n","import { Cart, CartContext } from '../context/CartProvider'\nimport { useContext, useSyncExternalStore } from 'react'\n\nexport default function useCart<SelectorOutput>(\n  selector: (store: Cart) => SelectorOutput\n) {\n  const cart = useContext(CartContext)\n  if (!cart) {\n    throw new Error('Cart not found')\n  }\n\n  const data = useSyncExternalStore(\n    cart.subscribe,\n    () => selector(cart.get()),\n    () => selector(cart.get())\n  )\n  const {\n    clear,\n    remove,\n    add,\n    validate,\n    checkout,\n    clearTransaction,\n    setQuantity,\n  } = cart\n\n  return {\n    data,\n    clear,\n    clearTransaction,\n    setQuantity,\n    remove,\n    add,\n    validate,\n    checkout,\n    set: cart.set,\n  }\n}\n","import {\n  Execute,\n  LogLevel,\n  ReservoirChain,\n  ReservoirClientActions,\n  paths,\n  setParams,\n} from '@reservoir0x/reservoir-sdk'\nimport { useListings, useReservoirClient, useTokens } from '../hooks'\nimport { getChainCurrency } from '../hooks/useChainCurrency'\nimport { defaultFetcher } from '../lib/swr'\nimport React, {\n  createContext,\n  useCallback,\n  useRef,\n  ReactNode,\n  useEffect,\n  FC,\n} from 'react'\nimport { useAccount, useNetwork, useSwitchNetwork } from 'wagmi'\nimport { formatUnits, parseUnits, zeroAddress } from 'viem'\nimport { version } from '../../package.json'\nimport { getNetwork, getWalletClient } from 'wagmi/actions'\n\ntype Order = NonNullable<ReturnType<typeof useListings>['data'][0]>\ntype OrdersSchema =\n  paths['/orders/asks/v4']['get']['responses']['200']['schema']\ntype Token = NonNullable<ReturnType<typeof useTokens>['data'][0]>\ntype TokensSchema = paths['/tokens/v6']['get']['responses']['200']['schema']\ntype FloorAsk = NonNullable<NonNullable<Token['market']>['floorAsk']>\ntype CartItemPrice = FloorAsk['price']\ntype Currency = NonNullable<NonNullable<CartItemPrice>['currency']>\ntype BuyTokenOptions = Parameters<\n  ReservoirClientActions['buyToken']\n>['0']['options']\n\nexport enum CheckoutStatus {\n  Idle,\n  Approving,\n  Finalizing,\n  Complete,\n}\n\nexport enum CheckoutTransactionError {\n  Unknown,\n  PiceMismatch,\n  InsufficientBalance,\n  UserDenied,\n}\n\ntype CartItem = {\n  token: {\n    id: string\n    name: string\n  }\n  collection: {\n    id: string\n    name: string\n  }\n  order?: {\n    id: string\n    quantityRemaining: number\n    quantity: number\n    maker: string\n  }\n  price: CartItemPrice\n  poolId?: string\n  poolPrices?: CartItemPrice[]\n  previousPrice?: CartItemPrice\n}\n\nexport type Cart = {\n  totalPrice: number\n  currency?: NonNullable<CartItemPrice>['currency']\n  feeOnTop?: number\n  feesOnTopBps?: string[]\n  items: CartItem[]\n  pools: Record<string, { prices: CartItemPrice[]; itemCount: number }>\n  isValidating: boolean\n  chain?: ReservoirChain\n  pendingTransactionId?: string\n  transaction: {\n    id?: string\n    txHash?: string\n    chain: ReservoirChain\n    items: CartItem[]\n    error?: Error\n    errorType?: CheckoutTransactionError\n    status: CheckoutStatus\n    steps?: Execute['steps']\n    path?: Execute['path']\n    currentStep?: Execute['steps'][0]\n  } | null\n}\n\nconst CartStorageKey = `reservoirkit.cart.${version}`\n\ntype CartStoreProps = {\n  feesOnTopBps?: string[]\n  persist?: boolean\n}\n\nfunction cartStore({ feesOnTopBps, persist = true }: CartStoreProps) {\n  const { address } = useAccount()\n  const { chains } = useNetwork()\n  const { switchNetworkAsync } = useSwitchNetwork()\n  const cartData = useRef<Cart>({\n    totalPrice: 0,\n    feesOnTopBps: undefined,\n    items: [],\n    pools: {},\n    isValidating: false,\n    transaction: null,\n  })\n\n  const subscribers = useRef(new Set<() => void>())\n  const client = useReservoirClient()\n\n  useEffect(() => {\n    if (persist && typeof window !== 'undefined' && window.localStorage) {\n      const storedCart = window.localStorage.getItem(CartStorageKey)\n      if (storedCart) {\n        const rehydratedCart: Cart = JSON.parse(storedCart)\n        const currency = getCartCurrency(\n          rehydratedCart.items,\n          rehydratedCart.chain?.id || 1\n        )\n        const pools = calculatePools(rehydratedCart.items)\n        const { totalPrice, feeOnTop } = calculatePricing(\n          rehydratedCart.items,\n          currency,\n          cartData.current.feesOnTopBps\n        )\n        cartData.current = {\n          ...cartData.current,\n          chain:\n            rehydratedCart.items.length > 0 ? rehydratedCart.chain : undefined,\n          items: rehydratedCart.items,\n          pools,\n          totalPrice,\n          feeOnTop,\n          currency,\n        }\n        subscribers.current.forEach((callback) => callback())\n        validate()\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    const currency = getCartCurrency(\n      cartData.current.items,\n      cartData.current.chain?.id || 1\n    )\n    const pools = calculatePools(cartData.current.items)\n    const { totalPrice, feeOnTop } = calculatePricing(\n      cartData.current.items,\n      currency,\n      feesOnTopBps\n    )\n    cartData.current = {\n      ...cartData.current,\n      pools,\n      totalPrice,\n      feesOnTopBps,\n      feeOnTop,\n      currency,\n    }\n    commit()\n  }, [feesOnTopBps])\n\n  const get = useCallback(() => cartData.current, [])\n  const set = useCallback((value: Partial<Cart>) => {\n    cartData.current = { ...cartData.current, ...value }\n    commit()\n  }, [])\n\n  const subscribe = useCallback((callback: () => void) => {\n    subscribers.current.add(callback)\n    return () => subscribers.current.delete(callback)\n  }, [])\n\n  const commit = useCallback(() => {\n    subscribers.current.forEach((callback) => callback())\n    if (persist && typeof window !== 'undefined' && window.localStorage) {\n      window.localStorage.setItem(\n        CartStorageKey,\n        JSON.stringify(cartData.current)\n      )\n    }\n  }, [persist])\n\n  const calculatePools = useCallback((items: CartItem[]) => {\n    const pools: Record<\n      string,\n      { prices: CartItemPrice[]; itemCount: number }\n    > = {}\n    items.forEach((item) => {\n      if (item.poolId) {\n        if (!pools[item.poolId] && item.poolPrices) {\n          pools[item.poolId] = { prices: item.poolPrices, itemCount: 1 }\n          item.price = item.poolPrices[0]\n        } else if (item.poolPrices) {\n          item.price = item.poolPrices[pools[item.poolId].itemCount]\n          pools[item.poolId].itemCount += 1\n        }\n      }\n    })\n    return pools\n  }, [])\n\n  const calculatePricing = useCallback(\n    (\n      items: Cart['items'],\n      currency?: Cart['currency'],\n      feesOnTopBps?: Cart['feesOnTopBps']\n    ) => {\n      let feeOnTop = 0\n      let subtotal = items.reduce((total, { price, order }) => {\n        let amount = price?.amount?.decimal\n        if (price?.currency?.contract !== currency?.contract) {\n          amount = price?.amount?.native\n        }\n\n        if (amount && order?.quantity) {\n          amount = amount * order?.quantity\n        }\n        return (total += amount || 0)\n      }, 0)\n      if (feesOnTopBps) {\n        feeOnTop = feesOnTopBps.reduce((total, feeOnTopBps) => {\n          const [_, feeBps] = feeOnTopBps.split(':')\n          total += (Number(feeBps || 0) / 10000) * subtotal\n          return total\n        }, 0)\n      }\n      subtotal = subtotal + feeOnTop\n      return {\n        totalPrice: subtotal,\n        feeOnTop,\n      }\n    },\n    []\n  )\n\n  const getCartCurrency = useCallback(\n    (items: CartItem[], chainId: number): Currency | undefined => {\n      let currencies = new Set<string>()\n      let currenciesData: Record<string, Currency> = {}\n      for (let i = 0; i < items.length; i++) {\n        const currency = items[i].price?.currency\n        if (currency?.contract) {\n          currencies.add(currency.contract)\n          currenciesData[currency.contract] = currency\n        }\n        if (currencies.size > 1) {\n          break\n        }\n      }\n      if (currencies.size > 1) {\n        return getChainCurrency(chains, chainId)\n      } else if (currencies.size > 0) {\n        return Object.values(currenciesData)[0]\n      }\n    },\n    [chains]\n  )\n\n  const fetchTokens = useCallback(\n    async (tokenIds: string[], chainId: number) => {\n      if (!tokenIds || tokenIds.length === 0) {\n        return { tokens: [] }\n      }\n\n      const reservoirChain = client?.chains.find(\n        (chain) => chain.id === chainId\n      )\n      const url = new URL(`${reservoirChain?.baseApiUrl}/tokens/v6`)\n\n      const query: paths['/tokens/v6']['get']['parameters']['query'] = {\n        tokens: tokenIds,\n        limit: 100,\n        includeDynamicPricing: true,\n      }\n      if (client?.normalizeRoyalties !== undefined) {\n        query.normalizeRoyalties = client?.normalizeRoyalties\n      }\n      setParams(url, query)\n      const params = [url.href]\n      if (reservoirChain?.apiKey) {\n        params.push(reservoirChain.apiKey)\n      }\n      if (client?.version) {\n        params.push(client.version)\n      }\n\n      const response: TokensSchema = await defaultFetcher(params)\n\n      return { tokens: response.tokens }\n    },\n    [client]\n  )\n\n  const fetchOrders = useCallback(\n    async (orderIds: string[], chainId: number) => {\n      if (!orderIds || orderIds.length === 0) {\n        return { orders: [] }\n      }\n\n      const reservoirChain = client?.chains.find(\n        (chain) => chain.id === chainId\n      )\n\n      const url = new URL(`${reservoirChain?.baseApiUrl}/orders/asks/v4`)\n\n      const query: paths['/orders/asks/v4']['get']['parameters']['query'] = {\n        ids: orderIds,\n        limit: 1000,\n        includeCriteriaMetadata: true,\n      }\n      if (client?.normalizeRoyalties !== undefined) {\n        query.normalizeRoyalties = client?.normalizeRoyalties\n      }\n      setParams(url, query)\n      const params = [url.href]\n      if (reservoirChain?.apiKey) {\n        params.push(reservoirChain.apiKey)\n      }\n      if (client?.version) {\n        params.push(client.version)\n      }\n\n      const response: OrdersSchema = await defaultFetcher(params)\n\n      return { orders: response.orders }\n    },\n    [client]\n  )\n\n  const convertTokenToItem = useCallback(\n    (tokenData: Token): CartItem | undefined => {\n      const token = tokenData.token\n      const market = tokenData.market\n\n      if (!token?.tokenId || !token.collection?.id) {\n        return\n      }\n      const dynamicPricing = market?.floorAsk?.dynamicPricing\n\n      let order:\n        | undefined\n        | {\n            id: string\n            quantityRemaining: number\n            quantity: number\n            maker: string\n          } = undefined\n      if (token.kind === 'erc1155' && market?.floorAsk) {\n        order = {\n          id: market?.floorAsk?.id || '',\n          quantityRemaining: market?.floorAsk?.quantityRemaining || 1,\n          quantity: 1,\n          maker: market?.floorAsk?.maker || '',\n        }\n      }\n\n      return {\n        token: {\n          id: token.tokenId,\n          name: token.name || '',\n        },\n        collection: {\n          id: token.collection.id,\n          name: token.collection.name || '',\n        },\n        order: order,\n        price:\n          dynamicPricing?.kind === 'pool' ? undefined : market?.floorAsk?.price,\n        poolId:\n          dynamicPricing?.kind === 'pool'\n            ? (dynamicPricing.data?.pool as string)\n            : undefined,\n        poolPrices:\n          dynamicPricing?.kind === 'pool'\n            ? (dynamicPricing.data?.prices as CartItemPrice[])\n            : undefined,\n      }\n    },\n    []\n  )\n\n  const convertOrderToItem = useCallback(\n    (orderData: Order): CartItem | undefined => {\n      let criteria = orderData.criteria?.data\n      if (!criteria?.token?.tokenId || !criteria.collection?.id) {\n        return\n      }\n      return {\n        token: {\n          id: criteria.token.tokenId,\n          name: criteria.token.name || '',\n        },\n        collection: {\n          id: criteria.collection.id,\n          name: criteria.collection.name || '',\n        },\n        order: {\n          id: orderData.id,\n          quantityRemaining: orderData.quantityRemaining || 1,\n          quantity: 1,\n          maker: orderData.maker,\n        },\n        price: orderData.price,\n        poolId: undefined,\n        poolPrices: undefined,\n      }\n    },\n    []\n  )\n\n  const clear = useCallback(() => {\n    cartData.current = {\n      ...cartData.current,\n      items: [],\n      pools: {},\n      totalPrice: 0,\n      feeOnTop: 0,\n      chain: undefined,\n    }\n    commit()\n  }, [commit])\n\n  const clearTransaction = useCallback(() => {\n    cartData.current = {\n      ...cartData.current,\n      transaction: null,\n      pendingTransactionId: undefined,\n    }\n    commit()\n  }, [commit])\n\n  const setQuantity = useCallback(\n    (orderId: string, quantity: number) => {\n      const updatedItems = [...cartData.current.items]\n      let item = updatedItems.find((item) => item.order?.id === orderId)\n      if (item?.order && (quantity > 0 || quantity == -1)) {\n        if (quantity > item?.order?.quantityRemaining) {\n          quantity = item?.order?.quantityRemaining\n        }\n        {\n          item.order = {\n            ...item.order,\n            quantity: quantity,\n          }\n        }\n      }\n\n      if (quantity == -1) {\n        cartData.current = {\n          ...cartData.current,\n          items: updatedItems,\n        }\n      } else {\n        const currency = getCartCurrency(\n          updatedItems,\n          cartData.current.chain?.id || 1\n        )\n        const { totalPrice, feeOnTop } = calculatePricing(\n          updatedItems,\n          currency,\n          cartData.current.feesOnTopBps\n        )\n\n        cartData.current = {\n          ...cartData.current,\n          items: updatedItems,\n          totalPrice,\n          feeOnTop,\n          currency,\n        }\n      }\n\n      commit()\n    },\n    [commit]\n  )\n\n  type AsyncAddToCartOrder = { orderId: string }\n  type AsyncAddToCartToken = { id: string }\n  type AddToCartToken = AsyncAddToCartToken | AsyncAddToCartOrder | Token\n\n  const add = useCallback(\n    async (items: AddToCartToken[], chainId: number) => {\n      try {\n        if (cartData.current.chain && chainId != cartData.current.chain?.id) {\n          throw `ChainId: ${chainId}, is different than the cart chainId (${cartData.current.chain?.id})`\n        }\n        if (cartData.current.isValidating) {\n          throw 'Currently validating, adding items temporarily disabled'\n        }\n\n        const updatedItems = [...cartData.current.items]\n        const currentIds = cartData.current.items.map(\n          (item) => `${item.collection.id}:${item.token.id}`\n        )\n        const currentOrderIds = cartData.current.items.map(\n          (item) => item.order?.id\n        )\n\n        const tokensToFetch: string[] = []\n        const tokens: Token[] = []\n        const ordersToFetch: string[] = []\n\n        const tokensByMaker = updatedItems.reduce((map, item) => {\n          if (item.order) {\n            const maker = item.order?.maker\n            if (!map[maker]) {\n              map[maker] = []\n            }\n            map[maker].push(`${item.collection.id}:${item.token.id}`)\n          }\n          return map\n        }, {} as Record<string, string[]>)\n\n        items.forEach((item) => {\n          const token = item as Token\n          const asyncToken = item as AsyncAddToCartToken\n          const asyncOrder = item as AsyncAddToCartOrder\n          if (token.token) {\n            if (\n              !currentIds.includes(\n                `${token.token?.collection?.id}:${token.token?.tokenId}`\n              )\n            ) {\n              tokens.push(token)\n            }\n          } else if (\n            asyncToken &&\n            asyncToken.id &&\n            !currentIds.includes(asyncToken.id)\n          ) {\n            tokensToFetch.push(asyncToken.id)\n          } else if (\n            asyncOrder &&\n            asyncOrder.orderId &&\n            !currentOrderIds.includes(asyncOrder.orderId)\n          ) {\n            ordersToFetch.push(asyncOrder.orderId)\n          }\n        })\n\n        const promises: Promise<void>[] = []\n\n        if (tokensToFetch.length > 0) {\n          promises.push(\n            new Promise(async (resolve) => {\n              const { tokens: fetchedTokens } = await fetchTokens(\n                tokensToFetch,\n                chainId\n              )\n              fetchedTokens?.forEach((tokenData) => {\n                const item = convertTokenToItem(tokenData)\n                const id = `${item?.collection.id}:${item?.token.id}`\n                const maker = tokenData.market?.floorAsk?.maker\n                const duplicateListingDetected =\n                  item &&\n                  maker &&\n                  tokensByMaker[maker] &&\n                  tokensByMaker[maker].includes(id)\n                if (duplicateListingDetected) {\n                  client?.log(\n                    [\n                      'Detected adding duplicate listing to cart, aborting',\n                      tokenData,\n                      updatedItems,\n                    ],\n                    LogLevel.Error\n                  )\n                } else if (item) {\n                  updatedItems.push(item)\n                }\n              })\n\n              resolve()\n            })\n          )\n        }\n\n        if (ordersToFetch.length > 0) {\n          promises.push(\n            new Promise(async (resolve) => {\n              const { orders: fetchedOrders } = await fetchOrders(\n                ordersToFetch,\n                chainId\n              )\n              fetchedOrders?.forEach((orderData) => {\n                const item = convertOrderToItem(orderData)\n                const id = `${item?.collection.id}:${item?.token.id}`\n                const duplicateListingDetected =\n                  item &&\n                  tokensByMaker[orderData.maker] &&\n                  tokensByMaker[orderData.maker].includes(id)\n                if (duplicateListingDetected) {\n                  client?.log(\n                    [\n                      'Detected adding duplicate listing to cart, aborting',\n                      orderData,\n                      updatedItems,\n                    ],\n                    LogLevel.Error\n                  )\n                } else if (item) {\n                  updatedItems.push(item)\n                }\n              })\n\n              resolve()\n            })\n          )\n        }\n\n        if (promises.length > 0) {\n          cartData.current.isValidating = true\n          subscribers.current.forEach((callback) => callback())\n\n          await Promise.allSettled(promises)\n        }\n\n        if (tokens.length > 0) {\n          tokens.forEach((token) => {\n            if (\n              token.market?.floorAsk?.maker?.toLowerCase() !==\n                address?.toLowerCase() &&\n              token.token?.owner?.toLowerCase() !== address?.toLowerCase()\n            ) {\n              const item = convertTokenToItem(token)\n              if (item) {\n                updatedItems.push(item)\n              }\n            }\n          })\n        }\n\n        const pools = calculatePools(updatedItems)\n        const currency = getCartCurrency(updatedItems, chainId)\n        const { totalPrice, feeOnTop } = calculatePricing(\n          updatedItems,\n          currency,\n          cartData.current.feesOnTopBps\n        )\n\n        cartData.current = {\n          ...cartData.current,\n          isValidating: false,\n          items: updatedItems,\n          totalPrice,\n          feeOnTop,\n          currency,\n          pools,\n        }\n\n        if (!cartData.current.chain) {\n          cartData.current.chain =\n            client?.chains.find((chain) => chain.id === chainId) ||\n            client?.currentChain() ||\n            undefined\n        }\n        commit()\n      } catch (e) {\n        if (cartData.current.isValidating) {\n          cartData.current.isValidating = false\n          commit()\n        }\n        throw e\n      }\n    },\n    [fetchTokens, commit, address]\n  )\n\n  /**\n   * @param ids An array of order ids or token keys. Tokens should be in the format `collection:token`\n   */\n\n  const remove = useCallback((ids: string[]) => {\n    if (cartData.current.isValidating) {\n      console.warn('Currently validating, removing items temporarily disabled')\n      return\n    }\n    const updatedItems: CartItem[] = []\n    const removedItems: CartItem[] = []\n    cartData.current.items.forEach((item) => {\n      const key = `${item.collection.id}:${item.token.id}`\n      const orderId = item.order?.id\n      if (orderId && ids.includes(orderId)) {\n        removedItems.push(item)\n      } else if (ids.includes(key)) {\n        removedItems.push(item)\n      } else {\n        updatedItems.push(item)\n      }\n    })\n    const pools = calculatePools(updatedItems)\n    const currency = getCartCurrency(\n      updatedItems,\n      cartData.current.chain?.id || 1\n    )\n    const { totalPrice, feeOnTop } = calculatePricing(\n      updatedItems,\n      currency,\n      cartData.current.feesOnTopBps\n    )\n\n    //Suppress pool price changes if the removed item was from the pool\n    const removedPoolIds = removedItems.reduce((poolIds, item) => {\n      if (item.poolId) {\n        poolIds.push(item.poolId)\n      }\n      return poolIds\n    }, [] as string[])\n\n    updatedItems.forEach((item) => {\n      if (item.poolId && removedPoolIds.includes(item.poolId)) {\n        item.previousPrice = item.price\n      }\n    })\n\n    cartData.current = {\n      ...cartData.current,\n      items: updatedItems,\n      pools,\n      totalPrice,\n      feeOnTop,\n      currency,\n    }\n    if (updatedItems.length === 0) {\n      cartData.current.chain = undefined\n    }\n    commit()\n  }, [])\n\n  const validate = useCallback(async () => {\n    try {\n      if (cartData.current.items.length === 0) {\n        return false\n      }\n      cartData.current = { ...cartData.current, isValidating: true }\n      commit()\n\n      const items = [...cartData.current.items]\n\n      const positionMap =\n        cartData.current.items.reduce((items, item, index) => {\n          if (item.order?.id) {\n            items[`${item.order.id}`] = index\n          } else if (item.collection.id && item.token?.id) {\n            items[`${item.collection.id}:${item.token.id}`] = index\n          }\n          return items\n        }, {} as Record<string, number>) || {}\n\n      const tokensToFetch: string[] = []\n      const ordersToFetch: string[] = []\n\n      //find tokens and order ids to fetch\n      cartData.current.items.map((item) => {\n        if (item.order?.id) {\n          ordersToFetch.push(item.order.id)\n        } else {\n          const contract = item.collection.id.split(':')[0]\n          tokensToFetch.push(`${contract}:${item.token.id}`)\n        }\n      })\n\n      //fetch tokens and orders in tandem\n      const promises: (\n        | ReturnType<typeof fetchOrders>\n        | ReturnType<typeof fetchTokens>\n      )[] = []\n\n      if (ordersToFetch.length > 0) {\n        promises.push(\n          fetchOrders(ordersToFetch, cartData.current.chain?.id as number)\n        )\n      }\n\n      if (tokensToFetch.length > 0) {\n        promises.push(\n          fetchTokens(tokensToFetch, cartData.current.chain?.id as number)\n        )\n      }\n\n      const responses = await Promise.allSettled(promises)\n\n      // hashmap of items to remove { orderId/tokenId: item index }\n      let itemsToRemove: Record<string, number> = {}\n\n      responses.forEach((response) => {\n        if (response.status === 'fulfilled') {\n          const ordersResponse = response.value as OrdersSchema\n          const tokensResponse = response.value as TokensSchema\n\n          if (ordersResponse && ordersResponse.orders) {\n            // process orders response\n            ordersResponse.orders.map((order) => {\n              let index = positionMap[order.id]\n              if (\n                address &&\n                order.maker.toLowerCase() === address?.toLowerCase()\n              ) {\n                itemsToRemove[order.id] = index\n              } else if (order.status !== 'active') {\n                items[index] = {\n                  ...items[index],\n                  price: undefined,\n                }\n              }\n            })\n          } else if (tokensResponse && tokensResponse.tokens) {\n            // process tokens response\n            tokensResponse.tokens.map(({ token, market }) => {\n              const index =\n                positionMap[`${token?.collection?.id}:${token?.tokenId}`]\n\n              if (\n                address &&\n                (token?.owner?.toLowerCase() === address?.toLowerCase() ||\n                  market?.floorAsk?.maker?.toLowerCase() ===\n                    address?.toLowerCase())\n              ) {\n                if (token?.collection?.id && token?.tokenId) {\n                  itemsToRemove[`${token.collection.id}:${token.tokenId}`] =\n                    index\n                }\n              } else {\n                const dynamicPricing = market?.floorAsk?.dynamicPricing\n\n                items[index] = {\n                  ...items[index],\n                  previousPrice: items[index].price,\n                  price: market?.floorAsk?.price,\n                  poolId:\n                    dynamicPricing?.kind === 'pool'\n                      ? (dynamicPricing.data?.pool as string)\n                      : undefined,\n                  poolPrices:\n                    dynamicPricing?.kind === 'pool'\n                      ? (dynamicPricing.data?.prices as CartItemPrice[])\n                      : undefined,\n                }\n                if (token?.name) {\n                  items[index].token.name = token.name\n                }\n                if (token?.collection?.name) {\n                  items[index].collection.name = token.collection.name\n                }\n              }\n            })\n          }\n        }\n      })\n\n      // Remove all items in itemsToRemove\n      if (Object.values(itemsToRemove).length > 0) {\n        Object.values(itemsToRemove).map((index) => {\n          items.splice(index, 1)\n        })\n      }\n\n      const pools = calculatePools(items)\n      const currency = getCartCurrency(items, cartData.current.chain?.id || 1)\n      const { totalPrice, feeOnTop } = calculatePricing(\n        items,\n        currency,\n        cartData.current.feesOnTopBps\n      )\n      cartData.current = {\n        ...cartData.current,\n        items,\n        pools,\n        isValidating: false,\n        totalPrice,\n        feeOnTop,\n        currency,\n      }\n\n      commit()\n      return true\n    } catch (e) {\n      if (cartData.current.isValidating) {\n        cartData.current.isValidating = false\n        commit()\n      }\n      throw e\n    }\n  }, [fetchTokens, fetchOrders, address])\n\n  const checkout = useCallback(\n    async (options: BuyTokenOptions = {}) => {\n      if (!client) {\n        throw 'Reservoir SDK not initialized'\n      }\n\n      const { chain: activeChain } = await getNetwork()\n\n      if (\n        cartData.current.chain &&\n        cartData.current.chain?.id !== activeChain?.id\n      ) {\n        const chain = await switchNetworkAsync?.(cartData.current.chain.id)\n        if (chain?.id !== cartData.current.chain.id) {\n          throw 'Active chain does not match cart chain'\n        }\n      }\n\n      const wallet = await getWalletClient({\n        chainId: cartData.current.chain?.id,\n      })\n\n      if (!wallet) {\n        throw 'Wallet/Signer not available'\n      }\n\n      let isMixedCurrency = false\n      const tokens = cartData.current.items.reduce(\n        (items, { token, collection, price, order }) => {\n          if (price) {\n            const contract = collection.id.split(':')[0]\n            items?.push({\n              token: order?.id ? undefined : `${contract}:${token.id}`,\n              orderId: order?.id,\n              quantity: order?.quantity,\n            })\n            if (\n              price.currency?.contract != cartData.current.currency?.contract\n            ) {\n              isMixedCurrency = true\n            }\n          }\n          return items\n        },\n        [] as Parameters<ReservoirClientActions['buyToken']>['0']['items']\n      )\n\n      if (!tokens || tokens.length === 0) {\n        throw 'Cart is empty'\n      }\n      const chainCurrency = getChainCurrency(\n        chains,\n        cartData.current.chain?.id || 1\n      )\n      const currencyChain = client.chains.find(\n        (chain) => (chainCurrency.chainId = chain.id)\n      )\n      const feeOnTop = cartData.current.feeOnTop ? cartData.current.feeOnTop : 0\n      const expectedPrice = cartData.current.totalPrice - feeOnTop\n      let currencyDecimals = cartData.current.currency?.decimals || 18\n\n      if (isMixedCurrency) {\n        options.currency = zeroAddress\n        currencyDecimals = chainCurrency.decimals\n      }\n\n      if (feeOnTop) {\n        if (cartData.current.feesOnTopBps) {\n          const fixedFees = cartData.current.feesOnTopBps.map((fullFee) => {\n            const [referrer, feeBps] = fullFee.split(':')\n            const fee =\n              Number(\n                parseUnits(`${expectedPrice}`, currencyDecimals) *\n                  BigInt(feeBps)\n              ) / 10000\n            const atomicUnitsFee = formatUnits(BigInt(fee), 0)\n            return `${referrer}:${atomicUnitsFee}`\n          })\n          options.feesOnTop = fixedFees\n        }\n      }\n\n      if (options.partial === undefined) {\n        options.partial = true\n      }\n\n      const transactionId = `${new Date().getTime()}`\n      cartData.current = {\n        ...cartData.current,\n        pendingTransactionId: transactionId,\n        transaction: {\n          id: transactionId,\n          chain: cartData.current.chain || currencyChain || client.chains[0],\n          items: cartData.current.items,\n          status: CheckoutStatus.Approving,\n        },\n      }\n      commit()\n\n      client.actions\n        .buyToken({\n          expectedPrice,\n          wallet,\n          items: tokens,\n          options,\n          onProgress: (steps: Execute['steps'], path: Execute['path']) => {\n            if (!steps) {\n              return\n            }\n            if (transactionId != cartData.current.pendingTransactionId) {\n              return\n            }\n\n            let status =\n              cartData.current.transaction?.status || CheckoutStatus.Approving\n\n            const executableSteps = steps.filter(\n              (step) => step.items && step.items.length > 0\n            )\n\n            let stepCount = executableSteps.length\n\n            let currentStepItem:\n              | NonNullable<Execute['steps'][0]['items']>[0]\n              | undefined\n\n            const currentStepIndex = executableSteps.findIndex((step) => {\n              currentStepItem = step.items?.find(\n                (item) => item.status === 'incomplete'\n              )\n              return currentStepItem\n            })\n\n            const currentStep =\n              currentStepIndex > -1\n                ? executableSteps[currentStepIndex]\n                : executableSteps[stepCount - 1]\n\n            if (currentStep.error) {\n              return\n            }\n\n            executableSteps.findIndex((step) => {\n              currentStepItem = step.items?.find(\n                (item) => item.status === 'incomplete'\n              )\n              return currentStepItem\n            })\n\n            if (currentStep.items?.every((item) => item.txHash)) {\n              status = CheckoutStatus.Finalizing\n              if (cartData.current.items.length > 0) {\n                cartData.current.items = []\n                cartData.current.pools = {}\n                cartData.current.totalPrice = 0\n                cartData.current.currency = undefined\n                cartData.current.chain = undefined\n              }\n            }\n            if (\n              steps.every(\n                (step) =>\n                  !step.items ||\n                  step.items.length == 0 ||\n                  step.items?.every((item) => item.status === 'complete')\n              )\n            ) {\n              status = CheckoutStatus.Complete\n            }\n\n            if (\n              cartData.current.transaction?.status != status &&\n              (status === CheckoutStatus.Finalizing ||\n                status === CheckoutStatus.Complete)\n            ) {\n              cartData.current.items = []\n              cartData.current.pools = {}\n              cartData.current.totalPrice = 0\n              cartData.current.currency = undefined\n              cartData.current.chain = undefined\n            }\n\n            if (cartData.current.transaction) {\n              cartData.current.transaction.status = status\n              cartData.current.transaction.currentStep = currentStep\n              if (currentStepItem) {\n                cartData.current.transaction.txHash = currentStepItem?.txHash\n                cartData.current.transaction.steps = steps\n                cartData.current.transaction.path = path\n              }\n            }\n            commit()\n          },\n        })\n        .catch((e: any) => {\n          if (transactionId != cartData.current.pendingTransactionId) {\n            return\n          }\n          let error = e as any\n          let errorType = CheckoutTransactionError.Unknown\n          const errorStatus = (error as any)?.statusCode\n\n          if (error?.message && error?.message.includes('ETH balance')) {\n            errorType = CheckoutTransactionError.InsufficientBalance\n          } else if (error?.code && error?.code == 4001) {\n            errorType = CheckoutTransactionError.UserDenied\n          } else {\n            let message = 'Oops, something went wrong. Please try again.'\n            if (errorStatus >= 400 && errorStatus < 500) {\n              message = error.message\n            }\n            if (error?.type && error?.type === 'price mismatch') {\n              errorType = CheckoutTransactionError.PiceMismatch\n              message = error.message\n            }\n\n            //@ts-ignore: Should be fixed in an update to typescript\n            error = new Error(message, {\n              cause: error,\n            })\n          }\n          if (cartData.current.transaction) {\n            cartData.current.transaction.status = CheckoutStatus.Idle\n            cartData.current.transaction.error = error\n            cartData.current.transaction.errorType = errorType\n            if (\n              cartData.current.chain?.id ==\n              cartData.current.transaction.chain.id\n            ) {\n              const items = [...cartData.current.transaction.items]\n              const pools = calculatePools(items)\n              const currency = getCartCurrency(\n                items,\n                cartData.current.transaction.chain.id\n              )\n              const { totalPrice, feeOnTop } = calculatePricing(\n                items,\n                currency,\n                cartData.current.feesOnTopBps\n              )\n              cartData.current.items = items\n              cartData.current.pools = pools\n              cartData.current.currency = currency\n              cartData.current.totalPrice = totalPrice\n              cartData.current.feeOnTop = feeOnTop\n              cartData.current.chain = cartData.current.transaction.chain\n            }\n            commit()\n            validate()\n          }\n        })\n    },\n    [client, switchNetworkAsync]\n  )\n\n  return {\n    get,\n    set,\n    subscribe,\n    setQuantity,\n    add,\n    remove,\n    clear,\n    clearTransaction,\n    validate,\n    checkout,\n  }\n}\n\nexport const CartContext = createContext<ReturnType<typeof cartStore> | null>(\n  null\n)\n\ntype CartProviderProps = {\n  children: ReactNode\n  feesOnTopBps?: string[]\n  persist?: boolean\n}\n\nexport const CartProvider: FC<CartProviderProps> = function ({\n  children,\n  feesOnTopBps,\n  persist,\n}) {\n  return (\n    <CartContext.Provider value={cartStore({ feesOnTopBps, persist })}>\n      {children}\n    </CartContext.Provider>\n  )\n}\n","import { getClient } from '@reservoir0x/reservoir-sdk'\nimport { zeroAddress } from 'viem'\nimport { Address, Chain, useNetwork } from 'wagmi'\nimport { mainnet, goerli } from 'wagmi/chains'\n\nexport default function (chainId?: number) {\n  const { chains } = useNetwork()\n  return getChainCurrency(chains, chainId)\n}\n\nexport const getChainCurrency = (chains: Chain[], chainId?: number) => {\n  const client = getClient()\n  const reservoirChain = chainId\n    ? client.chains.find((chain) => chain.id === chainId)\n    : client.currentChain()\n\n  let chain = chains.find((chain) => reservoirChain?.id === chain.id)\n\n  if (!chain && chains.length > 0) {\n    chain = chains[0]\n  }\n\n  const ETHChains: number[] = [mainnet.id, goerli.id]\n\n  if (!chain || !chain.nativeCurrency || ETHChains.includes(chain.id)) {\n    return {\n      name: 'Ethereum',\n      symbol: 'ETH',\n      decimals: 18,\n      address: zeroAddress as Address,\n      chainId: chain?.id || mainnet.id,\n    }\n  } else {\n    return {\n      ...chain.nativeCurrency,\n      address: zeroAddress as Address,\n      chainId: chain.id,\n    }\n  }\n}\n","import { useContext } from 'react'\nimport useSWR from 'swr'\nimport { CoinGecko, ProviderOptionsContext } from '../ReservoirKitProvider'\n\nconst createBaseUrl = (config: CoinGecko | undefined) => {\n  if (config?.proxy) return `${config.proxy}?`\n\n  if (config?.apiKey)\n    return `https://pro-api.coingecko.com/api/v3/coins/markets?x_cg_pro_api_key={${config.apiKey}}&`\n\n  return 'https://api.coingecko.com/api/v3/coins/markets?'\n}\n\nexport default function (\n  vs_currency?: string,\n  symbols: string = 'eth',\n  id: string = ''\n): { price: number; symbol: string }[] {\n  const providerOptionsContext = useContext(ProviderOptionsContext)\n\n  const baseUrl = createBaseUrl(providerOptionsContext?.coinGecko)\n\n  if (symbols.includes(',')) {\n    id = symbols\n      .split(',')\n      .map((id) => providerOptionsContext.coinGecko?.coinIds?.[id])\n      .join(',')\n  } else {\n    id = id ? id : providerOptionsContext.coinGecko?.coinIds?.[symbols] || ''\n  }\n\n  const { data } = useSWR(\n    vs_currency\n      ? `${baseUrl}vs_currency=${vs_currency}&symbols=${symbols}&ids=${id}`\n      : null,\n    null,\n    {\n      refreshInterval: 60 * 1000 * 5, //5m Interval\n    }\n  )\n\n  if (data && data.length > 0) {\n    return data.map((conversion: any) => ({\n      price: conversion.current_price,\n      symbol: (conversion.symbol || '').toUpperCase(),\n      coinGeckoId: conversion.id,\n    }))\n  }\n  return []\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport { useInfiniteApi, useReservoirClient } from './'\n\ntype CollectionActivityResponse =\n  paths['/collections/activity/v6']['get']['responses']['200']['schema']\n\ntype CollectionActivityQuery =\n  paths['/collections/activity/v6']['get']['parameters']['query']\n\nexport default function (\n  options?: CollectionActivityQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<CollectionActivityResponse>(\n    (pageIndex, previousPageData) => {\n      if (\n        !options ||\n        (!options.collection && !options.collectionsSetId && !options.community)\n      ) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/collections/activity/v6`)\n\n      let query: CollectionActivityQuery = { ...options }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      setParams(url, query)\n\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const activities =\n    response.data?.flatMap((page) => page.activities || []) ?? []\n\n  return {\n    ...response,\n    data: activities,\n  }\n}\n","import { useInfiniteApi, useReservoirClient } from './'\nimport { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\n\ntype CollectionResponse =\n  paths['/collections/v5']['get']['responses']['200']['schema']\n\ntype CollectionsQuery = paths['/collections/v5']['get']['parameters']['query']\n\nexport default function (\n  options?: CollectionsQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<CollectionResponse>(\n    (pageIndex, previousPageData) => {\n      if (!options) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/collections/v5`)\n      let query: CollectionsQuery = { ...options }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      if (\n        query.normalizeRoyalties === undefined &&\n        client?.normalizeRoyalties !== undefined\n      ) {\n        query.normalizeRoyalties = client.normalizeRoyalties\n      }\n\n      setParams(url, query)\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const collections =\n    response.data?.flatMap((page) => page?.collections || []) ?? []\n\n  return {\n    ...response,\n    data: collections,\n  }\n}\n","import { useMemo } from 'react'\nimport { useCart, useReservoirClient, useTokens } from './'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport { Cart } from './../context/CartProvider'\n\ntype DynamicTokens = (ReturnType<typeof useTokens>['data'][0] & {\n  isInCart?: boolean\n})[]\n\nexport default function (\n  options: Parameters<typeof useTokens>['0'] = {},\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const tokensResponse = useTokens(\n    {\n      includeDynamicPricing: true,\n      ...options,\n    },\n    swrOptions,\n    chainId\n  )\n  const { data: cartItems, ...cartActions } = useCart((cart) => cart.items)\n  const { data: cartPools } = useCart((cart) => cart.pools)\n  const { data: cartChain } = useCart((cart) => cart.chain)\n  const cartRequiresReordering = useMemo(\n    () => Object.values(cartPools).some((pool) => pool.itemCount > 0),\n    [cartPools]\n  )\n  const itemsMap = useMemo(() => {\n    return cartItems.reduce((itemMap, item) => {\n      itemMap[`${item.collection.id}:${item.token.id}`] = item\n      return itemMap\n    }, {} as Record<string, Cart['items'][0]>)\n  }, [cartItems])\n\n  let dynamicTokens: DynamicTokens\n  if (\n    cartChain &&\n    (chainId === cartChain?.id ||\n      (chainId === undefined && client?.currentChain()?.id === cartChain?.id))\n  ) {\n    dynamicTokens = tokensResponse.data.map((tokenData) => {\n      const id = `${tokenData?.token?.collection?.id}:${tokenData?.token?.tokenId}`\n      const cartItem = itemsMap[id]\n      const dynamicTokenData = {\n        ...tokenData,\n        isInCart: cartItem !== undefined,\n      }\n      const floorAsk = tokenData?.market?.floorAsk\n      const isInPool = floorAsk?.dynamicPricing?.kind === 'pool'\n      const poolId = isInPool\n        ? (floorAsk?.dynamicPricing?.data?.pool as string)\n        : undefined\n      const poolPrices = isInPool\n        ? (floorAsk?.dynamicPricing?.data\n            ?.prices as Cart['items'][0]['poolPrices'])\n        : undefined\n      if (cartItem) {\n        if (\n          dynamicTokenData.market?.floorAsk &&\n          cartItem.poolId &&\n          cartItem.price &&\n          cartItem.price.amount?.decimal !=\n            dynamicTokenData.market?.floorAsk?.price\n        ) {\n          dynamicTokenData.market.floorAsk.price = cartItem.price\n        }\n      } else if (\n        isInPool &&\n        poolId &&\n        poolPrices &&\n        floorAsk &&\n        dynamicTokenData.market?.floorAsk\n      ) {\n        const nextPoolCartIndex = cartPools[poolId]\n          ? cartPools[poolId].itemCount\n          : 0\n\n        if (nextPoolCartIndex >= poolPrices.length) {\n          dynamicTokenData.market.floorAsk.price = undefined\n        } else if (poolPrices && poolPrices[nextPoolCartIndex]) {\n          dynamicTokenData.market.floorAsk.price = poolPrices[nextPoolCartIndex]\n        }\n      }\n      return dynamicTokenData\n    })\n\n    if (\n      cartRequiresReordering &&\n      (!options || !options.sortBy || options.sortBy === 'floorAskPrice')\n    ) {\n      dynamicTokens.sort((a, b) => {\n        const aPrice = a.market?.floorAsk?.price?.amount?.decimal\n        const bPrice = b.market?.floorAsk?.price?.amount?.decimal\n\n        if (aPrice === undefined) {\n          return 1\n        } else if (bPrice === undefined) {\n          return -1\n        } else if (\n          !options ||\n          !options.sortDirection ||\n          options.sortDirection === 'asc'\n        ) {\n          return aPrice - bPrice\n        } else {\n          return bPrice - aPrice\n        }\n      })\n    }\n  } else {\n    dynamicTokens = tokensResponse.data.map((tokenData) => {\n      const floorAsk = tokenData?.market?.floorAsk\n      const isInPool = floorAsk?.dynamicPricing?.kind === 'pool'\n      const poolPrices = isInPool\n        ? (floorAsk?.dynamicPricing?.data\n            ?.prices as Cart['items'][0]['poolPrices'])\n        : undefined\n\n      if (tokenData.market?.floorAsk && poolPrices && poolPrices[0]) {\n        tokenData.market.floorAsk.price = poolPrices[0]\n      }\n\n      return tokenData\n    })\n  }\n\n  return {\n    ...tokensResponse,\n    data: dynamicTokens,\n    ...cartActions,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport { useInfiniteApi, useReservoirClient } from './'\nimport { useMemo } from 'react'\n\ntype TokenDetailsResponse =\n  paths['/tokens/v6']['get']['responses']['200']['schema']\n\ntype TokensQuery = paths['/tokens/v6']['get']['parameters']['query']\n\nexport default function (\n  options?: TokensQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<TokenDetailsResponse>(\n    (pageIndex, previousPageData) => {\n      if (!options) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/tokens/v6`)\n      let query: TokensQuery = { ...options }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      if (\n        query.normalizeRoyalties === undefined &&\n        client?.normalizeRoyalties !== undefined\n      ) {\n        query.normalizeRoyalties = client.normalizeRoyalties\n      }\n\n      setParams(url, query)\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const tokens = useMemo(\n    () => response.data?.flatMap((page) => page.tokens || []) ?? [],\n    [response.data]\n  )\n\n  return {\n    ...response,\n    data: tokens,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport useReservoirClient from './useReservoirClient'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport useInfiniteApi from './useInfiniteApi'\n\ntype Asks = paths['/orders/asks/v4']['get']['responses']['200']['schema']\ntype AsksQuery = paths['/orders/asks/v4']['get']['parameters']['query']\n\nexport default function (\n  options: AsksQuery,\n  swrOptions: SWRInfiniteConfiguration = {},\n  enabled: boolean = true,\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<Asks>(\n    (pageIndex, previousPageData) => {\n      if (!enabled) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl || ''}/orders/asks/v4`)\n      let query: AsksQuery = options || {}\n\n      if (\n        query.normalizeRoyalties === undefined &&\n        client?.normalizeRoyalties !== undefined\n      ) {\n        query.normalizeRoyalties = client.normalizeRoyalties\n      }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      setParams(url, query)\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const listings = response.data?.flatMap((page) => page.orders || []) ?? []\n\n  return {\n    ...response,\n    data: listings,\n  }\n}\n","import useListings from './useListings'\nimport { useAccount } from 'wagmi'\nimport { paths } from '@reservoir0x/reservoir-sdk'\nimport { SWRConfiguration } from 'swr'\n\nexport default function (\n  query?: paths['/orders/asks/v4']['get']['parameters']['query'] | false,\n  swrOptions?: SWRConfiguration,\n  chainId?: number\n) {\n  const { address } = useAccount()\n  let queryOptions = {\n    maker: address as string,\n  }\n  if (query) {\n    queryOptions = {\n      ...queryOptions,\n      ...query,\n    }\n  }\n  return useListings(queryOptions, swrOptions, address !== undefined, chainId)\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport { useInfiniteApi, useReservoirClient } from './'\n\ntype SearchActivitiesQuery =\n  paths['/search/activities/v1']['get']['parameters']['query']\n\ntype SearchActivitiesResponse =\n  paths['/search/activities/v1']['get']['responses']['200']['schema']\n\nexport default function (\n  options?: SearchActivitiesQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chaindId?: number\n) {\n  const client = useReservoirClient()\n\n  const chain =\n    chaindId !== undefined\n      ? client?.chains.find((chain) => chain.id === chaindId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<SearchActivitiesResponse>(\n    (pageIndex, previousPageData) => {\n      if (!options) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/search/activities/v1`)\n\n      let query: SearchActivitiesQuery = { ...options }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      setParams(url, query)\n\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const activities =\n    response.data?.flatMap((page) => page.activities || []) ?? []\n\n  return {\n    ...response,\n    data: activities,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\nimport { useInfiniteApi, useReservoirClient } from './'\n\ntype TokenActivityQuery =\n  paths['/tokens/{token}/activity/v5']['get']['parameters']['query']\n\ntype TokenActivityResponse =\n  paths['/tokens/{token}/activity/v5']['get']['responses']['200']['schema']\n\nexport default function (\n  token: string,\n  options?: TokenActivityQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<TokenActivityResponse>(\n    (pageIndex, previousPageData) => {\n      if (!token) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/tokens/${token}/activity/v5`)\n\n      let query: TokenActivityQuery = { ...options }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      setParams(url, query)\n\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const activities =\n    response.data?.flatMap((page) => page.activities || []) ?? []\n\n  return {\n    ...response,\n    data: activities,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { useReservoirClient, useInfiniteApi } from './'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\n\ntype UserCollections =\n  paths['/users/{user}/collections/v3']['get']['responses']['200']['schema']\ntype UserCollectionsQuery =\n  paths['/users/{user}/collections/v3']['get']['parameters']['query']\n\nexport default function (\n  user?: string,\n  options?: UserCollectionsQuery,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  let defaultLimit = 20\n\n  const response = useInfiniteApi<UserCollections>(\n    (pageIndex, previousPageData) => {\n      if (!user) {\n        return null\n      }\n      const url = new URL(\n        `${chain?.baseApiUrl || ''}/users/${user}/collections/v3`\n      )\n      let query: UserCollectionsQuery = {\n        offset: pageIndex * (options?.limit || defaultLimit),\n        limit: options?.limit || defaultLimit,\n        ...options,\n      }\n\n      if (\n        previousPageData?.collections &&\n        previousPageData?.collections?.length === 0\n      ) {\n        return null\n      }\n\n      setParams(url, query)\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    },\n    options?.limit || defaultLimit\n  )\n\n  const collections =\n    response.data?.flatMap((page) => page.collections || []) ?? []\n\n  return {\n    ...response,\n    data: collections,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { useReservoirClient, useInfiniteApi } from './'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\n\ntype UsersActivityResponse =\n  paths['/users/activity/v6']['get']['responses']['200']['schema']\n\ntype UsersActivityBaseQuery =\n  paths['/users/activity/v6']['get']['parameters']['query']\n\ntype UsersQuery = UsersActivityBaseQuery['users'] | undefined\ntype UsersActivityQuery = Omit<UsersActivityBaseQuery, 'users'>\n\nexport default function (\n  users?: UsersQuery,\n  options?: UsersActivityQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<UsersActivityResponse>(\n    (pageIndex, previousPageData) => {\n      if (!users) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/users/activity/v6`)\n\n      let query: UsersActivityBaseQuery = { ...options, users }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      setParams(url, query)\n\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const activities =\n    response.data?.flatMap((page) => page.activities || []) ?? []\n\n  return {\n    ...response,\n    data: activities,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { useReservoirClient, useInfiniteApi } from './'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\n\ntype UserTokenResponse =\n  paths['/users/{user}/tokens/v7']['get']['responses']['200']['schema']\n\ntype UserTokenQuery =\n  paths['/users/{user}/tokens/v7']['get']['parameters']['query']\n\nexport default function (\n  user?: string | undefined,\n  options?: UserTokenQuery | false,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<UserTokenResponse>(\n    (pageIndex, previousPageData) => {\n      if (!user) {\n        return null\n      }\n\n      const url = new URL(`${chain?.baseApiUrl}/users/${user}/tokens/v7`)\n\n      let query: UserTokenQuery = { ...options }\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      if (\n        query.normalizeRoyalties === undefined &&\n        client?.normalizeRoyalties !== undefined\n      ) {\n        query.normalizeRoyalties = client.normalizeRoyalties\n      }\n\n      setParams(url, query)\n\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const tokens = response.data?.flatMap((page) => page.tokens || []) ?? []\n\n  return {\n    ...response,\n    data: tokens,\n  }\n}\n","import { paths, setParams } from '@reservoir0x/reservoir-sdk'\nimport { useReservoirClient, useInfiniteApi } from './'\nimport { SWRInfiniteConfiguration } from 'swr/infinite'\n\ntype Bids =\n  paths['/orders/users/{user}/top-bids/v2']['get']['responses']['200']['schema']\ntype BidsQuery =\n  paths['/orders/users/{user}/top-bids/v2']['get']['parameters']['query']\n\nexport default function (\n  user?: string,\n  options?: BidsQuery,\n  swrOptions: SWRInfiniteConfiguration = {},\n  chainId?: number\n) {\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n\n  const response = useInfiniteApi<Bids>(\n    (pageIndex, previousPageData) => {\n      if (!user) {\n        return null\n      }\n      const url = new URL(\n        `${chain?.baseApiUrl || ''}/orders/users/${user}/top-bids/v2`\n      )\n      let query: BidsQuery = options || {}\n\n      if (previousPageData && !previousPageData.continuation) {\n        return null\n      } else if (previousPageData && pageIndex > 0) {\n        query.continuation = previousPageData.continuation\n      }\n\n      if (\n        query.normalizeRoyalties === undefined &&\n        client?.normalizeRoyalties !== undefined\n      ) {\n        query.normalizeRoyalties = client.normalizeRoyalties\n      }\n\n      setParams(url, query)\n      return [url.href, chain?.apiKey, client?.version]\n    },\n    {\n      revalidateOnMount: true,\n      revalidateFirstPage: false,\n      ...swrOptions,\n    }\n  )\n\n  const bids = response.data?.flatMap((page) => page.topBids || []) ?? []\n\n  return {\n    ...response,\n    data: bids,\n  }\n}\n","import {\n  red,\n  indigo,\n  indigoA,\n  gray,\n  whiteA,\n  blackA,\n  green,\n} from '@radix-ui/colors'\nimport {\n  sharedThemeConfig,\n  ReservoirKitTheme,\n  ReservoirKitOverrides,\n} from './ReservoirKitTheme'\n\nexport default function (overrides?: ReservoirKitOverrides): ReservoirKitTheme {\n  let sharedTheme = sharedThemeConfig(overrides)\n\n  return {\n    colors: {\n      ...indigo,\n      ...indigoA,\n      ...red,\n      ...gray,\n      ...blackA,\n      ...whiteA,\n      ...green,\n\n      // accent colors\n      accentBase: '$indigo1',\n      accentBgSubtle: '$indigo2',\n      accentBg: '$indigo3',\n      accentBgHover: '$indigo4',\n      accentBgActive: '$indigo5',\n      accentLine: '$indigo6',\n      accentBorder: '$indigo7',\n      accentBorderHover: overrides?.primaryColor || '$indigo8',\n      accentSolid: overrides?.primaryColor || '$indigo9',\n      accentSolidHover:\n        overrides?.primaryHoverColor || overrides?.primaryColor || '$indigo10',\n      accentText: '$indigo11',\n      accentTextContrast: '$indigo12',\n\n      // neutral colors\n      neutralBase: '$gray1',\n      neutralBgSubtle: 'white',\n      neutralBg: '$gray3',\n      neutralBgHover: '$gray2',\n      neutralBgActive: '$gray5',\n      neutralLine: '$gray6',\n      neutralBorder: '$gray7',\n      neutralBorderHover: '$gray8',\n      neutralSolid: '$gray9',\n      neutralSolidHover: '$gray10',\n      neutralText: '$gray11',\n      neutralTextContrast: '$gray12',\n\n      // secondary colors\n      secondaryBase: '$indigoA1',\n      secondaryBgSubtle: '$indigoA2',\n      secondaryBg: '$indigoA3',\n      secondaryBgHover: '$indigoA4',\n      secondaryBgActive: '$indigoA5',\n      secondaryLine: '$indigoA6',\n      secondaryBorder: '$indigoA7',\n      secondaryBorderHover: '$indigoA8',\n      secondarySolid: '$indigoA9',\n      secondarySolidHover: '$indigoA10',\n      secondaryText: '$indigoA11',\n      secondaryTextContrast: '$indigoA12',\n\n      // general colors\n      borderColor: overrides?.borderColor || '$neutralBorder',\n      textColor: overrides?.textColor || '$neutralTextContrast',\n      focusColor: '$neutralTextContrast',\n      errorText: '$red12',\n      errorAccent: '$red10',\n      successAccent: '$green10',\n\n      // component colors\n      reservoirLogoColor: '#11181C',\n      buttonTextColor: overrides?.buttonTextColor || 'white',\n      buttonTextHoverColor: overrides?.buttonTextHoverColor || 'white',\n      inputBackground: '$neutralBgHover',\n      overlayBackground: overrides?.overlayBackground || '$blackA10',\n      headerBackground: overrides?.headerBackground || '$neutralBgHover',\n      footerBackground: overrides?.footerBackground || '$neutralBgHover',\n      contentBackground: overrides?.contentBackground || '$neutralBgSubtle',\n      wellBackground: overrides?.wellBackground || '$gray3',\n      popoverBackground: overrides?.popoverBackground || '$neutralBase',\n    },\n    assets: {\n      ethIcon: overrides?.ethIcon || 'gray',\n    },\n    ...sharedTheme,\n  }\n}\n","import React, { Dispatch, ReactElement, SetStateAction, useEffect } from 'react'\nimport { useFallbackState } from '../../hooks'\nimport {\n  Flex,\n  Box,\n  Text,\n  Anchor,\n  Button,\n  FormatCurrency,\n  FormatCryptoCurrency,\n  Loader,\n} from '../../primitives'\nimport Progress from '../Progress'\nimport { Modal } from '../Modal'\nimport {\n  faCircleExclamation,\n  faCheckCircle,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport TokenLineItem from '../TokenLineItem'\nimport { BuyModalRenderer, BuyStep, BuyModalStepData } from './BuyModalRenderer'\nimport { Execute } from '@reservoir0x/reservoir-sdk'\nimport ProgressBar from '../ProgressBar'\nimport { useNetwork } from 'wagmi'\nimport QuantitySelector from '../QuantitySelector'\nimport { formatNumber } from '../../lib/numbers'\n\ntype PurchaseData = {\n  tokenId?: string\n  collectionId?: string\n  maker?: string\n  steps?: Execute['steps']\n}\n\nconst ModalCopy = {\n  titleInsufficientFunds: 'Add Funds',\n  titleUnavilable: 'Selected item is no longer Available',\n  titleDefault: 'Complete Checkout',\n  ctaClose: 'Close',\n  ctaCheckout: 'Checkout',\n  ctaInsufficientFunds: 'Add Funds',\n  ctaGoToToken: '',\n  ctaAwaitingValidation: 'Waiting for transaction to be validated',\n  ctaAwaitingApproval: 'Waiting for approval...',\n  ctaCopyAddress: 'Copy Wallet Address',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  tokenId?: string\n  collectionId?: string\n  orderId?: string\n  feesOnTopBps?: string[] | null\n  feesOnTopFixed?: string[] | null\n  normalizeRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onGoToToken?: () => any\n  onPurchaseComplete?: (data: PurchaseData) => void\n  onPurchaseError?: (error: Error, data: PurchaseData) => void\n  onClose?: (\n    data: PurchaseData,\n    stepData: BuyModalStepData | null,\n    currentStep: BuyStep\n  ) => void\n}\n\nfunction titleForStep(step: BuyStep, copy: typeof ModalCopy) {\n  switch (step) {\n    case BuyStep.Unavailable:\n      return copy.titleUnavilable\n    default:\n      return copy.titleDefault\n  }\n}\n\nexport function BuyModal({\n  openState,\n  trigger,\n  tokenId,\n  collectionId,\n  orderId,\n  feesOnTopBps,\n  feesOnTopFixed,\n  normalizeRoyalties,\n  copyOverrides,\n  onPurchaseComplete,\n  onPurchaseError,\n  onClose,\n  onGoToToken,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n  const { chain: activeChain } = useNetwork()\n\n  return (\n    <BuyModalRenderer\n      open={open}\n      tokenId={tokenId}\n      collectionId={collectionId}\n      orderId={orderId}\n      feesOnTopBps={feesOnTopBps}\n      feesOnTopFixed={feesOnTopFixed}\n      normalizeRoyalties={normalizeRoyalties}\n    >\n      {({\n        loading,\n        token,\n        collection,\n        quantityAvailable,\n        quantity,\n        averageUnitPrice,\n        currency,\n        mixedCurrencies,\n        totalPrice,\n        feeOnTop,\n        buyStep,\n        transactionError,\n        hasEnoughCurrency,\n        addFundsLink,\n        steps,\n        stepData,\n        feeUsd,\n        totalUsd,\n        usdPrice,\n        balance,\n        address,\n        blockExplorerBaseUrl,\n        setQuantity,\n        setBuyStep,\n        buyToken,\n      }) => {\n        const title = titleForStep(buyStep, copy)\n\n        useEffect(() => {\n          if (buyStep === BuyStep.Complete && onPurchaseComplete) {\n            const data: PurchaseData = {\n              tokenId: tokenId,\n              collectionId: collectionId,\n              maker: address,\n            }\n            if (steps) {\n              data.steps = steps\n            }\n            onPurchaseComplete(data)\n          }\n        }, [buyStep])\n\n        useEffect(() => {\n          if (transactionError && onPurchaseError) {\n            const data: PurchaseData = {\n              tokenId: tokenId,\n              collectionId: collectionId,\n              maker: address,\n            }\n            onPurchaseError(transactionError, data)\n          }\n        }, [transactionError])\n\n        const executableSteps =\n          steps?.filter((step) => step.items && step.items.length > 0) || []\n        const lastStepItems =\n          executableSteps[executableSteps.length - 1]?.items || []\n\n        const purchaseTxHashes =\n          stepData?.currentStep?.items?.reduce((txHashes, item) => {\n            item.salesData?.forEach((saleData) => {\n              if (saleData.txHash) {\n                txHashes.add(saleData.txHash)\n              }\n            })\n            return txHashes\n          }, new Set<string>()) || []\n\n        const totalPurchases = Array.from(purchaseTxHashes).length\n\n        const failedPurchases =\n          totalPurchases - (stepData?.currentStep?.items?.length || 0)\n\n        const successfulPurchases = totalPurchases - failedPurchases\n        const finalTxHash = lastStepItems[lastStepItems.length - 1]?.txHash\n\n        const price =\n          totalPrice || token?.token?.lastSale?.price?.amount?.decimal || 0\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data: PurchaseData = {\n                  tokenId: tokenId,\n                  collectionId: collectionId,\n                  maker: address,\n                }\n                onClose(data, stepData, buyStep)\n              }\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            {buyStep === BuyStep.Unavailable && !loading && (\n              <Flex direction=\"column\">\n                <TokenLineItem\n                  tokenDetails={token}\n                  collection={collection}\n                  usdConversion={usdPrice || 0}\n                  isUnavailable={true}\n                  price={quantity > 1 ? averageUnitPrice : price}\n                  currency={currency}\n                  priceSubtitle={quantity > 1 ? 'Average Price' : undefined}\n                  showRoyalties={true}\n                />\n                <Button\n                  onClick={() => {\n                    setOpen(false)\n                  }}\n                  css={{ m: '$4' }}\n                >\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n\n            {buyStep === BuyStep.Checkout && !loading && (\n              <Flex direction=\"column\">\n                {transactionError && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      {transactionError.message}\n                    </Text>\n                  </Flex>\n                )}\n                {mixedCurrencies && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      Mixed currency listings are only available to checkout\n                      with {currency?.symbol || 'ETH'}.\n                    </Text>\n                  </Flex>\n                )}\n                <TokenLineItem\n                  tokenDetails={token}\n                  collection={collection}\n                  usdConversion={usdPrice || 0}\n                  price={quantity > 1 ? averageUnitPrice : price}\n                  currency={currency}\n                  css={{ border: 0 }}\n                  priceSubtitle={quantity > 1 ? 'Average Price' : undefined}\n                  showRoyalties={true}\n                />\n                {quantityAvailable > 1 && (\n                  <Flex\n                    css={{ p: '$4', borderBottom: '1px solid $borderColor' }}\n                    justify=\"between\"\n                  >\n                    <Flex direction=\"column\" css={{ gap: '$1' }}>\n                      <Text style=\"body3\">Quantity</Text>\n                      <Text style=\"body3\" color=\"subtle\">\n                        {formatNumber(quantityAvailable)} items available\n                      </Text>\n                    </Flex>\n                    <QuantitySelector\n                      min={1}\n                      max={quantityAvailable}\n                      quantity={quantity}\n                      setQuantity={(quantity) => {\n                        setQuantity(quantity)\n                      }}\n                    />\n                  </Flex>\n                )}\n                {feeOnTop > 0 && (\n                  <>\n                    <Flex\n                      align=\"center\"\n                      justify=\"between\"\n                      css={{ pt: '$4', px: '$4' }}\n                    >\n                      <Text style=\"subtitle2\">Referral Fee</Text>\n                      <FormatCryptoCurrency\n                        amount={feeOnTop}\n                        address={currency?.contract}\n                        decimals={currency?.decimals}\n                        symbol={currency?.symbol}\n                      />\n                    </Flex>\n                    <Flex justify=\"end\">\n                      <FormatCurrency\n                        amount={feeUsd}\n                        color=\"subtle\"\n                        css={{ pr: '$4' }}\n                      />\n                    </Flex>\n                  </>\n                )}\n\n                <Flex\n                  align=\"center\"\n                  justify=\"between\"\n                  css={{ pt: '$4', px: '$4' }}\n                >\n                  <Text style=\"h6\">Total</Text>\n                  <FormatCryptoCurrency\n                    textStyle=\"h6\"\n                    amount={totalPrice}\n                    address={currency?.contract}\n                    decimals={currency?.decimals}\n                    symbol={currency?.symbol}\n                  />\n                </Flex>\n                <Flex justify=\"end\">\n                  <FormatCurrency\n                    amount={totalUsd}\n                    color=\"subtle\"\n                    css={{ mr: '$4' }}\n                  />\n                </Flex>\n\n                <Box css={{ p: '$4', width: '100%' }}>\n                  {hasEnoughCurrency ? (\n                    <Button\n                      onClick={buyToken}\n                      css={{ width: '100%' }}\n                      color=\"primary\"\n                    >\n                      {copy.ctaCheckout}\n                    </Button>\n                  ) : (\n                    <Flex direction=\"column\" align=\"center\">\n                      <Flex align=\"center\" css={{ mb: '$3' }}>\n                        <Text css={{ mr: '$3' }} color=\"error\" style=\"body3\">\n                          Insufficient Balance\n                        </Text>\n\n                        <FormatCryptoCurrency\n                          amount={balance}\n                          address={currency?.contract}\n                          decimals={currency?.decimals}\n                          symbol={currency?.symbol}\n                          textStyle=\"body3\"\n                        />\n                      </Flex>\n\n                      <Button\n                        onClick={() => {\n                          window.open(addFundsLink, '_blank')\n                        }}\n                        css={{ width: '100%' }}\n                      >\n                        {copy.ctaInsufficientFunds}\n                      </Button>\n                    </Flex>\n                  )}\n                </Box>\n              </Flex>\n            )}\n\n            {buyStep === BuyStep.Approving && token && (\n              <Flex direction=\"column\">\n                <TokenLineItem\n                  tokenDetails={token}\n                  collection={collection}\n                  usdConversion={usdPrice || 0}\n                  price={quantity > 1 ? averageUnitPrice : price}\n                  currency={currency}\n                  priceSubtitle={quantity > 1 ? 'Average Price' : undefined}\n                  quantity={quantity}\n                />\n                {stepData && stepData.totalSteps > 1 && (\n                  <ProgressBar\n                    css={{ px: '$4', mt: '$3' }}\n                    value={stepData?.stepProgress || 0}\n                    max={stepData?.totalSteps || 0}\n                  />\n                )}\n                {!stepData && <Loader css={{ height: 206 }} />}\n                {stepData && (\n                  <Progress\n                    title={stepData?.currentStep.action || ''}\n                    txHash={stepData?.currentStepItem.txHash}\n                    blockExplorerBaseUrl={`${blockExplorerBaseUrl}/tx/${stepData?.currentStepItem.txHash}`}\n                  />\n                )}\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {stepData?.currentStepItem.txHash\n                    ? copy.ctaAwaitingValidation\n                    : copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n\n            {buyStep === BuyStep.Complete && token && (\n              <Flex direction=\"column\">\n                <Flex\n                  css={{\n                    p: '$4',\n                    py: '$5',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                  }}\n                >\n                  {totalPurchases === 1 ? (\n                    <>\n                      <Text\n                        style=\"h5\"\n                        css={{ textAlign: 'center', mt: 24, mb: 24 }}\n                      >\n                        Congratulations!\n                      </Text>\n                    </>\n                  ) : (\n                    <>\n                      <Box\n                        css={{\n                          color: failedPurchases\n                            ? '$errorAccent'\n                            : '$successAccent',\n                        }}\n                      >\n                        <FontAwesomeIcon\n                          icon={\n                            failedPurchases\n                              ? faCircleExclamation\n                              : faCheckCircle\n                          }\n                          fontSize={32}\n                        />\n                      </Box>\n                      <Text\n                        style=\"h5\"\n                        css={{ textAlign: 'center', mt: 24, mb: 24 }}\n                      >\n                        {failedPurchases\n                          ? `${successfulPurchases} ${\n                              successfulPurchases > 1 ? 'items' : 'item'\n                            } purchased, ${failedPurchases} ${\n                              failedPurchases > 1 ? 'items' : 'item'\n                            } failed`\n                          : 'Congrats! Purchase was successful.'}\n                      </Text>\n                    </>\n                  )}\n                  {totalPurchases === 1 && (\n                    <img\n                      src={token?.token?.imageSmall}\n                      style={{ width: 100, height: 100 }}\n                    />\n                  )}\n                  {totalPurchases > 1 && (\n                    <Flex direction=\"column\" css={{ gap: '$2' }}>\n                      {stepData?.currentStep.items?.map((item) => {\n                        const txHash = item.txHash\n                          ? `${item.txHash.slice(0, 4)}...${item.txHash.slice(\n                              -4\n                            )}`\n                          : ''\n                        return (\n                          <Anchor\n                            href={`${blockExplorerBaseUrl}/tx/${item?.txHash}`}\n                            color=\"primary\"\n                            weight=\"medium\"\n                            target=\"_blank\"\n                            css={{ fontSize: 12 }}\n                          >\n                            View transaction: {txHash}\n                          </Anchor>\n                        )\n                      })}\n                    </Flex>\n                  )}\n\n                  {totalPurchases === 1 && (\n                    <>\n                      <Flex\n                        css={{ mb: 24, mt: 24, maxWidth: '100%' }}\n                        align=\"center\"\n                        justify=\"center\"\n                      >\n                        {!!token.token?.collection?.image && (\n                          <Box css={{ mr: '$1' }}>\n                            <img\n                              src={token.token?.collection?.image}\n                              style={{\n                                width: 24,\n                                height: 24,\n                                borderRadius: '50%',\n                              }}\n                            />\n                          </Box>\n                        )}\n                        <Text\n                          style=\"subtitle2\"\n                          css={{ maxWidth: '100%' }}\n                          ellipsify\n                        >\n                          {token?.token?.name\n                            ? token?.token?.name\n                            : `#${token?.token?.tokenId}`}\n                        </Text>\n                      </Flex>\n                      <Flex css={{ mb: '$2' }} align=\"center\">\n                        <Box css={{ color: '$successAccent', mr: '$2' }}>\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </Box>\n                        <Text style=\"body1\">\n                          Your transaction went through successfully\n                        </Text>\n                      </Flex>\n                      <Anchor\n                        color=\"primary\"\n                        weight=\"medium\"\n                        css={{ fontSize: 12 }}\n                        href={`${blockExplorerBaseUrl}/tx/${finalTxHash}`}\n                        target=\"_blank\"\n                      >\n                        View on{' '}\n                        {activeChain?.blockExplorers?.default.name ||\n                          'Etherscan'}\n                      </Anchor>\n                    </>\n                  )}\n                </Flex>\n                <Flex\n                  css={{\n                    p: '$4',\n                    flexDirection: 'column',\n                    gap: '$3',\n                    '@bp1': {\n                      flexDirection: 'row',\n                    },\n                  }}\n                >\n                  {!!onGoToToken ? (\n                    <>\n                      <Button\n                        onClick={() => {\n                          setOpen(false)\n                        }}\n                        css={{ flex: 1 }}\n                        color=\"ghost\"\n                      >\n                        {copy.ctaClose}\n                      </Button>\n                      <Button\n                        style={{ flex: 1 }}\n                        color=\"primary\"\n                        onClick={() => {\n                          onGoToToken()\n                        }}\n                      >\n                        {copy.ctaGoToToken.length > 0\n                          ? copy.ctaGoToToken\n                          : `Go to ${\n                              successfulPurchases > 1 ? 'Tokens' : 'Token'\n                            }`}\n                      </Button>\n                    </>\n                  ) : (\n                    <Button\n                      onClick={() => {\n                        setOpen(false)\n                      }}\n                      style={{ flex: 1 }}\n                      color=\"primary\"\n                    >\n                      {copy.ctaClose}\n                    </Button>\n                  )}\n                </Flex>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </BuyModalRenderer>\n  )\n}\n\nBuyModal.Custom = BuyModalRenderer\n","import { Dispatch, SetStateAction, useState } from 'react'\n\ntype useStateType<S> = [S, Dispatch<SetStateAction<S>>]\n\nconst useFallbackState = <T>(defaultValue: T, state?: useStateType<T>) => {\n  const _state = useState<T>(defaultValue)\n\n  if (state) {\n    return state\n  }\n\n  return _state\n}\n\nexport default useFallbackState\n","import React, { ElementRef, forwardRef, ComponentPropsWithoutRef } from 'react'\nimport { styled } from '../../stitches.config'\n\nexport const StyledAnchor = styled('a', {\n  backgroundColor: 'transparent',\n  cursor: 'pointer',\n  fontFamily: '$body',\n  fontSize: 16,\n  color: 'inherit',\n  textDecoration: 'inherit',\n  $$focusColor: '$colors$neutralTextContrast',\n  '&:focus-visible': {\n    color: '$neutralTextContrast',\n    outline: 'none',\n    borderRadius: 4,\n    boxShadow: '0 0 0 2px $$focusColor',\n  },\n  variants: {\n    color: {\n      primary: {\n        color: '$accentText',\n        '&:hover': {\n          color: '$accentSolidHover',\n        },\n      },\n      gray: {\n        color: '$neutralText',\n        '&:hover': {\n          color: '$accentText',\n        },\n      },\n      error: {\n        color: '$errorAccent',\n      },\n    },\n    weight: {\n      heavy: {\n        fontWeight: 700,\n      },\n      medium: {\n        fontWeight: 500,\n      },\n    },\n  },\n  defaultVariants: {\n    color: 'gray',\n    weight: 'heavy',\n  },\n})\n\nexport default forwardRef<\n  ElementRef<typeof StyledAnchor>,\n  ComponentPropsWithoutRef<typeof StyledAnchor>\n>(({ children, ...props }, forwardedRef) => (\n  <StyledAnchor ref={forwardedRef} {...props} tabIndex={0}>\n    {children}\n  </StyledAnchor>\n))\n","import { styled } from '../../stitches.config'\n\nexport default styled('div', {\n  boxSizing: 'border-box',\n  borderStyle: 'solid',\n  borderWidth: 0\n})\n","import { styled } from '../../stitches.config'\n\nconst Button = styled('button', {\n  backgroundColor: 'transparent',\n  backgroundImage: 'none',\n  outline: 'none',\n  fontWeight: 700,\n  fontSize: 16,\n  fontFamily: '$button',\n  transition: 'background-color 250ms linear',\n  gap: '$space$2',\n  display: 'inline-flex',\n  justifyContent: 'center',\n  color: '$buttonTextColor',\n  alignItems: 'center',\n  lineHeight: '20px',\n  $$focusColor: '$colors$focusColor',\n  cursor: 'pointer',\n  border: 0,\n  borderWidth: 0,\n  '&:focus-visible': {\n    boxShadow: '0 0 0 2px $$focusColor',\n  },\n  '&:disabled': {\n    backgroundColor: '$neutralBorder',\n    color: '$neutralText',\n    cursor: 'default',\n  },\n  '&:disabled:hover': {\n    backgroundColor: '$neutralBorderHover',\n    color: '$neutralText',\n    cursor: 'default',\n  },\n  variants: {\n    color: {\n      primary: {\n        backgroundColor: '$accentSolid',\n        color: '$buttonTextColor',\n        '&:hover': {\n          backgroundColor: '$accentSolidHover',\n          color: '$buttonTextHoverColor',\n        },\n      },\n      secondary: {\n        backgroundColor: '$neutralBgHover',\n        color: '$textColor',\n        '&:hover': {\n          backgroundColor: '$neutralBgActive',\n        },\n      },\n      ghost: {\n        backgroundColor: 'transparent',\n        p: 0,\n      },\n    },\n    corners: {\n      rounded: {\n        borderRadius: '$borderRadius',\n      },\n      pill: {\n        borderRadius: 99999,\n      },\n      circle: {\n        borderRadius: '99999px',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    },\n    size: {\n      none: {},\n      xs: {\n        p: '$space$3',\n        lineHeight: '16px',\n        minHeight: 40,\n      },\n      small: {\n        px: '$space$3',\n        py: '$space$4',\n        lineHeight: '12px',\n        minHeight: 44,\n      },\n      medium: {\n        px: '$space$5',\n        py: '$space$3',\n        minHeight: 44,\n      },\n      large: {\n        px: '$space$5',\n        py: '$space$4',\n        minHeight: 52,\n      },\n    },\n  },\n  compoundVariants: [\n    {\n      size: 'xs',\n      corners: 'circle',\n      css: {\n        height: 40,\n        width: 40,\n        p: 0,\n      },\n    },\n    {\n      size: 'small',\n      corners: 'circle',\n      css: {\n        height: 44,\n        width: 44,\n        p: 0,\n      },\n    },\n    {\n      size: 'medium',\n      corners: 'circle',\n      css: {\n        height: 44,\n        width: 44,\n        p: 0,\n      },\n    },\n    {\n      size: 'large',\n      corners: 'circle',\n      css: {\n        height: 52,\n        width: 52,\n        p: 0,\n      },\n    },\n  ],\n  defaultVariants: {\n    color: 'primary',\n    corners: 'rounded',\n    size: 'medium',\n  },\n})\n\nexport default Button\n","import { motion } from 'framer-motion'\nimport { styled } from '../../stitches.config'\n\nconst flexCss = {\n  display: 'flex',\n  boxSizing: 'border-box',\n  borderStyle: 'solid',\n  borderWidth: 0,\n  variants: {\n    align: {\n      start: {\n        alignItems: 'flex-start',\n      },\n      center: {\n        alignItems: 'center',\n      },\n      end: {\n        alignItems: 'flex-end',\n      },\n      stretch: {\n        alignItems: 'stretch',\n      },\n      baseline: {\n        alignItems: 'baseline',\n      },\n    },\n    justify: {\n      start: {\n        justifyContent: 'flex-start',\n      },\n      center: {\n        justifyContent: 'center',\n      },\n      end: {\n        justifyContent: 'flex-end',\n      },\n      between: {\n        justifyContent: 'space-between',\n      },\n    },\n    direction: {\n      row: {\n        flexDirection: 'row',\n      },\n      column: {\n        flexDirection: 'column',\n      },\n      rowReverse: {\n        flexDirection: 'row-reverse',\n      },\n      columnReverse: {\n        flexDirection: 'column-reverse',\n      },\n    },\n    wrap: {\n      noWrap: {\n        flexWrap: 'nowrap',\n      },\n      wrap: {\n        flexWrap: 'wrap',\n      },\n      wrapReverse: {\n        flexWrap: 'wrap-reverse',\n      },\n    },\n  },\n}\n\nexport default styled('div', flexCss)\nexport const AnimatedFlex = styled(motion.div, flexCss)\n","import FormatCrypto from './FormatCrypto'\nimport React, { FC, ComponentProps } from 'react'\nimport CryptoCurrencyIcon from './CryptoCurrencyIcon'\nimport { useNetwork } from 'wagmi'\nimport Tooltip from './Tooltip'\nimport Anchor from './Anchor'\nimport { zeroAddress } from 'viem'\n\ntype FormatCryptoCurrencyProps = {\n  logoWidth?: number\n  address?: string\n  chainId?: number\n  symbol?: string\n}\n\ntype Props = ComponentProps<typeof FormatCrypto> & FormatCryptoCurrencyProps\n\nconst FormatCryptoCurrency: FC<Props> = ({\n  amount,\n  address = zeroAddress,\n  maximumFractionDigits,\n  logoWidth = 14,\n  textStyle,\n  css,\n  textColor,\n  decimals,\n  chainId,\n  symbol,\n}) => {\n  const { chain: activeChain } = useNetwork()\n  const blockExplorerBaseUrl =\n    activeChain?.blockExplorers?.default?.url || 'https://etherscan.io'\n\n  return (\n    <FormatCrypto\n      css={css}\n      textColor={textColor}\n      textStyle={textStyle}\n      amount={amount}\n      maximumFractionDigits={maximumFractionDigits}\n      decimals={decimals}\n    >\n      {symbol ? (\n        <Tooltip\n          side=\"top\"\n          content={\n            <Anchor\n              href={`${blockExplorerBaseUrl}/address/${address}`}\n              target=\"_blank\"\n              weight=\"medium\"\n              css={{ fontSize: 14 }}\n              onClick={(event) => event.stopPropagation()}\n            >\n              {symbol}\n            </Anchor>\n          }\n        >\n          <CryptoCurrencyIcon\n            css={{ height: logoWidth }}\n            address={address}\n            chainId={chainId}\n          />\n        </Tooltip>\n      ) : (\n        <CryptoCurrencyIcon\n          css={{ height: logoWidth }}\n          address={address}\n          chainId={chainId}\n        />\n      )}\n    </FormatCrypto>\n  )\n}\n\nexport default FormatCryptoCurrency\n","import { formatBN } from '../lib/numbers'\nimport React, { FC } from 'react'\nimport { Flex, Text } from './index'\n\ntype Props = {\n  amount: string | number | bigint | null | undefined\n  maximumFractionDigits?: number\n  decimals?: number\n  css?: Parameters<typeof Text>['0']['css']\n  textStyle?: Parameters<typeof Text>['0']['style']\n  textColor?: Parameters<typeof Text>['0']['color']\n  children?: React.ReactNode\n}\n\nconst FormatCrypto: FC<Props> = ({\n  amount,\n  maximumFractionDigits = 4,\n  decimals = 18,\n  css,\n  textStyle = 'subtitle2',\n  textColor = 'base',\n  children,\n}) => {\n  const value = formatBN(amount, maximumFractionDigits, decimals)\n  return (\n    <Flex align=\"center\" css={{ gap: '$1' }}>\n      {value !== '-' ? children : null}\n      <Text style={textStyle} color={textColor} css={css} as=\"p\">\n        {value}\n      </Text>\n    </Flex>\n  )\n}\n\nexport default FormatCrypto\n","import { formatUnits } from 'viem'\n\nconst isSafariBrowser = () =>\n  typeof window !== 'undefined' &&\n  navigator.userAgent.indexOf('Safari') > -1 &&\n  navigator.userAgent.indexOf('Chrome') <= -1\n\nfunction toFixed(num: number, fixed: number) {\n  const re = new RegExp('^-?\\\\d+(?:.\\\\d{0,' + (fixed || -1) + '})?')\n  const fixedNum = num.toString().match(re)\n  return fixedNum ? fixedNum[0] : num\n}\n\nfunction formatNumber(\n  amount: number | null | undefined,\n  maximumFractionDigits: number = 2\n) {\n  const { format } = new Intl.NumberFormat('en-US', {\n    maximumFractionDigits: maximumFractionDigits,\n  })\n  if (!amount) {\n    return '-'\n  }\n  return format(amount)\n}\n\nconst truncateFractionAndFormat = (\n  parts: Intl.NumberFormatPart[],\n  digits: number\n) => {\n  return parts\n    .map(({ type, value }) => {\n      if (type !== 'fraction' || !value || value.length < digits) {\n        return value\n      }\n\n      let formattedValue = ''\n      for (let idx = 0; idx < value.length && idx < digits; idx++) {\n        formattedValue += value[idx]\n      }\n      return formattedValue\n    })\n    .reduce((string, part) => string + part)\n}\n\n/**\n *  Convert ETH values to human readable formats\n * @param amount An ETH amount\n * @param maximumFractionDigits Number of decimal digits\n * @returns returns the ETH value as a `string` or `-` if the amount is `null` or `undefined`\n */\nfunction formatBN(\n  amount: string | number | bigint | null | undefined,\n  maximumFractionDigits: number,\n  decimals: number = 18\n) {\n  if (typeof amount === 'undefined' || amount === null) return '-'\n\n  const amountToFormat =\n    typeof amount === 'number'\n      ? amount\n      : +formatUnits(BigInt(amount), decimals || 18)\n\n  const amountFraction = `${amount}`.split('.')[1]\n  const isSafari = isSafariBrowser()\n  const formatOptions: Intl.NumberFormatOptions = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 20,\n    useGrouping: true,\n    notation: 'compact',\n    compactDisplay: 'short',\n  }\n\n  // New issue introduced in Safari v16 causes a regression and now need lessPrecision flagged in format options\n  if (isSafari) {\n    //@ts-ignore\n    formatOptions.roundingPriority = 'lessPrecision'\n  }\n\n  const parts = new Intl.NumberFormat('en-US', formatOptions).formatToParts(\n    amountToFormat\n  )\n\n  // Safari has a few bugs with the fraction part of formatToParts, sometimes rounding when unnecessary and\n  // when amount is in the thousands not properly representing the value in compact display. Until the bug is fixed\n  // this workaround should help. bugzilla bug report: https://bugs.webkit.org/show_bug.cgi?id=249231\n  // Update: this has been fixed, but still applied for >v15.3 and <v16\n\n  if (isSafari) {\n    const partTypes = parts.map((part) => part.type)\n    const partsIncludesFraction = partTypes.includes('fraction')\n    const partsIncludeCompactIdentifier = partTypes.includes('compact')\n    if (amountFraction) {\n      if (!partsIncludesFraction && !partsIncludeCompactIdentifier) {\n        const integerIndex = parts.findIndex((part) => part.type === 'integer')\n        parts.splice(\n          integerIndex + 1,\n          0,\n          {\n            type: 'decimal',\n            value: '.',\n          },\n          {\n            type: 'fraction',\n            value: amountFraction,\n          }\n        )\n      }\n    } else if (!partsIncludesFraction && partsIncludeCompactIdentifier) {\n      const compactIdentifier = parts.find((part) => part.type === 'compact')\n      const integerIndex = parts.findIndex((part) => part.type === 'integer')\n      const integer = parts[integerIndex]\n      if (compactIdentifier?.value === 'K' && integer) {\n        const fraction = `${amount}`.replace(integer.value, '')[0]\n        if (fraction && Number(fraction) > 0) {\n          parts.splice(\n            integerIndex + 1,\n            0,\n            {\n              type: 'decimal',\n              value: '.',\n            },\n            {\n              type: 'fraction',\n              value: fraction,\n            }\n          )\n        }\n      }\n    }\n  }\n\n  if (parts && parts.length > 0) {\n    const lowestValue = Number(\n      `0.${new Array(maximumFractionDigits).join('0')}1`\n    )\n\n    if (amountToFormat > 1000) {\n      return truncateFractionAndFormat(parts, 1)\n    } else if (\n      amountToFormat < 1 &&\n      amountToFormat < lowestValue &&\n      amountToFormat !== 0\n    ) {\n      return `< ${lowestValue}`\n    } else {\n      return truncateFractionAndFormat(parts, maximumFractionDigits)\n    }\n  } else {\n    return typeof amount === 'string' || typeof amount === 'number'\n      ? `${amount}`\n      : ''\n  }\n}\n\nexport { formatBN, formatNumber, toFixed }\n","import { styled } from '../../stitches.config'\n\nexport default styled('span', {\n  color: '$textColor',\n  fontFamily: '$body',\n  letterSpacing: 0,\n  margin: 0,\n\n  variants: {\n    color: {\n      base: {\n        color: '$textColor',\n      },\n      subtle: {\n        color: '$neutralText',\n      },\n      error: {\n        color: '$errorAccent',\n      },\n      errorLight: {\n        color: '$errorText',\n      },\n      accent: {\n        color: '$accentText',\n      },\n      success: {\n        color: '$successAccent',\n      },\n      button: {\n        color: '$buttonTextColor',\n      },\n    },\n    style: {\n      h2: {\n        fontWeight: 700,\n        fontSize: 48,\n        fontFamily: '$headline',\n      },\n      h3: {\n        fontWeight: 700,\n        fontSize: 32,\n        fontFamily: '$headline',\n      },\n      h4: {\n        fontWeight: 700,\n        fontSize: 24,\n        fontFamily: '$headline',\n      },\n      h5: {\n        fontWeight: 700,\n        fontSize: 20,\n        fontFamily: '$headline',\n      },\n      h6: {\n        fontWeight: 700,\n        fontSize: 16,\n        fontFamily: '$headline',\n      },\n      subtitle1: {\n        fontWeight: 500,\n        fontSize: 16,\n      },\n      subtitle2: {\n        fontWeight: 500,\n        fontSize: 12,\n      },\n      body1: {\n        fontWeight: 400,\n        fontSize: 16,\n      },\n      body2: {\n        fontWeight: 400,\n        fontSize: 14,\n      },\n      body3: {\n        fontWeight: 400,\n        fontSize: 12,\n      },\n      tiny: {\n        fontWeight: 500,\n        fontSize: 10,\n        color: '$neutralSolidHover',\n      },\n    },\n    italic: {\n      true: {\n        fontStyle: 'italic',\n      },\n    },\n    ellipsify: {\n      true: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n    },\n  },\n  compoundVariants: [\n    {\n      style: 'tiny',\n      color: 'base',\n      css: {\n        color: '$textColor',\n      },\n    },\n  ],\n  defaultVariants: {\n    style: 'body1',\n    color: 'base',\n  },\n})\n","import EthLogo from './EthLogo'\nimport React, { FC } from 'react'\nimport { useReservoirClient, useChainCurrency } from '../hooks/index'\nimport { zeroAddress } from 'viem'\nimport { styled } from '../../stitches.config'\nimport { StyledComponent } from '@stitches/react/types/styled-component'\nimport Box from './Box'\nimport wrappedContracts from '../constants/wrappedContracts'\nimport WEthIcon from '../img/WEthIcon'\n\ntype Props = {\n  address: string\n  chainId?: number\n} & Parameters<StyledComponent>['0']\n\nconst StyledImg = styled('img', {})\n\nconst CryptoCurrencyIcon: FC<Props> = ({\n  address = zeroAddress,\n  chainId,\n  css,\n}) => {\n  const client = useReservoirClient()\n  const chainCurrency = useChainCurrency(chainId)\n  const chain = client?.chains.find(\n    (chain) => chain.id === chainCurrency.chainId\n  )\n\n  if (chainCurrency.symbol === 'ETH') {\n    if (zeroAddress === address) {\n      return (\n        <Box css={{ display: 'flex', ...css }}>\n          <EthLogo />\n        </Box>\n      )\n    }\n    if (wrappedContracts[chainCurrency.chainId] === address) {\n      return (\n        <Box css={{ display: 'flex', ...css }}>\n          <WEthIcon />\n        </Box>\n      )\n    }\n  }\n\n  return (\n    <StyledImg\n      src={`${chain?.baseApiUrl}/redirect/currency/${address}/icon/v1`}\n      css={css}\n    />\n  )\n}\n\nexport default CryptoCurrencyIcon\n","import React, { useContext } from 'react'\nimport { ThemeContext } from '../ReservoirKitProvider'\nimport { ReservoirKitThemeContext } from '../../stitches.config'\nimport EthIconGlyph from '../img/EthIconGlyph'\nimport EthIconGray from '../img/EthIconGray'\nimport EthIconPurple from '../img/EthIconPurple'\n\nconst EthLogo = () => {\n  const themeContext = useContext(ThemeContext)\n  const ethIcon: ReservoirKitThemeContext['assets']['ethIcon']['value'] =\n    themeContext && (themeContext as any)\n      ? themeContext['assets']['ethIcon']['value']\n      : 'glyph'\n\n  switch (ethIcon) {\n    case 'glyph':\n      return <EthIconGlyph />\n    case 'gray':\n      return <EthIconGray />\n    case 'purple':\n      return <EthIconPurple />\n  }\n}\n\nexport default EthLogo\n","import React from 'react'\n\nexport default () => (\n  <svg\n    width=\"auto\"\n    height=\"100%\"\n    viewBox=\"5 0 15 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M11.9441 17.97L4.58008 13.62L11.9431 24L19.3131 13.62L11.9411 17.97H11.9441V17.97ZM12.0561 0L4.69008 12.223L12.0551 16.577L19.4201 12.227L12.0561 0Z\"\n      fill=\"black\"\n    />\n  </svg>\n)\n","import React from 'react'\n\nexport default () => (\n  <svg\n    width=\"auto\"\n    height=\"100%\"\n    viewBox=\"5 0 15 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_2127_56739)\">\n      <path\n        d=\"M11.9979 0L11.8369 0.546928V16.4161L11.9979 16.5767L19.3641 12.2225L11.9979 0Z\"\n        fill=\"#343434\"\n      />\n      <path\n        d=\"M11.9979 0L4.63159 12.2225L11.9979 16.5767V8.87428V0Z\"\n        fill=\"#8C8C8C\"\n      />\n      <path\n        d=\"M11.998 17.9714L11.9072 18.0821V23.7349L11.998 23.9999L19.3686 13.6195L11.998 17.9714Z\"\n        fill=\"#3C3C3B\"\n      />\n      <path\n        d=\"M11.9979 23.9999V17.9714L4.63159 13.6195L11.9979 23.9999Z\"\n        fill=\"#8C8C8C\"\n      />\n      <path\n        d=\"M11.998 16.5767L19.3642 12.2225L11.998 8.87427V16.5767Z\"\n        fill=\"#141414\"\n      />\n      <path\n        d=\"M4.63159 12.2225L11.9979 16.5767V8.87427L4.63159 12.2225Z\"\n        fill=\"#393939\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2127_56739\">\n        <rect width=\"24\" height=\"24\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n","import React from 'react'\n\nexport default () => (\n  <svg\n    width=\"auto\"\n    height=\"100%\"\n    viewBox=\"5 0 15 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M12.3654 8.87477V0L5 12.2224L12.3654 8.87477Z\" fill=\"#8A92B2\" />\n    <path\n      d=\"M12.3654 16.5772V8.87477L5 12.2224L12.3654 16.5772ZM12.3654 8.87477L19.7322 12.2224L12.3654 0V8.87477Z\"\n      fill=\"#62688F\"\n    />\n    <path\n      d=\"M12.3655 8.87476V16.5772L19.7322 12.2224L12.3655 8.87476Z\"\n      fill=\"#454A75\"\n    />\n    <path\n      d=\"M12.3654 17.972L5 13.6199L12.3654 23.9999V17.972Z\"\n      fill=\"#8A92B2\"\n    />\n    <path\n      d=\"M19.7363 13.6199L12.3655 17.972V23.9999L19.7363 13.6199Z\"\n      fill=\"#62688F\"\n    />\n  </svg>\n)\n","const wrappedContracts: Record<number, string> = {\n  1: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', //mainnet\n  5: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', //goerli\n  10: '0x4200000000000000000000000000000000000006', //optimism\n  56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', //bnb\n  137: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270', //polygon\n  42161: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1', //arbitrum\n  999: '0x8a5027ea12f45a13deb6CB96A07913c6e192BE84', //zoratestnet\n  80001: '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', //mumbai\n  84531: '0x4200000000000000000000000000000000000006', //base goerli\n  534353: '0xa1EA0B2354F5A344110af2b6AD68e75545009a03', //scrolltestnet\n  7777777: '0x4200000000000000000000000000000000000006', //zora\n  11155111: '0x7b79995e5f793a07bc00c21412e50ecae098e7f9', //sepolia\n}\n\nexport default wrappedContracts\n","import React from 'react'\n\nexport default () => (\n  <svg\n    width=\"auto\"\n    height=\"100%\"\n    viewBox=\"0 0 15 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M7.49721 0L0 12.4432L7.49721 9.03511V0Z\" fill=\"#AE1955\" />\n    <path\n      d=\"M7.49721 9.03506L0 12.4432L7.49721 16.8767V9.03506Z\"\n      fill=\"#801D45\"\n    />\n    <path\n      d=\"M14.9959 12.4433L7.49731 0V9.03511L14.9959 12.4433Z\"\n      fill=\"#801D45\"\n    />\n    <path\n      d=\"M7.49731 16.8767L14.9959 12.4432L11.2466 10.7391L7.49731 9.03506V16.8767Z\"\n      fill=\"#641D3B\"\n    />\n    <path d=\"M0 13.8661L7.49721 24.4337V18.2968L0 13.8661Z\" fill=\"#AE1955\" />\n    <path\n      d=\"M7.49731 18.2968V24.4337L15.0001 13.8661L7.49731 18.2968Z\"\n      fill=\"#801D45\"\n    />\n  </svg>\n)\n","import React from 'react'\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip'\nimport * as Popover from '@radix-ui/react-popover'\nimport Box from './Box'\nimport { styled } from '../../stitches.config'\nimport { useMediaQuery } from '@react-hookz/web'\n\nexport const TooltipArrow = styled(TooltipPrimitive.Arrow, {\n  fill: '$neutralBgHover',\n})\n\nconst PopoverArrow = styled(Popover.Arrow, {\n  fill: '$neutralBgHover',\n})\n\nconst Tooltip = ({\n  children,\n  content,\n  open,\n  defaultOpen,\n  onOpenChange,\n  delayDuration = 0,\n  ...props\n}: any) => {\n  const isSmallDevice = useMediaQuery('only screen and (max-width : 768px)')\n\n  if (isSmallDevice) {\n    return (\n      <Popover.Root\n        open={open}\n        defaultOpen={defaultOpen}\n        onOpenChange={onOpenChange}\n      >\n        <Popover.Trigger\n          style={{\n            backgroundColor: 'transparent',\n            borderWidth: 0,\n            padding: 0,\n            display: 'flex',\n          }}\n        >\n          {children}\n        </Popover.Trigger>\n        <Popover.Content\n          sideOffset={2}\n          side=\"bottom\"\n          align=\"center\"\n          style={{ zIndex: 100, outline: 'none' }}\n          {...props}\n        >\n          <PopoverArrow />\n          <Box\n            css={{\n              zIndex: 9999,\n              $$shadowColor: '$colors$gray7',\n              boxShadow: '0px 1px 5px rgba(0,0,0,0.2)',\n              borderRadius: 8,\n              overflow: 'hidden',\n            }}\n          >\n            <Box\n              css={{\n                background: '$neutralBgHover',\n                p: '$2',\n              }}\n            >\n              {content}\n            </Box>\n          </Box>\n        </Popover.Content>\n      </Popover.Root>\n    )\n  }\n  return (\n    <TooltipPrimitive.Root\n      open={open}\n      defaultOpen={defaultOpen}\n      onOpenChange={onOpenChange}\n      delayDuration={delayDuration}\n    >\n      <TooltipPrimitive.Trigger\n        style={{\n          backgroundColor: 'transparent',\n          borderWidth: 0,\n          padding: 0,\n          display: 'flex',\n        }}\n      >\n        {children}\n      </TooltipPrimitive.Trigger>\n      <TooltipPrimitive.Content\n        sideOffset={2}\n        side=\"bottom\"\n        align=\"center\"\n        style={{ zIndex: 100 }}\n        {...props}\n      >\n        <TooltipArrow />\n        <Box\n          css={{\n            zIndex: 9999,\n            $$shadowColor: '$colors$gray7',\n            boxShadow: '0px 1px 5px rgba(0,0,0,0.2)',\n            borderRadius: 8,\n            overflow: 'hidden',\n          }}\n        >\n          <Box\n            css={{\n              background: '$neutralBgHover',\n              p: '$2',\n            }}\n          >\n            {content}\n          </Box>\n        </Box>\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Root>\n  )\n}\n\nexport default Tooltip\n","import React, { ComponentPropsWithoutRef, FC, useEffect, useState } from 'react'\nimport { Text } from './index'\n\ntype Props = {\n  amount: string | number | null | undefined\n  currency?: Intl.NumberFormatOptions['currency']\n  maximumFractionDigits?: number\n}\n\nconst FormatCurrency: FC<ComponentPropsWithoutRef<typeof Text> & Props> = ({\n  amount,\n  maximumFractionDigits = 2,\n  currency = 'USD',\n  ...props\n}) => {\n  const [formattedValue, setFormattedValue] = useState('')\n\n  useEffect(() => {\n    if (amount) {\n      const lowestValue = Number(\n        `0.${new Array(maximumFractionDigits).join('0')}1`\n      )\n      const tooLow = +amount < lowestValue\n\n      const formatted = new Intl.NumberFormat(undefined, {\n        style: 'currency',\n        currency: currency,\n      }).format(tooLow ? lowestValue : +amount)\n      setFormattedValue(tooLow ? `< ${formatted}` : formatted)\n    } else {\n      setFormattedValue('')\n    }\n  }, [amount, maximumFractionDigits])\n\n  return (\n    <Text\n      {...props}\n      style={props.style || 'subtitle2'}\n      color={props.color || 'base'}\n    >\n      {formattedValue}\n    </Text>\n  )\n}\n\nexport default FormatCurrency\n","import { faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport { styled } from '../../stitches.config'\nimport React, { ComponentPropsWithoutRef, ReactNode } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { motion } from 'framer-motion'\n\nconst LoaderContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: '$neutralText',\n})\n\ntype Props = ComponentPropsWithoutRef<typeof LoaderContainer> & {\n  icon?: ReactNode\n}\n\nexport default function Loader(props: Props) {\n  const { icon, ...containerProps } = props\n  return (\n    <LoaderContainer {...containerProps}>\n      <motion.div\n        initial={{ rotate: 0 }}\n        transition={{ repeat: Infinity, duration: 1, ease: 'linear' }}\n        animate={{ rotate: 360 }}\n      >\n        {icon ? (\n          icon\n        ) : (\n          <FontAwesomeIcon icon={faSpinner} width={20} height={20} />\n        )}\n      </motion.div>\n    </LoaderContainer>\n  )\n}\n","import { Anchor, Box, Flex, Text } from '../primitives'\nimport React, { FC } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCube, faWallet } from '@fortawesome/free-solid-svg-icons'\nimport { useNetwork } from 'wagmi'\n\ntype Props = {\n  title: string\n  txHash?: string\n  blockExplorerBaseUrl?: string\n}\n\nconst Progress: FC<Props> = ({ title, txHash, blockExplorerBaseUrl }) => {\n  const { chain: activeChain } = useNetwork()\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        alignItems: 'center',\n        gap: '$4',\n        mt: '$5',\n        mb: '$3',\n      }}\n    >\n      <Text style=\"h6\">{title}</Text>\n      <Box css={{ color: '$neutralText' }}>\n        <FontAwesomeIcon\n          icon={txHash ? faCube : faWallet}\n          style={{\n            width: '32px',\n            height: '32px',\n            marginTop: '12px 0px',\n          }}\n        />\n      </Box>\n      <Anchor\n        color=\"primary\"\n        weight=\"medium\"\n        css={{\n          fontSize: 12,\n          visibility: txHash ? 'visible' : 'hidden',\n        }}\n        href={blockExplorerBaseUrl}\n        target=\"_blank\"\n      >\n        View on {activeChain?.blockExplorers?.default.name || 'Etherscan'}\n      </Anchor>\n    </Flex>\n  )\n}\n\nexport default Progress\n","import React, {\n  ComponentPropsWithoutRef,\n  ElementRef,\n  forwardRef,\n  ReactNode,\n  useContext,\n} from 'react'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faClose,\n  faChevronLeft,\n  faLock,\n} from '@fortawesome/free-solid-svg-icons'\nimport { Anchor, Button, Flex, Text, Loader, Box } from '../primitives'\nimport { styled } from '../../stitches.config'\nimport { Dialog } from '../primitives/Dialog'\nimport { ProviderOptionsContext } from '../ReservoirKitProvider'\nimport ReservoirText from '../img/ReservoirText'\n\nconst Title = styled(DialogPrimitive.Title, {\n  margin: 0,\n})\n\nexport enum ModalSize {\n  MD,\n  LG,\n}\n\ntype Props = {\n  title: string\n  children: ReactNode\n  size?: ModalSize\n  onBack?: (() => void) | null\n  loading?: boolean\n} & Pick<\n  ComponentPropsWithoutRef<typeof Dialog>,\n  | 'onPointerDownOutside'\n  | 'onOpenChange'\n  | 'open'\n  | 'trigger'\n  | 'onFocusCapture'\n>\n\nexport const Logo = styled(ReservoirText, {\n  fill: '$neutralText',\n  '&:hover': {\n    fill: '$neutralSolid',\n  },\n})\n\nexport const Modal = forwardRef<ElementRef<typeof Dialog>, Props>(\n  (\n    {\n      title,\n      children,\n      trigger,\n      onBack,\n      open,\n      size = ModalSize.MD,\n      onOpenChange,\n      loading,\n      onPointerDownOutside,\n      onFocusCapture,\n    },\n    forwardedRef\n  ) => {\n    const providerOptionsContext = useContext(ProviderOptionsContext)\n\n    return (\n      <Dialog\n        ref={forwardedRef}\n        trigger={trigger}\n        open={open}\n        onOpenChange={onOpenChange}\n        size={size}\n        onPointerDownOutside={onPointerDownOutside}\n        onFocusCapture={onFocusCapture}\n      >\n        <Flex\n          css={{\n            p: 16,\n            backgroundColor: '$headerBackground',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            borderTopRightRadius: '$borderRadius',\n            borderTopLeftRadius: '$borderRadius',\n          }}\n        >\n          <Title css={{ alignItems: 'center', display: 'flex' }}>\n            {onBack && (\n              <Button\n                color=\"ghost\"\n                size=\"none\"\n                css={{ mr: '$2', color: '$neutralText' }}\n                onClick={onBack}\n              >\n                <FontAwesomeIcon icon={faChevronLeft} width={16} height={16} />\n              </Button>\n            )}\n            <Text style=\"h6\">{title}</Text>\n          </Title>\n          <DialogPrimitive.Close asChild>\n            <Button color=\"ghost\" size=\"none\" css={{ color: '$neutralText' }}>\n              <FontAwesomeIcon icon={faClose} width={16} height={16} />\n            </Button>\n          </DialogPrimitive.Close>\n        </Flex>\n        {loading && (\n          <Loader\n            css={{\n              minHeight: 242,\n              backgroundColor: '$contentBackground',\n            }}\n          />\n        )}\n        <Box css={{ maxHeight: '85vh', overflowY: 'auto' }}>{children}</Box>\n        {!providerOptionsContext.disablePoweredByReservoir && (\n          <Flex\n            align=\"center\"\n            css={{\n              mx: 'auto',\n              alignItems: 'center',\n              justifyContent: 'center',\n              pb: 12,\n              gap: '$1',\n              visibility: '$poweredByReservoirVisibility',\n              borderBottomRightRadius: '$borderRadius',\n              borderBottomLeftRadius: '$borderRadius',\n            }}\n          >\n            <Box css={{ color: '$neutralBorderHover' }}>\n              <FontAwesomeIcon icon={faLock} width={9} height={10} />\n            </Box>\n            <Text\n              style=\"tiny\"\n              color=\"subtle\"\n              css={{\n                display: 'inline-flex',\n                alignItems: 'center',\n                gap: 4,\n                fontWeight: 400,\n                lineHeight: '12px',\n                color: '$neutralText',\n              }}\n            >\n              Powered by{' '}\n              <Anchor\n                href=\"https://reservoir.tools/\"\n                target=\"_blank\"\n                weight=\"heavy\"\n                color=\"gray\"\n                css={{\n                  height: 12,\n                  fontSize: 12,\n                  '&:hover': {\n                    color: '$neutralSolid',\n                    fill: '$neutralSolid',\n                  },\n                }}\n              >\n                <Logo />\n              </Anchor>\n            </Text>\n          </Flex>\n        )}\n      </Dialog>\n    )\n  }\n)\n","import { styled } from '../../stitches.config'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\nimport React, {\n  ComponentPropsWithoutRef,\n  ElementRef,\n  forwardRef,\n  ReactNode,\n  useState,\n  useEffect,\n} from 'react'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { ModalSize } from '../modal/Modal'\nimport { useMediaQuery } from '../hooks'\n\nconst Overlay = styled(DialogPrimitive.Overlay, {\n  backgroundColor: '$overlayBackground',\n  position: 'fixed',\n  inset: 0,\n  zIndex: 1000,\n})\n\nconst AnimatedOverlay = forwardRef<\n  ElementRef<typeof DialogPrimitive.Overlay>,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ ...props }, forwardedRef) => (\n  <Overlay {...props} forceMount asChild>\n    <motion.div\n      ref={forwardedRef}\n      transition={{ duration: 0.5 }}\n      initial={{\n        opacity: 0,\n      }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  </Overlay>\n))\n\nconst Content = styled(DialogPrimitive.Content, {\n  backgroundColor: '$contentBackground',\n  borderRadius: '$borderRadius',\n  $$shadowColor: '$colors$gray7',\n  boxShadow: 'box-shadow: 0px 2px 16px $$shadowColor',\n  border: '1px solid $borderColor',\n  position: 'fixed',\n  left: '50%',\n  maxWidth: 516,\n  top: '100%',\n  width: '100%',\n  zIndex: 1000,\n  '&:focus': { outline: 'none' },\n  '@media(max-width: 520px)': {\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    border: 0,\n  },\n})\n\nconst AnimatedContent = forwardRef<\n  ElementRef<typeof DialogPrimitive.DialogContent>,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.DialogContent>\n>(({ children, ...props }, forwardedRef) => {\n  const isMobile = useMediaQuery('(max-width: 520px)')\n\n  const animation = isMobile\n    ? {\n        initial: {\n          opacity: 0,\n          bottom: '-100%',\n          top: 'auto',\n          left: 0,\n        },\n        animate: {\n          opacity: 1,\n          bottom: 0,\n          top: 'auto',\n          left: 0,\n        },\n\n        exit: {\n          opacity: 0,\n          bottom: '-100%',\n          top: 'auto',\n          left: 0,\n        },\n      }\n    : {\n        initial: {\n          opacity: 0,\n          top: '14%',\n          transform: 'translateX(-50%)',\n        },\n        animate: {\n          opacity: 1,\n          top: '9%',\n          transform: 'translateX(-50%)',\n        },\n\n        exit: {\n          opacity: 0,\n          top: '14%',\n          transform: 'translateX(-50%)',\n        },\n      }\n\n  return (\n    <Content forceMount asChild {...props}>\n      <motion.div\n        key={isMobile + 'modal'}\n        ref={forwardedRef}\n        transition={{ type: isMobile ? 'tween' : 'spring', duration: 0.5 }}\n        {...animation}\n      >\n        {children}\n      </motion.div>\n    </Content>\n  )\n})\n\nconst StyledAnimatedContent = styled(AnimatedContent, {})\n\ntype Props = {\n  trigger: ReactNode\n  portalProps?: DialogPrimitive.PortalProps\n  onOpenChange?: (open: boolean) => void\n  open?: boolean\n  size?: ModalSize\n}\n\nconst Dialog = forwardRef<\n  ElementRef<typeof DialogPrimitive.Content>,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & Props\n>(\n  (\n    { children, trigger, portalProps, onOpenChange, open, size, ...props },\n    forwardedRef\n  ) => {\n    const [dialogOpen, setDialogOpen] = useState(false)\n\n    useEffect(() => {\n      if (open !== undefined && open !== dialogOpen) {\n        setDialogOpen(open)\n        if (onOpenChange) {\n          onOpenChange(open)\n        }\n      }\n    }, [open])\n\n    return (\n      <DialogPrimitive.Root\n        onOpenChange={(open) => {\n          setDialogOpen(open)\n          if (onOpenChange) {\n            onOpenChange(open)\n          }\n        }}\n        open={dialogOpen}\n      >\n        <DialogPrimitive.DialogTrigger asChild>\n          {trigger}\n        </DialogPrimitive.DialogTrigger>\n        <AnimatePresence>\n          {dialogOpen && (\n            <DialogPrimitive.DialogPortal forceMount {...portalProps}>\n              <AnimatedOverlay />\n              <StyledAnimatedContent\n                ref={forwardedRef}\n                {...props}\n                forceMount\n                css={{\n                  maxWidth: size === ModalSize.MD ? 516 : 750,\n                }}\n              >\n                {children}\n              </StyledAnimatedContent>\n            </DialogPrimitive.DialogPortal>\n          )}\n        </AnimatePresence>\n      </DialogPrimitive.Root>\n    )\n  }\n)\n\nexport {\n  Dialog,\n  Content,\n  AnimatedContent,\n  Overlay,\n  AnimatedOverlay,\n  StyledAnimatedContent,\n}\n","import { useEffect, useState } from 'react'\n\nconst useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false)\n\n  useEffect(() => {\n    const media = window.matchMedia(query)\n    if (media.matches !== matches) {\n      setMatches(media.matches)\n    }\n    const listener = () => {\n      setMatches(media.matches)\n    }\n    media.addEventListener('change', listener)\n    return () => media.removeEventListener('change', listener)\n  }, [matches, query])\n\n  return matches\n}\n\nexport default useMediaQuery\n","import React from 'react'\n\nconst ReservoirText = (props: any) => {\n  return (\n    <svg\n      width=\"50\"\n      height=\"10\"\n      viewBox=\"0 0 50 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"M0.104492 8.99985V2.75985C0.608492 2.72385 1.11249 2.72385 1.62849 2.75985L1.73649 3.77985H1.80849C2.00049 2.97585 2.78049 2.63985 3.87249 2.63985C3.92049 3.04785 3.92049 3.71985 3.87249 4.12785C2.51649 4.12785 2.14449 4.40385 1.82049 5.26785V8.99985C1.40049 9.05985 0.512492 9.05985 0.104492 8.99985Z\" />\n      <path d=\"M10.2115 5.02785V6.40785C9.40749 6.46785 7.55949 6.47985 6.52749 6.41985V6.71985C6.52749 7.57185 7.01949 7.72785 8.05149 7.72785C8.75949 7.72785 9.26349 7.66785 9.93549 7.53585C9.98349 7.94385 9.98349 8.51985 9.93549 8.92785C9.09549 9.07185 8.42349 9.14385 7.63149 9.14385C5.90349 9.14385 4.81149 8.62785 4.81149 7.10385V4.70385C4.81149 3.10785 5.96349 2.63985 7.55949 2.63985C9.14349 2.63985 10.2115 3.31185 10.2115 5.02785ZM8.53149 5.36385V4.95585C8.53149 4.13985 8.06349 4.04385 7.53549 4.04385C7.00749 4.04385 6.52749 4.13985 6.52749 4.95585V5.42385L7.45149 5.36385H8.53149Z\" />\n      <path d=\"M15.9181 6.94785V7.53585C15.9181 8.69985 15.0061 9.14385 13.5181 9.14385C12.8821 9.14385 12.1501 9.09585 11.4661 8.97585C11.4061 8.54385 11.4061 8.05185 11.4661 7.63185C12.1141 7.73985 12.7621 7.77585 13.2661 7.77585C13.7461 7.77585 14.2021 7.73985 14.2021 7.33185V7.10385C14.2021 6.75585 13.9621 6.69585 13.5541 6.58785L12.4741 6.27585C11.7901 6.08385 11.4181 5.65185 11.4181 4.85985V4.19985C11.4181 3.08385 12.3781 2.63985 13.9021 2.63985C14.5021 2.63985 15.1261 2.68785 15.8221 2.83185C15.8821 3.26385 15.8821 3.74385 15.8221 4.16385C15.0901 4.03185 14.6221 3.99585 14.0941 3.99585C13.5781 3.99585 13.1341 4.03185 13.1341 4.43985V4.66785C13.1341 4.96785 13.4101 5.07585 13.7821 5.18385L14.7901 5.45985C15.5341 5.66385 15.9181 6.03585 15.9181 6.94785Z\" />\n      <path d=\"M22.5865 5.02785V6.40785C21.7825 6.46785 19.9345 6.47985 18.9025 6.41985V6.71985C18.9025 7.57185 19.3945 7.72785 20.4265 7.72785C21.1345 7.72785 21.6385 7.66785 22.3105 7.53585C22.3585 7.94385 22.3585 8.51985 22.3105 8.92785C21.4705 9.07185 20.7985 9.14385 20.0065 9.14385C18.2785 9.14385 17.1865 8.62785 17.1865 7.10385V4.70385C17.1865 3.10785 18.3385 2.63985 19.9345 2.63985C21.5185 2.63985 22.5865 3.31185 22.5865 5.02785ZM20.9065 5.36385V4.95585C20.9065 4.13985 20.4385 4.04385 19.9105 4.04385C19.3825 4.04385 18.9025 4.13985 18.9025 4.95585V5.42385L19.8265 5.36385H20.9065Z\" />\n      <path d=\"M24.0811 8.99985V2.75985C24.5851 2.72385 25.0891 2.72385 25.6051 2.75985L25.7131 3.77985H25.7851C25.9771 2.97585 26.7571 2.63985 27.8491 2.63985C27.8971 3.04785 27.8971 3.71985 27.8491 4.12785C26.4931 4.12785 26.1211 4.40385 25.7971 5.26785V8.99985C25.3771 9.05985 24.4891 9.05985 24.0811 8.99985Z\" />\n      <path d=\"M30.1801 8.99985L28.2601 2.80785C28.6801 2.74785 29.5681 2.74785 29.9761 2.80785L31.2841 7.42785L32.5801 2.80785C32.9881 2.74785 33.8401 2.74785 34.2481 2.80785L32.3401 8.99985C31.8121 9.05985 30.7081 9.05985 30.1801 8.99985Z\" />\n      <path d=\"M40.7087 4.66785V7.13985C40.7087 8.62785 39.5807 9.14385 37.9007 9.14385C36.2207 9.14385 35.0927 8.62785 35.0927 7.13985V4.66785C35.0927 3.11985 36.2207 2.63985 37.9007 2.63985C39.5807 2.63985 40.7087 3.11985 40.7087 4.66785ZM38.9927 6.76785V5.01585C38.9927 4.18785 38.4887 4.09185 37.9007 4.09185C37.3007 4.09185 36.8087 4.18785 36.8087 5.01585V6.76785C36.8087 7.58385 37.3007 7.67985 37.9007 7.67985C38.4887 7.67985 38.9927 7.58385 38.9927 6.76785Z\" />\n      <path d=\"M42.3037 8.99985V2.80785C42.7117 2.74785 43.5997 2.74785 44.0197 2.80785V8.99985C43.5997 9.05985 42.7117 9.05985 42.3037 8.99985ZM44.0917 0.467852L44.0557 1.83585C43.6357 1.89585 42.6877 1.89585 42.2557 1.83585L42.2317 0.467852C42.6637 0.407852 43.6597 0.407852 44.0917 0.467852Z\" />\n      <path d=\"M45.7725 8.99985V2.75985C46.2765 2.72385 46.7805 2.72385 47.2965 2.75985L47.4045 3.77985H47.4765C47.6685 2.97585 48.4485 2.63985 49.5405 2.63985C49.5885 3.04785 49.5885 3.71985 49.5405 4.12785C48.1845 4.12785 47.8125 4.40385 47.4885 5.26785V8.99985C47.0685 9.05985 46.1805 9.05985 45.7725 8.99985Z\" />\n    </svg>\n  )\n}\n\nexport default ReservoirText\n","import React, { FC } from 'react'\nimport { Box } from '../primitives'\nimport TokenPrimitive from './TokenPrimitive'\nimport { useCollections, useTokens } from '../hooks'\nimport { CSSProperties } from '@stitches/react'\n\ntype TokenLineItemProps = {\n  tokenDetails?: NonNullable<\n    NonNullable<ReturnType<typeof useTokens>>['data']\n  >[0]\n  collection?: Pick<\n    NonNullable<ReturnType<typeof useCollections>['data']>[0],\n    'name' | 'royalties' | 'image'\n  >\n  usdConversion?: number\n  isUnavailable?: boolean\n  warning?: string\n  price: number\n  priceSubtitle?: string\n  currency?: {\n    contract?: string\n    decimals?: number\n    symbol?: string\n  }\n  expires?: string\n  sourceImg?: string\n  css?: CSSProperties\n  showRoyalties?: boolean\n  quantity?: number\n}\n\nconst TokenLineItem: FC<TokenLineItemProps> = ({\n  tokenDetails,\n  collection,\n  usdConversion = 0,\n  isUnavailable,\n  price,\n  priceSubtitle,\n  warning,\n  currency,\n  expires,\n  sourceImg,\n  css,\n  showRoyalties,\n  quantity,\n}) => {\n  if (!tokenDetails) {\n    return null\n  }\n\n  const usdPrice = price * usdConversion\n\n  const name = tokenDetails?.token?.name || `#${tokenDetails?.token?.tokenId}`\n  const collectionName =\n    tokenDetails?.token?.collection?.name || collection?.name || ''\n\n  const img = tokenDetails?.token?.imageSmall\n    ? tokenDetails.token.imageSmall\n    : (collection?.image as string)\n\n  const royaltiesBps =\n    showRoyalties && collection?.royalties\n      ? collection.royalties.bps\n      : undefined\n\n  return (\n    <Box css={{ p: '$4', borderBottom: '1px solid $borderColor', ...css }}>\n      <TokenPrimitive\n        img={img}\n        name={name}\n        price={price}\n        usdPrice={usdPrice}\n        collection={collectionName}\n        currencyContract={currency?.contract}\n        currencyDecimals={currency?.decimals}\n        currencySymbol={currency?.symbol}\n        expires={expires}\n        warning={warning}\n        source={sourceImg || ''}\n        isUnavailable={isUnavailable}\n        priceSubtitle={priceSubtitle}\n        royaltiesBps={royaltiesBps}\n        quantity={quantity}\n      />\n    </Box>\n  )\n}\n\nexport default TokenLineItem\n","import { styled } from '../../stitches.config'\nimport React, { FC } from 'react'\nimport {\n  Box,\n  Flex,\n  Text,\n  Grid,\n  FormatCurrency,\n  FormatCryptoCurrency,\n} from '../primitives'\nimport InfoTooltip from '../primitives/InfoTooltip'\n\ntype Props = {\n  img?: string\n  name?: string\n  collection: string\n  currencyContract?: string\n  currencyDecimals?: number\n  currencySymbol?: string\n  source?: string\n  price?: number\n  usdPrice?: number | string\n  expires?: string\n  warning?: string\n  isOffer?: boolean\n  isUnavailable?: boolean\n  priceSubtitle?: string\n  royaltiesBps?: number\n  quantity?: number\n}\n\nconst Img = styled('img', {\n  height: 56,\n  width: 56,\n})\n\nconst TokenPrimitive: FC<Props> = ({\n  img,\n  name,\n  collection,\n  currencyContract,\n  currencyDecimals,\n  currencySymbol,\n  expires,\n  warning,\n  source,\n  usdPrice,\n  price,\n  isUnavailable,\n  priceSubtitle,\n  royaltiesBps,\n  quantity,\n}) => {\n  const royaltyPercent = royaltiesBps ? royaltiesBps / 100 : royaltiesBps\n\n  return (\n    <Box>\n      <Flex css={{ justifyContent: 'space-between', alignItems: 'center' }}>\n        <Text\n          style=\"subtitle2\"\n          color=\"subtle\"\n          css={{ mb: 10, display: 'block' }}\n        >\n          {name ? 'Item' : 'Collection'}\n        </Text>\n        {priceSubtitle && (\n          <Text\n            style=\"subtitle2\"\n            color=\"subtle\"\n            css={{ mb: 10, display: 'block' }}\n          >\n            {priceSubtitle}\n          </Text>\n        )}\n      </Flex>\n      <Flex justify=\"between\">\n        <Flex css={{ alignItems: 'center', gap: 8 }}>\n          <Img\n            src={img}\n            alt={name}\n            css={{\n              borderRadius: 4,\n              overflow: 'hidden',\n              visibility: !img || img.length === 0 ? 'hidden' : 'visible',\n              flexShrink: 0,\n              objectFit: 'cover',\n            }}\n          />\n          <Grid css={{ rowGap: 2 }}>\n            <Flex\n              align=\"center\"\n              css={{ gap: '$2', mr: '$4', overflow: 'hidden' }}\n            >\n              <Text\n                style=\"h6\"\n                ellipsify\n                color={isUnavailable ? 'subtle' : 'base'}\n              >\n                {name ? name : collection}\n              </Text>\n              {expires && quantity && quantity > 1 ? (\n                <Flex\n                  css={{\n                    p: '$1 ',\n                    background: '$neutralBgHover',\n                    borderRadius: 4,\n                    mr: 'auto',\n                  }}\n                >\n                  <Text\n                    style=\"tiny\"\n                    color=\"base\"\n                    css={{ minWidth: 'max-content' }}\n                  >\n                    {quantity} items\n                  </Text>\n                </Flex>\n              ) : null}\n            </Flex>\n            {name && (\n              <Text style=\"body3\" color={isUnavailable ? 'subtle' : 'base'}>\n                {collection}\n              </Text>\n            )}\n            {!!expires && <Text style=\"tiny\">Expires {expires}</Text>}\n            {!expires && quantity && quantity > 1 ? (\n              <Flex\n                css={{\n                  p: '$1 ',\n                  background: '$neutralBgHover',\n                  borderRadius: 4,\n                  mr: 'auto',\n                }}\n              >\n                <Text style=\"tiny\" color=\"base\">\n                  {quantity} {quantity > 1 ? 'items' : 'item'}\n                </Text>\n              </Flex>\n            ) : null}\n            {!expires && !quantity && royaltiesBps ? (\n              <Text\n                style=\"body3\"\n                color=\"subtle\"\n                css={{ display: 'flex', gap: '$1' }}\n              >\n                Creator Royalties: {royaltyPercent}%\n                <InfoTooltip\n                  side=\"right\"\n                  width={200}\n                  content=\"A fee on every order that goes to the collection creator.\"\n                />\n              </Text>\n            ) : null}\n          </Grid>\n        </Flex>\n        <Grid css={{ justifyItems: 'end', alignContent: 'start', rowGap: 4 }}>\n          {source && (\n            <Img\n              src={source}\n              alt=\"Source Icon\"\n              css={{ w: 17, h: 17, borderRadius: 99999, overflow: 'hidden' }}\n            />\n          )}\n          {price ? (\n            <FormatCryptoCurrency\n              amount={price}\n              textColor={isUnavailable ? 'subtle' : 'base'}\n              address={currencyContract}\n              decimals={currencyDecimals}\n              symbol={currencySymbol}\n              logoWidth={14.5}\n            />\n          ) : (\n            <Text style=\"subtitle2\" color={isUnavailable ? 'subtle' : 'base'}>\n              --\n            </Text>\n          )}\n          {usdPrice ? (\n            <FormatCurrency amount={usdPrice} style=\"tiny\" color=\"subtle\" />\n          ) : null}\n          {warning && (\n            <Text style=\"subtitle2\" color=\"error\">\n              {warning}\n            </Text>\n          )}\n        </Grid>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default TokenPrimitive\n","import { styled } from '../../stitches.config'\n\nexport default styled('div', {\n  display: 'grid',\n\n  variants: {\n    align: {\n      start: {\n        alignItems: 'start',\n      },\n      center: {\n        alignItems: 'center',\n      },\n      end: {\n        alignItems: 'end',\n      },\n      stretch: {\n        alignItems: 'stretch',\n      },\n      baseline: {\n        alignItems: 'baseline',\n      },\n    },\n    justify: {\n      start: {\n        justifyContent: 'start',\n      },\n      center: {\n        justifyContent: 'center',\n      },\n      end: {\n        justifyContent: 'end',\n      },\n      between: {\n        justifyContent: 'space-between',\n      },\n    },\n    flow: {\n      row: {\n        gridAutoFlow: 'row',\n      },\n      column: {\n        gridAutoFlow: 'column',\n      },\n      dense: {\n        gridAutoFlow: 'dense',\n      },\n      rowDense: {\n        gridAutoFlow: 'row dense',\n      },\n      columnDense: {\n        gridAutoFlow: 'column dense',\n      },\n    },\n  },\n})\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport { Box, Popover, Text } from '.'\ntype Props = {\n  side: string\n  content: string\n  width: number\n  kind?: 'info' | 'error'\n}\n\nconst InfoTooltip = ({ side, content, width, kind = 'info' }: Props) => {\n  return (\n    <Popover\n      side={side}\n      width={width}\n      content={\n        <Text style={'body3'} as=\"p\">\n          {content}\n        </Text>\n      }\n    >\n      <Box css={{ color: kind === 'error' ? '$errorAccent' : '$neutralText' }}>\n        <FontAwesomeIcon icon={faInfoCircle} />\n      </Box>\n    </Popover>\n  )\n}\n\nexport default InfoTooltip\n","import React, { ReactNode } from 'react'\nimport * as Popover from '@radix-ui/react-popover'\nimport { styled } from '../../stitches.config'\nimport Box from './Box'\n\nconst Arrow = styled(Popover.Arrow, {\n  width: 15,\n  height: 7,\n  fill: '$popoverBackground',\n})\n\nconst Content = styled(Popover.Content, {\n  filter: 'drop-shadow(0px 2px 16px rgba(0, 0, 0, 0.75))',\n  zIndex: 1000,\n})\n\ntype Props = {\n  content?: ReactNode\n  side?: any\n  width?: any\n} & Popover.PopoverProps\n\nconst RKPopover = ({\n  children,\n  content,\n  side = 'bottom',\n  width = '100%',\n  ...props\n}: Props) => {\n  return (\n    <Popover.Root {...props}>\n      <Popover.Trigger\n        style={{\n          backgroundColor: 'transparent',\n          borderWidth: 0,\n          cursor: 'pointer',\n          padding: 0,\n        }}\n      >\n        {children}\n      </Popover.Trigger>\n      <Content side={side}>\n        <Arrow />\n        <Box\n          css={{\n            p: '$3',\n            maxWidth: 320,\n            overflowY: 'auto',\n            maxHeight: 322,\n            width: width,\n            borderRadius: 8,\n            backgroundColor: '$popoverBackground',\n          }}\n        >\n          {content}\n        </Box>\n      </Content>\n    </Popover.Root>\n  )\n}\n\nRKPopover.Root = Popover.Root\nRKPopover.Portal = Popover.Portal\nRKPopover.Trigger = Popover.Trigger\nRKPopover.Arrow = Arrow\nRKPopover.Content = Content\n\nexport default RKPopover\n","import React, {\n  FC,\n  useEffect,\n  useState,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport {\n  useTokens,\n  useCoinConversion,\n  useReservoirClient,\n  useCollections,\n  useListings,\n  useChainCurrency,\n} from '../../hooks'\nimport { useAccount, useBalance, useWalletClient, useNetwork } from 'wagmi'\n\nimport {\n  BuyPath,\n  Execute,\n  ReservoirClientActions,\n} from '@reservoir0x/reservoir-sdk'\nimport { UseBalanceToken } from '../../types/wagmi'\nimport { toFixed } from '../../lib/numbers'\nimport { formatUnits, parseUnits, zeroAddress } from 'viem'\nimport { Currency } from '../../types/Currency'\n\ntype Item = Parameters<ReservoirClientActions['buyToken']>['0']['items'][0]\n\nexport enum BuyStep {\n  Checkout,\n  Approving,\n  Complete,\n  Unavailable,\n}\n\nexport type BuyModalStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  currentStepItem: NonNullable<Execute['steps'][0]['items']>[0]\n}\n\ntype Token = NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>[0]\ntype BuyTokenOptions = NonNullable<\n  Parameters<ReservoirClientActions['buyToken']>['0']['options']\n>\n\ntype ChildrenProps = {\n  loading: boolean\n  token?: Token\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  listing?: NonNullable<ReturnType<typeof useListings>['data']>[0]\n  quantityAvailable: number\n  averageUnitPrice: number\n  currency?: NonNullable<\n    NonNullable<\n      NonNullable<\n        NonNullable<NonNullable<Token>['market']>['floorAsk']\n      >['price']\n    >['currency']\n  >\n  mixedCurrencies: boolean\n  totalPrice: number\n  feeOnTop: number\n  buyStep: BuyStep\n  transactionError?: Error | null\n  hasEnoughCurrency: boolean\n  addFundsLink: string\n  feeUsd: number\n  totalUsd: number\n  usdPrice: number\n  balance?: bigint\n  address?: string\n  blockExplorerBaseUrl: string\n  steps: Execute['steps'] | null\n  stepData: BuyModalStepData | null\n  quantity: number\n  setBuyStep: React.Dispatch<React.SetStateAction<BuyStep>>\n  setQuantity: React.Dispatch<React.SetStateAction<number>>\n  buyToken: () => void\n}\n\ntype Props = {\n  open: boolean\n  tokenId?: string\n  collectionId?: string\n  orderId?: string\n  feesOnTopBps?: string[] | null\n  feesOnTopFixed?: string[] | null\n  normalizeRoyalties?: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const BuyModalRenderer: FC<Props> = ({\n  open,\n  tokenId,\n  collectionId,\n  orderId,\n  feesOnTopBps,\n  feesOnTopFixed,\n  normalizeRoyalties,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const [totalPrice, setTotalPrice] = useState(0)\n  const [averageUnitPrice, setAverageUnitPrice] = useState(0)\n  const [path, setPath] = useState<BuyPath>([])\n  const [isFetchingPath, setIsFetchingPath] = useState(false)\n  const [currency, setCurrency] = useState<undefined | Currency>()\n  const [mixedCurrencies, setMixedCurrencies] = useState(false)\n  const [feeOnTop, setFeeOnTop] = useState(0)\n  const [buyStep, setBuyStep] = useState<BuyStep>(BuyStep.Checkout)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [hasEnoughCurrency, setHasEnoughCurrency] = useState(true)\n  const [stepData, setStepData] = useState<BuyModalStepData | null>(null)\n  const [steps, setSteps] = useState<Execute['steps'] | null>(null)\n  const [quantity, setQuantity] = useState(1)\n  const { chain: activeChain } = useNetwork()\n  const chainCurrency = useChainCurrency()\n  const blockExplorerBaseUrl =\n    activeChain?.blockExplorers?.default?.url || 'https://etherscan.io'\n\n  const contract = collectionId ? collectionId?.split(':')[0] : undefined\n\n  const { data: tokens, mutate: mutateTokens } = useTokens(\n    open && {\n      tokens: [`${contract}:${tokenId}`],\n      includeLastSale: true,\n      includeQuantity: true,\n      normalizeRoyalties,\n    },\n    {\n      revalidateFirstPage: true,\n    }\n  )\n  const { data: collections, mutate: mutateCollection } = useCollections(\n    open && {\n      id: collectionId,\n      normalizeRoyalties,\n    }\n  )\n  const { address } = useAccount()\n  const { data: balance } = useBalance({\n    address: address,\n    token:\n      currency?.contract !== zeroAddress\n        ? (currency?.contract as UseBalanceToken)\n        : undefined,\n    watch: open,\n    formatUnits: currency?.decimals,\n  })\n\n  const collection = collections && collections[0] ? collections[0] : undefined\n  const token = tokens && tokens.length > 0 ? tokens[0] : undefined\n  const is1155 = token?.token?.kind === 'erc1155'\n\n  const {\n    data: listingsData,\n    mutate: mutateListings,\n    isValidating: isValidatingListing,\n  } = useListings(\n    {\n      token: `${contract}:${tokenId}`,\n      ids: orderId,\n      normalizeRoyalties,\n      status: 'active',\n      limit: 1,\n      sortBy: 'price',\n    },\n    {\n      revalidateFirstPage: true,\n    },\n    open && orderId && orderId.length > 0 ? true : false\n  )\n\n  const listing = useMemo(\n    () => listingsData.find((listing) => listing.maker !== address),\n    [listingsData]\n  )\n\n  const quantityRemaining = useMemo(() => {\n    if (orderId) {\n      return listing?.quantityRemaining || 0\n    } else if (is1155) {\n      return path\n        ? path.reduce((total, pathItem) => total + (pathItem.quantity || 0), 0)\n        : 0\n    } else {\n      return token?.market?.floorAsk?.quantityRemaining || 0\n    }\n  }, [listing, token, path, is1155, orderId])\n\n  const usdConversion = useCoinConversion(\n    open && token ? 'USD' : undefined,\n    currency?.symbol\n  )\n  const usdPrice = usdConversion.length > 0 ? usdConversion[0].price : 0\n  const feeUsd = feeOnTop * usdPrice\n  const totalUsd = totalPrice * usdPrice\n\n  const client = useReservoirClient()\n\n  const { chain } = useNetwork()\n\n  const addFundsLink = currency?.contract\n    ? `https://jumper.exchange/?toChain=${chain?.id}&toToken=${currency?.contract}`\n    : `https://jumper.exchange/?toChain=${chain?.id}`\n\n  const fetchPath = useCallback(() => {\n    if (\n      !open ||\n      !client ||\n      !tokenId ||\n      !contract ||\n      !wallet ||\n      !is1155 ||\n      orderId\n    ) {\n      setPath(undefined)\n      return\n    }\n\n    setIsFetchingPath(true)\n\n    const options: BuyTokenOptions = {\n      onlyPath: true,\n      partial: true,\n    }\n\n    if (normalizeRoyalties !== undefined) {\n      options.normalizeRoyalties = normalizeRoyalties\n    }\n\n    client.actions\n      .buyToken({\n        options,\n        items: [\n          {\n            token: `${contract}:${tokenId}`,\n            quantity: 1000,\n            fillType: 'trade',\n          },\n        ],\n        wallet,\n        onProgress: () => {},\n        precheck: true,\n      })\n      .then((response) => {\n        if (response && response.path) {\n          setPath(response.path)\n        } else {\n          setPath([])\n        }\n      })\n      .catch((err) => {\n        setPath([])\n        throw err\n      })\n      .finally(() => {\n        setIsFetchingPath(false)\n      })\n  }, [\n    open,\n    client,\n    wallet,\n    tokenId,\n    contract,\n    is1155,\n    orderId,\n    normalizeRoyalties,\n  ])\n\n  useEffect(() => {\n    fetchPath()\n  }, [fetchPath])\n\n  const buyToken = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!tokenId || !collectionId) {\n      const error = new Error('Missing tokenId or collectionId')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    const contract = collectionId?.split(':')[0]\n\n    let options: BuyTokenOptions = {}\n\n    if (feesOnTopBps && feesOnTopBps?.length > 0) {\n      const fixedFees = feesOnTopBps.map((fullFee) => {\n        const [referrer, feeBps] = fullFee.split(':')\n        const totalFeeTruncated = toFixed(\n          totalPrice - feeOnTop,\n          currency?.decimals || 18\n        )\n        const fee =\n          Number(\n            parseUnits(\n              `${Number(totalFeeTruncated)}`,\n              currency?.decimals || 18\n            ) * BigInt(feeBps)\n          ) / 10000\n        const atomicUnitsFee = formatUnits(BigInt(fee), 0)\n        return `${referrer}:${atomicUnitsFee}`\n      })\n      options.feesOnTop = fixedFees\n    } else if (feesOnTopFixed && feesOnTopFixed.length > 0) {\n      options.feesOnTop = feesOnTopFixed\n    } else if (!feesOnTopFixed && !feesOnTopBps) {\n      delete options.feesOnTop\n    }\n\n    if (normalizeRoyalties !== undefined) {\n      options.normalizeRoyalties = normalizeRoyalties\n    }\n\n    setBuyStep(BuyStep.Approving)\n    const items: Item[] = []\n    const item: Item = {\n      fillType: 'trade',\n      quantity,\n    }\n\n    if (is1155) {\n      options.partial = true\n    }\n\n    if (orderId) {\n      item.orderId = orderId\n    } else {\n      item.token = `${contract}:${tokenId}`\n    }\n    items.push(item)\n\n    client.actions\n      .buyToken({\n        items: items,\n        expectedPrice: totalPrice - feeOnTop,\n        wallet,\n        onProgress: (steps: Execute['steps']) => {\n          if (!steps) {\n            return\n          }\n          setSteps(steps)\n\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n\n          const currentStepIndex = executableSteps.findIndex((step) => {\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: currentStepIndex,\n              currentStep,\n              currentStepItem,\n            })\n          } else if (\n            steps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setBuyStep(BuyStep.Complete)\n          }\n        },\n        options,\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        if (error && error?.message && error?.message.includes('ETH balance')) {\n          setHasEnoughCurrency(false)\n        } else {\n          const errorType = (error as any)?.type\n          const errorStatus = (error as any)?.statusCode\n          let message = 'Oops, something went wrong. Please try again.'\n          if (errorType && errorType === 'price mismatch') {\n            message = error.message\n          }\n          if (errorStatus >= 400 && errorStatus < 500) {\n            message = error.message\n          }\n          //@ts-ignore: Should be fixed in an update to typescript\n          const transactionError = new Error(message, {\n            cause: error,\n          })\n          setTransactionError(transactionError)\n          if (orderId) {\n            mutateListings()\n          }\n          mutateCollection()\n          mutateTokens()\n          fetchPath()\n        }\n        setBuyStep(BuyStep.Checkout)\n        setStepData(null)\n        setSteps(null)\n      })\n  }, [\n    tokenId,\n    collectionId,\n    orderId,\n    feesOnTopBps,\n    feesOnTopFixed,\n    quantity,\n    normalizeRoyalties,\n    is1155,\n    client,\n    currency,\n    totalPrice,\n    mutateListings,\n    mutateTokens,\n    mutateCollection,\n  ])\n\n  useEffect(() => {\n    let currency: Currency | undefined\n\n    if (\n      !token ||\n      (orderId && !listing && isValidatingListing) ||\n      (is1155 && !path && isFetchingPath)\n    ) {\n      setBuyStep(BuyStep.Unavailable)\n      setTotalPrice(0)\n      setAverageUnitPrice(0)\n      setCurrency(undefined)\n      setMixedCurrencies(false)\n      return\n    }\n\n    let total = 0\n    if (orderId) {\n      total = (listing?.price?.amount?.decimal || 0) * quantity\n      if (listing?.price?.currency) {\n        currency = listing?.price?.currency as Currency\n        setCurrency(currency)\n      }\n      setMixedCurrencies(false)\n    } else if (is1155) {\n      let orders: Record<string, number> = {}\n      let mixedCurrencies = false\n      let currencies: string[] = []\n      let nativeTotal = 0\n      let orderCurrencyTotal = 0\n      let totalQuantity = 0\n      if (path && path.length > 0) {\n        for (let i = 0; i < path.length; i++) {\n          const pathItem = path[i]\n          const pathQuantity = pathItem.quantity || 0\n          const pathPrice = pathItem.totalPrice || 0\n          const listingId = pathItem.orderId\n          if (!pathItem?.currency || !listingId) {\n            continue\n          }\n          const quantityLeft = quantity - totalQuantity\n          if (!currencies.includes(pathItem.currency)) {\n            currencies.push(pathItem.currency)\n            mixedCurrencies = currencies.length >= 2\n          }\n          let quantityToTake = 0\n          if (quantityLeft >= pathQuantity) {\n            quantityToTake = pathQuantity\n          } else {\n            quantityToTake = quantityLeft\n          }\n\n          nativeTotal += (pathItem.buyInQuote || pathPrice) * quantityToTake\n          orderCurrencyTotal += pathPrice * quantityToTake\n          orders[listingId] = quantityToTake\n          totalQuantity += quantityToTake\n\n          if (totalQuantity === quantity) {\n            break\n          }\n        }\n        total = mixedCurrencies ? nativeTotal : orderCurrencyTotal\n        currency = mixedCurrencies\n          ? {\n              contract: chainCurrency.address,\n              symbol: chainCurrency.symbol,\n              decimals: chainCurrency.decimals,\n            }\n          : {\n              contract: path[0].currency as string,\n              symbol: path[0].currencySymbol as string,\n              decimals: path[0].currencyDecimals as number,\n            }\n        setCurrency(currency)\n        setMixedCurrencies(mixedCurrencies)\n      }\n    } else if (token?.market?.floorAsk) {\n      total = token.market.floorAsk.price?.amount?.decimal || 0\n      if (token.market.floorAsk.price?.currency) {\n        currency = token.market.floorAsk.price?.currency as Currency\n        setCurrency(currency)\n      }\n      setMixedCurrencies(false)\n    }\n    if (total > 0) {\n      if (feesOnTopBps && feesOnTopBps.length > 0) {\n        const fees = feesOnTopBps.reduce((totalFees, feeOnTop) => {\n          const [_, fee] = feeOnTop.split(':')\n          return totalFees + (Number(fee) / 10000) * total\n        }, 0)\n        total += fees\n        setFeeOnTop(fees)\n      } else if (feesOnTopFixed && feesOnTopFixed.length > 0) {\n        const fees = feesOnTopFixed.reduce((totalFees, feeOnTop) => {\n          const [_, fee] = feeOnTop.split(':')\n          const parsedFee = formatUnits(BigInt(fee), currency?.decimals || 18)\n          return totalFees + Number(parsedFee)\n        }, 0)\n        total += fees\n        setFeeOnTop(fees)\n      }\n      setTotalPrice(total)\n      setAverageUnitPrice(total / quantity)\n      setBuyStep(BuyStep.Checkout)\n    } else {\n      setBuyStep(BuyStep.Unavailable)\n      setTotalPrice(0)\n      setAverageUnitPrice(0)\n      setCurrency(undefined)\n      setMixedCurrencies(false)\n    }\n  }, [\n    listing,\n    path,\n    isValidatingListing,\n    isFetchingPath,\n    is1155,\n    orderId,\n    feesOnTopBps,\n    feesOnTopFixed,\n    feeOnTop,\n    client,\n    quantity,\n    token,\n    chainCurrency.address,\n  ])\n\n  useEffect(() => {\n    if (balance) {\n      const totalPriceTruncated = toFixed(totalPrice, currency?.decimals || 18)\n      if (!balance.value) {\n        setHasEnoughCurrency(false)\n      } else if (\n        balance.value <\n        parseUnits(`${totalPriceTruncated as number}`, currency?.decimals || 18)\n      ) {\n        setHasEnoughCurrency(false)\n      } else {\n        setHasEnoughCurrency(true)\n      }\n    }\n  }, [totalPrice, balance, currency])\n\n  useEffect(() => {\n    if (!open) {\n      setBuyStep(BuyStep.Checkout)\n      setTransactionError(null)\n      setStepData(null)\n      setSteps(null)\n      setQuantity(1)\n      setPath(undefined)\n    }\n  }, [open])\n\n  return (\n    <>\n      {children({\n        loading:\n          (!listing && isValidatingListing) ||\n          !token ||\n          isFetchingPath ||\n          (is1155 && !path && !orderId),\n        token,\n        collection,\n        listing,\n        quantityAvailable: quantityRemaining || 1,\n        currency,\n        mixedCurrencies,\n        totalPrice,\n        averageUnitPrice,\n        feeOnTop,\n        buyStep,\n        transactionError,\n        hasEnoughCurrency,\n        addFundsLink,\n        feeUsd,\n        totalUsd,\n        usdPrice,\n        balance: balance?.value,\n        address: address,\n        blockExplorerBaseUrl,\n        steps,\n        stepData,\n        quantity,\n        setQuantity,\n        setBuyStep,\n        buyToken,\n      })}\n    </>\n  )\n}\n","import { Flex } from '../primitives'\nimport React, { ComponentPropsWithoutRef, FC } from 'react'\n\ntype Props = {\n  value: number\n  max: number\n} & ComponentPropsWithoutRef<typeof Flex>\n\nconst ProgressBar: FC<Props> = ({ value, max, ...props }) => {\n  return (\n    <Flex {...props} css={{ width: '100%', gap: '$2', ...props.css }}>\n      {[...Array(max)].map((_item, i) => (\n        <Flex\n          key={i}\n          css={{\n            height: 4,\n            borderRadius: 99999,\n            flex: 1,\n            background:\n              'linear-gradient(to left, $neutralBorderHover 50%, $accentSolid 50%) right',\n            backgroundSize: '200% 100%',\n            backgroundPosition: i + 1 <= value ? 'left' : 'right',\n            transition: 'all 0.5s ease',\n          }}\n        ></Flex>\n      ))}\n    </Flex>\n  )\n}\n\nexport default ProgressBar\n","import React, { CSSProperties, FC } from 'react'\nimport { Button } from '../primitives'\nimport PseudoInput from '../primitives/PseudoInput'\nimport { styled } from '../../stitches.config'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\n\ntype Props = {\n  max: number\n  min: number\n  quantity: number\n  setQuantity: (quantity: number) => void\n  css?: CSSProperties\n}\n\nconst QuantityButton = styled(Button, {\n  color: '$neutralSolid',\n  backgroundColor: 'transparent',\n  '&:disabled': {\n    backgroundColor: '$transparent',\n    color: '$neutralBorderHover',\n  },\n  '&:disabled:hover': {\n    backgroundColor: '$transparent',\n    color: '$neutralBorderHover',\n  },\n  defaultVariants: {\n    color: 'ghost',\n  },\n})\n\nconst QuantityInput = styled('input', {\n  border: 0,\n  background: 'none',\n  fontSize: 16,\n  maxWidth: 53,\n  textAlign: 'center',\n})\n\nconst QuantitySelector: FC<Props> = ({\n  max,\n  min,\n  quantity,\n  setQuantity,\n  css,\n}) => {\n  return (\n    <PseudoInput\n      css={{\n        gap: '$1',\n        direction: 'column',\n        display: 'flex',\n        alignItems: 'center',\n        p: 0,\n        ...css,\n      }}\n    >\n      <QuantityButton\n        css={{ px: 20 }}\n        disabled={quantity <= min}\n        onClick={() => {\n          setQuantity(quantity - 1)\n        }}\n      >\n        <FontAwesomeIcon\n          icon={faMinus}\n          width=\"16\"\n          height=\"16\"\n          style={{ height: 16 }}\n        />\n      </QuantityButton>\n      <QuantityInput\n        value={quantity == -1 ? '' : quantity}\n        onChange={(e) => {\n          if (e.target.value === '') {\n            setQuantity(-1)\n            return\n          }\n\n          const newQuantity = Number(e.target.value || 0)\n          if (newQuantity && newQuantity >= min && newQuantity <= max) {\n            setQuantity(newQuantity)\n          } else {\n            setQuantity(quantity)\n          }\n        }}\n        onBlur={(e) => {\n          if (e.target.value === '') {\n            setQuantity(min)\n          } else if (Number(e.target.value) > max) {\n            setQuantity(max)\n          }\n        }}\n      />\n      <QuantityButton\n        css={{ px: 20 }}\n        disabled={quantity >= max}\n        onClick={() => {\n          setQuantity(quantity + 1)\n        }}\n      >\n        <FontAwesomeIcon\n          icon={faPlus}\n          width=\"16\"\n          height=\"16\"\n          style={{ height: 16 }}\n        />\n      </QuantityButton>\n    </PseudoInput>\n  )\n}\n\nexport default QuantitySelector\n","import { styled } from '../../stitches.config'\n\nconst PseudoInput = styled('div', {\n  all: 'unset',\n  width: 'auto',\n  padding: '$4',\n  borderRadius: '$space$2',\n  fontFamily: '$body',\n  fontSize: 16,\n  fontWeight: 400,\n  color: '$neutralText',\n  backgroundColor: '$inputBackground',\n})\n\nexport default PseudoInput\n","import { styled } from '../../../stitches.config'\nimport React, {\n  Dispatch,\n  ReactElement,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useState,\n} from 'react'\n\nimport {\n  Flex,\n  Box,\n  Text,\n  Button,\n  Loader,\n  Select,\n  ErrorWell,\n  Popover,\n} from '../../primitives'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Modal } from '../Modal'\nimport {\n  ListingData,\n  ListModalRenderer,\n  ListStep,\n  ListModalStepData,\n} from './ListModalRenderer'\nimport { ModalSize } from '../Modal'\nimport {\n  faChevronLeft,\n  faCheckCircle,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons'\nimport TokenStats from './TokenStats'\nimport MarketplaceToggle from './MarketplaceToggle'\nimport MarketplacePriceInput from './MarketplacePriceInput'\nimport TokenListingDetails from './TokenListingDetails'\nimport { useFallbackState, useReservoirClient } from '../../hooks'\nimport TransactionProgress from '../../modal/TransactionProgress'\nimport ProgressBar from '../../modal/ProgressBar'\nimport InfoTooltip from '../../primitives/InfoTooltip'\nimport { Marketplace } from '../../hooks/useMarketplaces'\nimport { Currency } from '../../types/Currency'\nimport SigninStep from '../SigninStep'\nimport { CurrencySelector } from '../CurrencySelector'\nimport { zeroAddress } from 'viem'\nimport { ProviderOptionsContext } from '../../ReservoirKitProvider'\nimport { CSS } from '@stitches/react'\n\ntype ListingCallbackData = {\n  listings?: ListingData[]\n  tokenId?: string\n  collectionId?: string\n}\n\nconst ModalCopy = {\n  title: 'List Item for sale',\n  ctaClose: 'Close',\n  ctaSetPrice: 'Set your price',\n  ctaList: 'List for Sale',\n  ctaAwaitingApproval: 'Waiting for Approval',\n  ctaEditListing: 'Edit Listing',\n  ctaRetry: 'Retry',\n  ctaGoToToken: 'Go to Token',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  tokenId?: string\n  collectionId?: string\n  currencies?: Currency[]\n  nativeOnly?: boolean\n  normalizeRoyalties?: boolean\n  enableOnChainRoyalties?: boolean\n  oracleEnabled?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  feesBps?: string[]\n  onGoToToken?: () => any\n  onListingComplete?: (data: ListingCallbackData) => void\n  onListingError?: (error: Error, data: ListingCallbackData) => void\n  onClose?: (\n    data: ListingCallbackData,\n    stepData: ListModalStepData | null,\n    currentStep: ListStep\n  ) => void\n}\n\nconst Image = styled('img', {})\nconst Span = styled('span', {})\nconst ContentContainer = styled(Flex, {\n  width: '100%',\n  borderColor: '$borderColor',\n  flexDirection: 'column',\n  '@bp1': {\n    flexDirection: 'row',\n  },\n})\n\nconst MainContainer = styled(Flex, {\n  flex: 1,\n  borderColor: '$borderColor',\n  borderTopWidth: 1,\n  borderLeftWidth: 0,\n  '@bp1': {\n    borderTopWidth: 0,\n    borderLeftWidth: 1,\n  },\n\n  defaultVariants: {\n    direction: 'column',\n  },\n})\n\nconst MINIMUM_AMOUNT = 0.000001\n\nexport function ListModal({\n  openState,\n  trigger,\n  tokenId,\n  collectionId,\n  currencies,\n  nativeOnly,\n  normalizeRoyalties,\n  enableOnChainRoyalties = false,\n  oracleEnabled = false,\n  copyOverrides,\n  feesBps,\n  onGoToToken,\n  onListingComplete,\n  onListingError,\n  onClose,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n  const client = useReservoirClient()\n  const reservoirChain = client?.currentChain()\n  const [marketplacesToApprove, setMarketplacesToApprove] = useState<\n    Marketplace[]\n  >([])\n\n  const providerOptionsContext = useContext(ProviderOptionsContext)\n\n  if (oracleEnabled) {\n    nativeOnly = true\n  }\n\n  return (\n    <ListModalRenderer\n      open={open}\n      tokenId={tokenId}\n      collectionId={collectionId}\n      currencies={currencies}\n      normalizeRoyalties={normalizeRoyalties}\n      enableOnChainRoyalties={enableOnChainRoyalties}\n      oracleEnabled={oracleEnabled}\n      feesBps={feesBps}\n    >\n      {({\n        token,\n        quantityAvailable,\n        collection,\n        usdPrice,\n        listStep,\n        expirationOption,\n        expirationOptions,\n        marketplaces,\n        unapprovedMarketplaces,\n        isFetchingOnChainRoyalties,\n        localMarketplace,\n        listingData,\n        transactionError,\n        stepData,\n        currencies,\n        currency,\n        quantity,\n        royaltyBps,\n        setListStep,\n        listToken,\n        setMarketPrice,\n        setCurrency,\n        toggleMarketplace,\n        setExpirationOption,\n        setQuantity,\n      }) => {\n        const tokenImage =\n          token && token.token?.imageSmall\n            ? token.token.imageSmall\n            : (collection?.image as string)\n\n        useEffect(() => {\n          if (nativeOnly) {\n            setListStep(ListStep.SetPrice)\n          }\n        }, [nativeOnly, open])\n\n        useEffect(() => {\n          if (unapprovedMarketplaces.length > 0) {\n            const unapprovedNames = unapprovedMarketplaces.reduce(\n              (names, marketplace) => {\n                if (\n                  marketplace.name &&\n                  localMarketplace?.orderKind !== marketplace.orderKind\n                ) {\n                  names.push(marketplace.name)\n                }\n                return names\n              },\n              [] as string[]\n            )\n            setMarketplacesToApprove(\n              marketplaces.filter(\n                (marketplace) =>\n                  marketplace.isSelected &&\n                  marketplace.name &&\n                  unapprovedNames.includes(marketplace.name)\n              )\n            )\n          } else {\n            setMarketplacesToApprove([])\n          }\n        }, [unapprovedMarketplaces, marketplaces, localMarketplace])\n\n        useEffect(() => {\n          if (listStep === ListStep.Complete && onListingComplete) {\n            const data: ListingCallbackData = {\n              tokenId: tokenId,\n              collectionId: collectionId,\n              listings: listingData,\n            }\n            onListingComplete(data)\n          }\n        }, [listStep])\n\n        useEffect(() => {\n          if (transactionError && onListingError) {\n            const data: ListingCallbackData = {\n              tokenId: tokenId,\n              collectionId: collectionId,\n              listings: listingData,\n            }\n            onListingError(transactionError, data)\n          }\n        }, [transactionError])\n\n        const availableMarketplaces = marketplaces.filter((market) => {\n          const isNative = market.orderbook === 'reservoir'\n          return nativeOnly\n            ? market.listingEnabled && isNative\n            : market.listingEnabled\n        })\n\n        const selectedMarketplaces = availableMarketplaces.filter(\n          (marketplace) => marketplace.isSelected\n        )\n        const quantitySelectionAvailable = selectedMarketplaces.every(\n          (marketplace) =>\n            marketplace.orderbook === 'reservoir' ||\n            marketplace.orderbook === 'opensea'\n        )\n\n        let loading =\n          !token ||\n          !collection ||\n          (enableOnChainRoyalties ? isFetchingOnChainRoyalties : false)\n\n        const contentContainerCss: CSS = {\n          borderBottomWidth: providerOptionsContext.disablePoweredByReservoir\n            ? 0\n            : 1,\n          marginBottom: providerOptionsContext.disablePoweredByReservoir\n            ? 0\n            : 12,\n        }\n\n        return (\n          <Modal\n            trigger={trigger}\n            size={ModalSize.LG}\n            title={copy.title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data: ListingCallbackData = {\n                  tokenId: tokenId,\n                  collectionId: collectionId,\n                  listings: listingData,\n                }\n                onClose(data, stepData, listStep)\n              }\n\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            {!loading && listStep == ListStep.SelectMarkets && (\n              <ContentContainer\n                css={{\n                  ...contentContainerCss,\n                }}\n              >\n                <TokenStats\n                  token={token}\n                  collection={collection}\n                  royaltyBps={royaltyBps}\n                />\n\n                <MainContainer>\n                  <Box css={{ p: '$4', flex: 1 }}>\n                    {currencies.length > 1 ? (\n                      <Text\n                        style=\"subtitle1\"\n                        as={Flex}\n                        css={{ mb: '$4', gap: '$2', alignItems: 'center' }}\n                      >\n                        List item in\n                        <CurrencySelector\n                          currency={currency}\n                          currencies={currencies}\n                          setCurrency={setCurrency}\n                        />\n                      </Text>\n                    ) : (\n                      <Text style=\"subtitle1\" as=\"h3\" css={{ mb: '$4' }}>\n                        {availableMarketplaces.length > 1\n                          ? 'Select Marketplaces'\n                          : 'Available Marketplace'}\n                      </Text>\n                    )}\n\n                    <Text style=\"subtitle2\" as=\"p\" color=\"subtle\">\n                      Default\n                    </Text>\n                    <Flex align=\"center\" css={{ mb: '$4', mt: '$2' }}>\n                      <Box css={{ mr: '$2' }}>\n                        <img\n                          src={localMarketplace?.imageUrl || ''}\n                          style={{\n                            height: 32,\n                            width: 32,\n                            borderRadius: 4,\n                            visibility: localMarketplace?.imageUrl\n                              ? 'visible'\n                              : 'hidden',\n                          }}\n                        />\n                      </Box>\n                      <Box css={{ mr: '$2', flex: 1 }}>\n                        <Text style=\"body3\">{localMarketplace?.name}</Text>\n                        <Flex css={{ alignItems: 'center', gap: 8 }}>\n                          <Text style=\"body3\" color=\"subtle\" as=\"div\">\n                            on Reservoir\n                          </Text>\n                          <InfoTooltip\n                            side=\"bottom\"\n                            width={200}\n                            content={\n                              'Listings made on this marketplace will be distributed across the reservoir ecosystem'\n                            }\n                          />\n                        </Flex>\n                      </Box>\n                      <Text style=\"subtitle2\" color=\"subtle\" css={{ mr: '$2' }}>\n                        Marketplace fee:{' '}\n                        {((localMarketplace?.fee?.bps || 0) / 10000) * 100}%\n                      </Text>\n                    </Flex>\n                    {availableMarketplaces.length > 1 && (\n                      <Text\n                        style=\"subtitle2\"\n                        color=\"subtle\"\n                        as=\"p\"\n                        css={{ mb: '$2' }}\n                      >\n                        Select other marketplaces to list on\n                      </Text>\n                    )}\n                    {availableMarketplaces\n                      .filter(\n                        (marketplace) => marketplace.orderbook !== 'reservoir'\n                      )\n                      .map((marketplace) => (\n                        <Box key={marketplace.name} css={{ mb: '$3' }}>\n                          <MarketplaceToggle\n                            marketplace={marketplace}\n                            onSelection={() => {\n                              toggleMarketplace(marketplace)\n                            }}\n                          />\n                        </Box>\n                      ))}\n                  </Box>\n                  <Box css={{ p: '$4', width: '100%' }}>\n                    {marketplacesToApprove.length > 0 && (\n                      <Text\n                        color=\"accent\"\n                        style=\"subtitle2\"\n                        css={{\n                          my: 10,\n                          width: '100%',\n                          textAlign: 'center',\n                          display: 'block',\n                        }}\n                      >\n                        {`Additional Gas fee required to approve listing (${marketplacesToApprove\n                          .map((marketplace) => marketplace.name)\n                          .join(', ')})`}\n                      </Text>\n                    )}\n                    {oracleEnabled && (\n                      <Text\n                        style=\"body3\"\n                        color=\"subtle\"\n                        css={{\n                          mb: 10,\n                          textAlign: 'center',\n                          width: '100%',\n                          display: 'block',\n                        }}\n                      >\n                        You can change or cancel your listing for free on{' '}\n                        {localMarketplace?.name}.\n                      </Text>\n                    )}\n                    <Button\n                      onClick={() => setListStep(ListStep.SetPrice)}\n                      css={{ width: '100%' }}\n                    >\n                      {copy.ctaSetPrice}\n                    </Button>\n                  </Box>\n                </MainContainer>\n              </ContentContainer>\n            )}\n            {!loading && listStep == ListStep.SetPrice && (\n              <ContentContainer\n                css={{\n                  ...contentContainerCss,\n                }}\n              >\n                <TokenStats\n                  token={token}\n                  collection={collection}\n                  royaltyBps={royaltyBps}\n                />\n\n                <MainContainer>\n                  <Box css={{ p: '$4', flex: 1 }}>\n                    <Flex align=\"center\" css={{ mb: '$4' }}>\n                      {!nativeOnly ? (\n                        <Button\n                          color=\"ghost\"\n                          size=\"none\"\n                          css={{ mr: '$2', color: '$neutralText' }}\n                          onClick={() => setListStep(ListStep.SelectMarkets)}\n                        >\n                          <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            width={16}\n                            height={16}\n                          />\n                        </Button>\n                      ) : null}\n                      <Text style=\"subtitle1\" as=\"h3\">\n                        Set Your Price\n                      </Text>\n                    </Flex>\n                    {quantityAvailable > 1 && quantitySelectionAvailable && (\n                      <>\n                        <Box css={{ mb: '$2' }}>\n                          <Text\n                            as=\"div\"\n                            css={{ mb: '$2' }}\n                            style=\"subtitle2\"\n                            color=\"subtle\"\n                          >\n                            Quantity\n                          </Text>\n                          <Select\n                            value={`${quantity}`}\n                            onValueChange={(value: string) => {\n                              setQuantity(Number(value))\n                            }}\n                          >\n                            {[...Array(quantityAvailable)].map((_a, i) => (\n                              <Select.Item key={i} value={`${i + 1}`}>\n                                <Select.ItemText>{i + 1}</Select.ItemText>\n                              </Select.Item>\n                            ))}\n                          </Select>\n                        </Box>\n                        <Text\n                          style=\"body2\"\n                          css={{ mb: 24, display: 'inline-block' }}\n                        >\n                          {quantityAvailable} items available\n                        </Text>\n                      </>\n                    )}\n                    <Flex css={{ mb: '$2' }} justify=\"between\">\n                      <Text style=\"subtitle2\" color=\"subtle\" as=\"p\">\n                        {quantityAvailable > 1 && quantitySelectionAvailable\n                          ? 'Unit Price'\n                          : 'Price'}\n                      </Text>\n                      <Flex css={{ alignItems: 'center', gap: 8 }}>\n                        <Text style=\"subtitle2\" color=\"subtle\" as=\"p\">\n                          {quantityAvailable > 1 && quantitySelectionAvailable\n                            ? 'Total Profit'\n                            : 'Profit'}\n                        </Text>\n                        {nativeOnly ? (\n                          <Popover\n                            side=\"left\"\n                            content={\n                              <Flex direction=\"column\" css={{ gap: '$3' }}>\n                                <Flex justify=\"between\" css={{ gap: '$4' }}>\n                                  <Text style=\"body3\">Marketplace Fee</Text>\n                                  <Text style=\"subtitle2\" color=\"subtle\">\n                                    {localMarketplace?.fee?.percent || 0}%\n                                  </Text>\n                                </Flex>\n                                <Flex justify=\"between\" css={{ gap: '$4' }}>\n                                  <Text style=\"body3\">Creator Royalties</Text>\n                                  <Text style=\"subtitle2\" color=\"subtle\">\n                                    {(royaltyBps || 0) * 0.01}%\n                                  </Text>\n                                </Flex>\n                              </Flex>\n                            }\n                          >\n                            <Box\n                              css={{\n                                color: '$neutralText',\n                              }}\n                            >\n                              <FontAwesomeIcon icon={faInfoCircle} />\n                            </Box>\n                          </Popover>\n                        ) : (\n                          <InfoTooltip\n                            side=\"left\"\n                            width={200}\n                            content={`How much ${currency.symbol} you will receive after marketplace fees and creator royalties are subtracted.`}\n                          />\n                        )}\n                      </Flex>\n                    </Flex>\n\n                    {selectedMarketplaces.map((marketplace) => (\n                      <Box key={marketplace.name} css={{ mb: '$3' }}>\n                        <MarketplacePriceInput\n                          marketplace={marketplace}\n                          collection={collection}\n                          currency={currency}\n                          currencies={currencies}\n                          setCurrency={setCurrency}\n                          usdPrice={usdPrice}\n                          quantity={quantity}\n                          nativeOnly={nativeOnly}\n                          onChange={(e) => {\n                            setMarketPrice(e.target.value, marketplace)\n                          }}\n                          onBlur={() => {\n                            if (marketplace.price === '') {\n                              setMarketPrice(0, marketplace)\n                            }\n                          }}\n                        />\n                        {marketplace.truePrice !== '' &&\n                          marketplace.truePrice !== null &&\n                          Number(marketplace.truePrice) !== 0 &&\n                          Number(marketplace.truePrice) < MINIMUM_AMOUNT && (\n                            <Box>\n                              <Text style=\"body2\" color=\"error\">\n                                Amount must be higher than {MINIMUM_AMOUNT}\n                              </Text>\n                            </Box>\n                          )}\n                        {collection &&\n                          collection?.floorAsk?.price?.amount?.native !==\n                            undefined &&\n                          marketplace.truePrice !== '' &&\n                          marketplace.truePrice !== null &&\n                          Number(marketplace.truePrice) !== 0 &&\n                          Number(marketplace.truePrice) >= MINIMUM_AMOUNT &&\n                          currency.contract === zeroAddress &&\n                          Number(marketplace.truePrice) <\n                            collection?.floorAsk?.price.amount.native && (\n                            <Box>\n                              <Text style=\"body2\" color=\"error\">\n                                Price is{' '}\n                                {Math.round(\n                                  ((collection.floorAsk.price.amount.native -\n                                    +marketplace.truePrice) /\n                                    ((collection.floorAsk.price.amount.native +\n                                      +marketplace.truePrice) /\n                                      2)) *\n                                    100 *\n                                    1000\n                                ) / 1000}\n                                % below the floor\n                              </Text>\n                            </Box>\n                          )}\n                      </Box>\n                    ))}\n                    <Box css={{ mb: '$3', mt: '$4' }}>\n                      <Text\n                        as=\"div\"\n                        css={{ mb: '$2' }}\n                        style=\"subtitle2\"\n                        color=\"subtle\"\n                      >\n                        Expiration Date\n                      </Text>\n                      <Select\n                        value={expirationOption?.text || ''}\n                        onValueChange={(value: string) => {\n                          const option = expirationOptions.find(\n                            (option) => option.value == value\n                          )\n                          if (option) {\n                            setExpirationOption(option)\n                          }\n                        }}\n                      >\n                        {expirationOptions.map((option) => (\n                          <Select.Item key={option.text} value={option.value}>\n                            <Select.ItemText>{option.text}</Select.ItemText>\n                          </Select.Item>\n                        ))}\n                      </Select>\n                    </Box>\n                  </Box>\n                  <Box css={{ p: '$4', width: '100%' }}>\n                    <Button\n                      disabled={selectedMarketplaces.some(\n                        (marketplace) =>\n                          marketplace.price === '' ||\n                          marketplace.price == 0 ||\n                          Number(marketplace.price) < MINIMUM_AMOUNT\n                      )}\n                      onClick={listToken}\n                      css={{ width: '100%' }}\n                    >\n                      {copy.ctaList}\n                    </Button>\n                  </Box>\n                </MainContainer>\n              </ContentContainer>\n            )}\n            {!loading && listStep == ListStep.ListItem && (\n              <ContentContainer\n                css={{\n                  ...contentContainerCss,\n                }}\n              >\n                <TokenListingDetails\n                  token={token}\n                  collection={collection}\n                  listingData={listingData}\n                  currency={currency}\n                />\n                <MainContainer css={{ p: '$4' }}>\n                  <ProgressBar\n                    value={stepData?.stepProgress || 0}\n                    max={stepData?.totalSteps || 0}\n                  />\n                  {transactionError && <ErrorWell css={{ mt: 24 }} />}\n                  {stepData && stepData.currentStep.id === 'auth' ? (\n                    <SigninStep css={{ mt: 48, mb: '$4', gap: 20 }} />\n                  ) : null}\n                  {stepData && stepData.currentStep.id !== 'auth' ? (\n                    <>\n                      <Text\n                        css={{ textAlign: 'center', mt: 48, mb: 28 }}\n                        style=\"subtitle1\"\n                      >\n                        {stepData.currentStep.kind === 'transaction'\n                          ? 'Approve access to items\\nin your wallet'\n                          : 'Confirm listing in your wallet'}\n                      </Text>\n                      <TransactionProgress\n                        justify=\"center\"\n                        fromImg={tokenImage}\n                        toImgs={stepData?.listingData.map(\n                          (listing) => listing.marketplace.imageUrl || ''\n                        )}\n                      />\n                      <Text\n                        css={{\n                          textAlign: 'center',\n                          mt: 24,\n                          maxWidth: 395,\n                          mx: 'auto',\n                          mb: '$4',\n                        }}\n                        style=\"body3\"\n                        color=\"subtle\"\n                      >\n                        {stepData?.currentStep.description}\n                      </Text>\n                    </>\n                  ) : null}\n                  {!stepData && (\n                    <Flex\n                      css={{ height: '100%' }}\n                      justify=\"center\"\n                      align=\"center\"\n                    >\n                      <Loader />\n                    </Flex>\n                  )}\n                  {!transactionError && (\n                    <Button css={{ width: '100%', mt: 'auto' }} disabled={true}>\n                      <Loader />\n                      {copy.ctaAwaitingApproval}\n                    </Button>\n                  )}\n                  {transactionError && (\n                    <Flex css={{ mt: 'auto', gap: 10 }}>\n                      <Button\n                        color=\"secondary\"\n                        css={{ flex: 1 }}\n                        onClick={() => setListStep(ListStep.SetPrice)}\n                      >\n                        {copy.ctaEditListing}\n                      </Button>\n                      <Button css={{ flex: 1 }} onClick={() => listToken()}>\n                        {copy.ctaRetry}\n                      </Button>\n                    </Flex>\n                  )}\n                </MainContainer>\n              </ContentContainer>\n            )}\n            {!loading && listStep == ListStep.Complete && (\n              <ContentContainer\n                css={{\n                  ...contentContainerCss,\n                }}\n              >\n                <TokenListingDetails\n                  token={token}\n                  collection={collection}\n                  listingData={listingData}\n                  currency={currency}\n                />\n                <MainContainer css={{ p: '$4' }}>\n                  <ProgressBar\n                    value={stepData?.totalSteps || 0}\n                    max={stepData?.totalSteps || 0}\n                  />\n                  <Flex\n                    align=\"center\"\n                    justify=\"center\"\n                    direction=\"column\"\n                    css={{ flex: 1, textAlign: 'center', py: '$5' }}\n                  >\n                    <Box css={{ color: '$successAccent', mb: 24 }}>\n                      <FontAwesomeIcon icon={faCheckCircle} size=\"3x\" />\n                    </Box>\n                    <Text style=\"h5\" css={{ mb: '$2' }} as=\"h5\">\n                      Your item has been listed!\n                    </Text>\n                    <Text\n                      style=\"body3\"\n                      color=\"subtle\"\n                      as=\"p\"\n                      css={{ mb: 24, maxWidth: 300, overflow: 'hidden' }}\n                    >\n                      <Text color=\"accent\" ellipsify style=\"body3\">\n                        {token?.token?.name\n                          ? token?.token?.name\n                          : `#${token?.token?.tokenId}`}\n                      </Text>{' '}\n                      from{' '}\n                      <Span css={{ color: '$accentText' }}>\n                        {token?.token?.collection?.name}\n                      </Span>{' '}\n                      has been listed for sale\n                    </Text>\n                    <Text style=\"subtitle2\" as=\"p\" css={{ mb: '$3' }}>\n                      View Listing on\n                    </Text>\n                    <Flex css={{ gap: '$3' }}>\n                      {listingData.map((data) => {\n                        const source =\n                          data.listing.orderbook === 'reservoir' &&\n                          client?.source\n                            ? client?.source\n                            : data.marketplace.domain\n                        return (\n                          <a\n                            key={data.listing.orderbook}\n                            target=\"_blank\"\n                            href={`${reservoirChain?.baseApiUrl}/redirect/sources/${source}/tokens/${token?.token?.contract}:${token?.token?.tokenId}/link/v2`}\n                          >\n                            <Image\n                              css={{ width: 24 }}\n                              src={data.marketplace.imageUrl}\n                            />\n                          </a>\n                        )\n                      })}\n                    </Flex>\n                  </Flex>\n\n                  <Flex\n                    css={{\n                      flexDirection: 'column',\n                      gap: '$3',\n                      '@bp1': {\n                        flexDirection: 'row',\n                      },\n                    }}\n                  >\n                    {!!onGoToToken ? (\n                      <>\n                        <Button\n                          onClick={() => {\n                            setOpen(false)\n                          }}\n                          css={{ flex: 1 }}\n                          color=\"secondary\"\n                        >\n                          {copy.ctaClose}\n                        </Button>\n                        <Button\n                          style={{ flex: 1 }}\n                          color=\"primary\"\n                          onClick={() => {\n                            onGoToToken()\n                          }}\n                        >\n                          {copy.ctaGoToToken}\n                        </Button>\n                      </>\n                    ) : (\n                      <Button\n                        onClick={() => {\n                          setOpen(false)\n                        }}\n                        style={{ flex: 1 }}\n                        color=\"primary\"\n                      >\n                        {copy.ctaClose}\n                      </Button>\n                    )}\n                  </Flex>\n                </MainContainer>\n              </ContentContainer>\n            )}\n          </Modal>\n        )\n      }}\n    </ListModalRenderer>\n  )\n}\n\nListModal.Custom = ListModalRenderer\n","import React, { ComponentPropsWithoutRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Flex from './Flex'\nimport Text from './Text'\nimport { faCircleExclamation } from '@fortawesome/free-solid-svg-icons'\n\ntype Props = {\n  message?: string\n} & Pick<ComponentPropsWithoutRef<typeof Flex>, 'css'>\n\nexport default function ErrorWell({ message, css }: Props) {\n  return (\n    <Flex\n      css={{\n        color: '$errorAccent',\n        p: '$4',\n        gap: '$2',\n        background: '$wellBackground',\n        ...css,\n      }}\n      align=\"center\"\n    >\n      <FontAwesomeIcon icon={faCircleExclamation} width={16} height={16} />\n      <Text style=\"body3\" color=\"errorLight\">\n        {message || 'Oops, something went wrong. Please try again.'}\n      </Text>\n    </Flex>\n  )\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  ElementRef,\n  forwardRef,\n  ReactElement,\n} from 'react'\nimport { styled } from '../../stitches.config'\nimport * as Select from '@radix-ui/react-select'\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Box from './Box'\n\ntype Props = {\n  children: React.ReactNode\n  trigger?: ReactElement<typeof StyledTrigger>\n  css?: ComponentPropsWithoutRef<typeof StyledTrigger>['css']\n}\n\ntype SelectProps = {\n  Item: typeof Select.Item\n  ItemText: typeof StyledItemText\n  Trigger: typeof StyledTrigger\n  Value: typeof StyledValue\n  DownIcon: typeof SelectDownIcon\n}\n\nconst StyledTrigger = styled(Select.Trigger, {\n  boxSizing: 'border-box',\n  borderWidth: 0,\n  width: '100%',\n  px: '$4',\n  py: '$3',\n  borderRadius: '$borderRadius',\n  fontfamily: '$body',\n  fontSize: 16,\n  display: 'flex',\n  justifyContent: 'space-between',\n  color: '$neutralTextContrast',\n  backgroundColor: '$inputBackground',\n  $$focusColor: '$colors$accentBorderHover',\n  '&:placeholder': { color: '$neutralText' },\n  '&:focus': { boxShadow: '0 0 0 2px $$focusColor' },\n})\n\nconst StyledContent = styled(Select.Content, {\n  backgroundColor: '$inputBackground',\n  color: '$textColor',\n  borderRadius: '$borderRadius',\n  overflow: 'hidden',\n  $$focusColor: '$colors$accentBorderHover',\n  boxShadow: '0 0 0 2px $$focusColor',\n})\n\nconst textCss = {\n  color: '$textColor',\n  fontFamily: '$body',\n  letterSpacing: 0,\n}\n\nconst StyledItemText = styled(Select.ItemText, textCss)\n\nconst StyledValue = styled(Select.Value, textCss)\n\nconst SelectDownIcon = forwardRef<\n  ElementRef<typeof Select.Icon>,\n  ComponentPropsWithoutRef<typeof Select.Icon>\n>(({ ...props }, forwardedRef) => (\n  <Select.Icon asChild ref={forwardedRef} {...props}>\n    <Box css={{ color: '$neutralSolidHover' }}>\n      <FontAwesomeIcon icon={faChevronDown} width=\"14\" color=\"\" />\n    </Box>\n  </Select.Icon>\n))\n\nexport const RKSelect: React.FC<\n  Props &\n    ComponentPropsWithoutRef<typeof Select.Root> &\n    ComponentPropsWithoutRef<typeof Select.Value>\n> &\n  SelectProps = ({ children, trigger, css, ...props }) => (\n  <Select.Root {...props}>\n    {trigger ? (\n      trigger\n    ) : (\n      <StyledTrigger css={{ ...textCss, ...css }}>\n        <StyledValue placeholder={props.placeholder}>{props.value}</StyledValue>\n        <SelectDownIcon />\n      </StyledTrigger>\n    )}\n    <Select.Portal style={{ zIndex: 1000000 }}>\n      <StyledContent>\n        <Select.ScrollUpButton />\n        <Select.Viewport>{children}</Select.Viewport>\n        <Select.ScrollDownButton />\n      </StyledContent>\n    </Select.Portal>\n  </Select.Root>\n)\n\nconst StyledItem = styled(Select.Item, {\n  cursor: 'pointer',\n  py: '$3',\n  px: '$4',\n  color: '$textColor',\n  fontFamily: '$body',\n  letterSpacing: 0,\n\n  '&:hover': {\n    background: '$neutralBgActive',\n  },\n})\n\nRKSelect.Item = StyledItem\nRKSelect.ItemText = StyledItemText\nRKSelect.Trigger = StyledTrigger\nRKSelect.Value = StyledValue\nRKSelect.DownIcon = SelectDownIcon\n\nexport default RKSelect\n","import React, {\n  FC,\n  useState,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react'\nimport {\n  useTokens,\n  useCoinConversion,\n  useReservoirClient,\n  useMarketplaces,\n  useListingPreapprovalCheck,\n  useCollections,\n  useUserTokens,\n  useChainCurrency,\n  useOnChainRoyalties,\n} from '../../hooks'\nimport { useAccount, useWalletClient } from 'wagmi'\n\nimport { Execute, ReservoirClientActions } from '@reservoir0x/reservoir-sdk'\nimport dayjs from 'dayjs'\nimport { Marketplace } from '../../hooks/useMarketplaces'\nimport { ExpirationOption } from '../../types/ExpirationOption'\nimport expirationOptions from '../../lib/defaultExpirationOptions'\nimport { Currency } from '../../types/Currency'\nimport { formatUnits, parseUnits, zeroAddress } from 'viem'\n\nexport enum ListStep {\n  SelectMarkets,\n  SetPrice,\n  ListItem,\n  Complete,\n}\n\nexport type Listings = Parameters<\n  ReservoirClientActions['listToken']\n>['0']['listings']\n\nexport type ListingData = {\n  listing: Listings[0]\n  marketplace: Marketplace\n}\n\nexport type ListModalStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  listingData: ListingData[]\n}\n\ntype ChildrenProps = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>[0]\n  quantityAvailable: number\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  listStep: ListStep\n  usdPrice: number\n  expirationOptions: ExpirationOption[]\n  expirationOption: ExpirationOption\n  marketplaces: Marketplace[]\n  unapprovedMarketplaces: Marketplace[]\n  isFetchingUnapprovedMarketplaces: boolean\n  isFetchingOnChainRoyalties: boolean\n  localMarketplace: Marketplace | null\n  listingData: ListingData[]\n  transactionError?: Error | null\n  stepData: ListModalStepData | null\n  currencies: Currency[]\n  currency: Currency\n  quantity: number\n  royaltyBps?: number\n  setListStep: React.Dispatch<React.SetStateAction<ListStep>>\n  toggleMarketplace: (marketplace: Marketplace) => void\n  setExpirationOption: React.Dispatch<React.SetStateAction<ExpirationOption>>\n  setMarketPrice: (price: number, market: Marketplace) => void\n  setCurrency: (currency: Currency) => void\n  setQuantity: React.Dispatch<React.SetStateAction<number>>\n  listToken: () => void\n}\n\ntype Props = {\n  open: boolean\n  tokenId?: string\n  collectionId?: string\n  currencies?: Currency[]\n  normalizeRoyalties?: boolean\n  enableOnChainRoyalties: boolean\n  oracleEnabled: boolean\n  feesBps?: string[]\n  children: (props: ChildrenProps) => ReactNode\n}\n\nconst isCurrencyAllowed = (currency: Currency, marketplace: Marketplace) => {\n  if (marketplace.listingEnabled) {\n    if (currency.contract === zeroAddress) {\n      return true\n    }\n    switch (marketplace.orderbook) {\n      case 'reservoir':\n        return true\n\n      case 'opensea': {\n        return (\n          marketplace.paymentTokens?.find(\n            (token) => token.address === currency.contract\n          ) !== undefined\n        )\n      }\n    }\n  }\n  return false\n}\n\nexport const ListModalRenderer: FC<Props> = ({\n  open,\n  tokenId,\n  collectionId,\n  currencies,\n  normalizeRoyalties,\n  enableOnChainRoyalties = false,\n  oracleEnabled = false,\n  feesBps,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const account = useAccount()\n  const client = useReservoirClient()\n  const [listStep, setListStep] = useState<ListStep>(ListStep.SelectMarkets)\n  const [listingData, setListingData] = useState<ListingData[]>([])\n  const [allMarketplaces] = useMarketplaces(collectionId, true, feesBps)\n  const [loadedInitalPrice, setLoadedInitalPrice] = useState(false)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [stepData, setStepData] = useState<ListModalStepData | null>(null)\n  const [localMarketplace, setLocalMarketplace] = useState<Marketplace | null>(\n    null\n  )\n  const chainCurrency = useChainCurrency()\n  const defaultCurrency = {\n    contract: chainCurrency.address,\n    symbol: chainCurrency.symbol,\n  }\n  const [currency, setCurrency] = useState<Currency>(\n    currencies && currencies[0] ? currencies[0] : defaultCurrency\n  )\n  const [quantity, setQuantity] = useState(1)\n  const contract = collectionId ? collectionId?.split(':')[0] : undefined\n  const { data: collections } = useCollections(\n    open && {\n      id: collectionId,\n      normalizeRoyalties,\n    }\n  )\n  const collection = collections && collections[0] ? collections[0] : undefined\n\n  const [expirationOption, setExpirationOption] = useState<ExpirationOption>(\n    expirationOptions[5]\n  )\n\n  const { data: onChainRoyalties, isFetching: isFetchingOnChainRoyalties } =\n    useOnChainRoyalties({\n      contract,\n      tokenId,\n      chainId: chainCurrency.chainId,\n      enabled: enableOnChainRoyalties && open,\n    })\n\n  let royaltyBps = collection?.royalties?.bps\n\n  const onChainRoyaltyBps = useMemo(() => {\n    const totalRoyalty = onChainRoyalties?.[1].reduce((total, royalty) => {\n      total += parseFloat(formatUnits(royalty, currency.decimals || 18))\n      return total\n    }, 0)\n    if (totalRoyalty) {\n      return (totalRoyalty / 1) * 10000\n    }\n    return 0\n  }, [onChainRoyalties, chainCurrency])\n\n  if (enableOnChainRoyalties && onChainRoyaltyBps) {\n    royaltyBps = onChainRoyaltyBps\n  }\n\n  const [marketplaces, setMarketplaces] = useMarketplaces(\n    collectionId,\n    true,\n    feesBps,\n    royaltyBps\n  )\n  const {\n    data: unapprovedMarketplaces,\n    isFetching: isFetchingUnapprovedMarketplaces,\n  } = useListingPreapprovalCheck(\n    marketplaces,\n    open ? tokenId : undefined,\n    open ? contract : undefined\n  )\n\n  const { data: tokens } = useTokens(\n    open && {\n      tokens: [`${contract}:${tokenId}`],\n      includeAttributes: true,\n      includeLastSale: true,\n      normalizeRoyalties,\n    },\n    {\n      revalidateFirstPage: true,\n    }\n  )\n\n  const token = tokens && tokens.length > 0 ? tokens[0] : undefined\n  const is1155 = token?.token?.kind === 'erc1155'\n\n  const { data: userTokens } = useUserTokens(\n    open && is1155 ? account.address : undefined,\n    {\n      tokens: [`${contract}:${tokenId}`],\n    }\n  )\n\n  const quantityAvailable =\n    is1155 && userTokens[0]\n      ? Number(userTokens[0].ownership?.tokenCount || 1)\n      : 1\n\n  const coinConversion = useCoinConversion(\n    open ? 'USD' : undefined,\n    currency.symbol,\n    currency.coinGeckoId\n  )\n  const usdPrice = coinConversion.length > 0 ? coinConversion[0].price : 0\n\n  const toggleMarketplace = (marketplace: Marketplace) => {\n    const updatedMarketplaces = marketplaces.map((market) => {\n      if (market.name == marketplace.name) {\n        return {\n          ...market,\n          isSelected: !market.isSelected,\n        }\n      } else {\n        return market\n      }\n    })\n    const hasNonNativeMarketplace = updatedMarketplaces.find(\n      (marketplace) =>\n        marketplace.isSelected && marketplace.orderbook !== 'reservoir'\n    )\n    if (hasNonNativeMarketplace) {\n      setQuantity(1)\n    }\n    setMarketplaces(updatedMarketplaces)\n  }\n\n  const setMarketPrice = (price: number | string, market: Marketplace) => {\n    let updatedMarketplaces = marketplaces.map((marketplace) => {\n      if (marketplace.name == market.name) {\n        return {\n          ...marketplace,\n          price: price,\n          truePrice: price,\n        }\n      }\n      return marketplace\n    })\n    setMarketplaces(updatedMarketplaces)\n  }\n\n  useEffect(() => {\n    if (\n      open &&\n      token &&\n      collection &&\n      !loadedInitalPrice &&\n      allMarketplaces.length > 0\n    ) {\n      let updatedMarketplaces = allMarketplaces.map(\n        (marketplace): Marketplace => {\n          const listingEnabled = isCurrencyAllowed(currency, marketplace)\n          return {\n            ...marketplace,\n            price: '',\n            truePrice: '',\n            listingEnabled,\n            isSelected: listingEnabled ? marketplace.isSelected : false,\n          }\n        }\n      )\n      setMarketplaces(updatedMarketplaces)\n      setLoadedInitalPrice(true)\n    }\n  }, [token, collection, loadedInitalPrice, open, marketplaces.length])\n\n  useEffect(() => {\n    if (open && loadedInitalPrice) {\n      let updatedMarketplaces = allMarketplaces.map(\n        (marketplace): Marketplace => {\n          const listingEnabled = isCurrencyAllowed(currency, marketplace)\n          return {\n            ...marketplace,\n            listingEnabled,\n            isSelected: listingEnabled ? marketplace.isSelected : false,\n          }\n        }\n      )\n      setMarketplaces(updatedMarketplaces)\n    }\n  }, [open, currency])\n\n  useEffect(() => {\n    if (marketplaces) {\n      setLocalMarketplace(\n        marketplaces.find(\n          (marketplace) => marketplace.orderbook === 'reservoir'\n        ) || null\n      )\n    } else {\n      setLocalMarketplace(null)\n    }\n  }, [marketplaces])\n\n  useEffect(() => {\n    if (!open) {\n      setListStep(ListStep.SelectMarkets)\n      setTransactionError(null)\n      if (marketplaces.length > 0) {\n        setMarketplaces(\n          marketplaces.map((marketplace) => {\n            return {\n              ...marketplace,\n              isSelected: marketplace.orderbook === 'reservoir',\n            }\n          })\n        )\n      }\n      setLoadedInitalPrice(false)\n      setStepData(null)\n      setExpirationOption(expirationOptions[5])\n      setQuantity(1)\n    }\n    setCurrency(currencies && currencies[0] ? currencies[0] : defaultCurrency)\n  }, [open])\n\n  useEffect(() => {\n    if (currencies && currencies.length > 5) {\n      console.warn(\n        'The ListModal UI was designed to have a maximum of 5 currencies, going above 5 may degrade the user experience.'\n      )\n    }\n  }, [currencies])\n\n  const listToken = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    setTransactionError(null)\n\n    const listingData: ListingData[] = []\n    let expirationTime: string | null = null\n\n    if (expirationOption.relativeTime && expirationOption.relativeTimeUnit) {\n      expirationTime = dayjs()\n        .add(expirationOption.relativeTime, expirationOption.relativeTimeUnit)\n        .unix()\n        .toString()\n    }\n\n    marketplaces.forEach((market) => {\n      if (market.isSelected) {\n        const listing: Listings[0] = {\n          token: `${contract}:${tokenId}`,\n          weiPrice: (\n            parseUnits(`${+market.price}`, currency.decimals || 18) *\n            BigInt(quantity)\n          ).toString(),\n          //@ts-ignore\n          orderbook: market.orderbook,\n          //@ts-ignore\n          orderKind: market.orderKind,\n        }\n\n        if (\n          enableOnChainRoyalties &&\n          onChainRoyalties &&\n          listing.orderKind?.includes('seaport')\n        ) {\n          const royalties = onChainRoyalties[0].map((recipient, i) => {\n            const bps =\n              (parseFloat(\n                formatUnits(onChainRoyalties[1][i], currency.decimals || 18)\n              ) /\n                1) *\n              10000\n            return `${recipient}:${bps}`\n          })\n          listing.automatedRoyalties = false\n          listing.fees = [...royalties]\n        }\n\n        if (listing.orderbook === 'reservoir') {\n          const fees = feesBps || client.marketplaceFees\n          if (fees) {\n            if (!listing.fees) {\n              listing.fees = []\n            }\n            listing.fees = listing.fees.concat(fees)\n          }\n        }\n\n        if (quantity > 1) {\n          listing.quantity = quantity\n        }\n\n        if (expirationTime) {\n          listing.expirationTime = expirationTime\n        }\n\n        if (currency && currency.contract != zeroAddress) {\n          listing.currency = currency.contract\n        }\n\n        if (oracleEnabled) {\n          listing.options = {\n            [`${listing.orderKind}`]: {\n              useOffChainCancellation: true,\n            },\n          }\n        }\n\n        listingData.push({\n          listing,\n          marketplace: market,\n        })\n      }\n    })\n\n    setListingData(listingData)\n    setListStep(ListStep.ListItem)\n\n    client.actions\n      .listToken({\n        listings: listingData.map((data) => data.listing),\n        wallet,\n        onProgress: (steps: Execute['steps']) => {\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n          let incompleteStepItemIndex: number | null = null\n          let incompleteStepIndex: number | null = null\n\n          executableSteps.find((step, i) => {\n            if (!step.items) {\n              return false\n            }\n\n            incompleteStepItemIndex = step.items.findIndex(\n              (item) => item.status == 'incomplete'\n            )\n            if (incompleteStepItemIndex !== -1) {\n              incompleteStepIndex = i\n              return true\n            }\n          })\n\n          if (\n            incompleteStepIndex === null ||\n            incompleteStepItemIndex === null\n          ) {\n            const currentStep = executableSteps[executableSteps.length - 1]\n            const currentStepItem = currentStep.items\n              ? currentStep.items[currentStep.items.length]\n              : null\n            setListStep(ListStep.Complete)\n            const listings =\n              currentStepItem && currentStepItem.orderIndexes !== undefined\n                ? listingData.filter((_, i) =>\n                    currentStepItem.orderIndexes?.includes(i)\n                  )\n                : [listingData[listingData.length - 1]]\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: stepCount,\n              currentStep,\n              listingData: listings,\n            })\n          } else {\n            const currentStep = executableSteps[incompleteStepIndex]\n            const listingIndexes: Set<number> = new Set()\n            currentStep.items?.forEach(({ orderIndexes, status }) => {\n              if (status === 'incomplete') {\n                orderIndexes?.forEach((orderIndex) => {\n                  listingIndexes.add(orderIndex)\n                })\n              }\n            })\n            const listings = Array.from(listingIndexes).map(\n              (index) => listingData[index]\n            )\n\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: incompleteStepIndex,\n              currentStep: executableSteps[incompleteStepIndex],\n              listingData: listings,\n            })\n          }\n        },\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        //@ts-ignore\n        const transactionError = new Error(error?.message || '', {\n          cause: error,\n        })\n        setTransactionError(transactionError)\n      })\n  }, [\n    client,\n    marketplaces,\n    wallet,\n    collectionId,\n    tokenId,\n    expirationOption,\n    currency,\n    quantity,\n    enableOnChainRoyalties,\n    onChainRoyalties,\n    feesBps,\n  ])\n\n  return (\n    <>\n      {children({\n        token,\n        quantityAvailable,\n        collection,\n        listStep,\n        usdPrice,\n        expirationOption,\n        expirationOptions,\n        marketplaces,\n        unapprovedMarketplaces,\n        isFetchingUnapprovedMarketplaces,\n        isFetchingOnChainRoyalties,\n        localMarketplace,\n        listingData,\n        transactionError,\n        stepData,\n        currencies: currencies || [defaultCurrency],\n        currency,\n        quantity,\n        royaltyBps,\n        setListStep,\n        toggleMarketplace,\n        setMarketPrice,\n        setCurrency,\n        setExpirationOption,\n        setQuantity,\n        listToken,\n      })}\n    </>\n  )\n}\n\nListModalRenderer.displayName = 'ListModalRenderer'\n","import { useEffect, useState } from 'react'\nimport useReservoirClient from './useReservoirClient'\nimport { Marketplace } from './useMarketplaces'\nimport { Listings } from '../modal/list/ListModalRenderer'\nimport { useWalletClient } from 'wagmi'\nimport { Execute } from '@reservoir0x/reservoir-sdk'\n\nexport default function (\n  marketplaces: Marketplace[],\n  tokenId?: string,\n  collectionId?: string\n) {\n  const [unapprovedMarketplaces, setUnapprovedMarketplaces] = useState<\n    Marketplace[]\n  >([])\n  const [isFetching, setIsFetching] = useState(false)\n  const client = useReservoirClient()\n  const { data: wallet } = useWalletClient()\n\n  useEffect(() => {\n    if (\n      wallet &&\n      client &&\n      tokenId &&\n      collectionId &&\n      marketplaces.length > 0\n    ) {\n      const listings = marketplaces.map((market) => {\n        const listing: Listings[0] = {\n          token: `${collectionId}:${tokenId}`,\n          weiPrice: '100000000000000000',\n          //@ts-ignore\n          orderbook: market.orderbook,\n          //@ts-ignore\n          orderKind: market.orderKind,\n        }\n        return listing\n      })\n      setIsFetching(true)\n      client.actions\n        .listToken({\n          listings: listings,\n          wallet,\n          precheck: true,\n        })\n        .then((data: any) => {\n          const steps = data as Execute['steps']\n          const approvalStep = steps.find(\n            (step) =>\n              step.kind === 'transaction' && step.items && step.items.length > 0\n          )\n          if (approvalStep && approvalStep.items) {\n            setUnapprovedMarketplaces(\n              approvalStep.items.reduce((unapproved, item) => {\n                if (\n                  item.status === 'incomplete' &&\n                  item.orderIndexes !== undefined\n                ) {\n                  const listingOrderKinds = listings\n                    .filter((_, i) => item.orderIndexes?.includes(i))\n                    .map((listing) => listing.orderKind)\n                  marketplaces.forEach((marketplace) => {\n                    if (\n                      listingOrderKinds.includes(marketplace.orderKind as any)\n                    ) {\n                      unapproved.push(marketplace)\n                    }\n                  })\n                }\n                return unapproved\n              }, [] as Marketplace[])\n            )\n          } else if (unapprovedMarketplaces.length > 0) {\n            setUnapprovedMarketplaces([])\n          }\n          setIsFetching(false)\n        })\n        .catch(() => {\n          setIsFetching(false)\n        })\n    } else if (unapprovedMarketplaces.length > 0) {\n      setUnapprovedMarketplaces([])\n    }\n  }, [client, wallet, tokenId, collectionId, marketplaces.length])\n\n  return { data: unapprovedMarketplaces, isFetching }\n}\n","import { paths } from '@reservoir0x/reservoir-sdk'\nimport getLocalMarketplaceData from '../lib/getLocalMarketplaceData'\nimport { useEffect, useState } from 'react'\nimport useReservoirClient from './useReservoirClient'\nimport useSWR from 'swr'\n\nexport type Marketplace = NonNullable<\n  paths['/collections/{collection}/supported-marketplaces/v1']['get']['responses']['200']['schema']['marketplaces']\n>[0] & {\n  isSelected: boolean\n  price: number | string\n  truePrice: number | string\n  fee: {\n    bps: number\n    percent: number\n  }\n}\n\nexport default function (\n  collectionId?: string,\n  listingEnabledOnly?: boolean,\n  fees?: string[],\n  royaltyBps?: number,\n  chainId?: number\n): [Marketplace[], React.Dispatch<React.SetStateAction<Marketplace[]>>] {\n  const [marketplaces, setMarketplaces] = useState<Marketplace[]>([])\n  const client = useReservoirClient()\n  const chain =\n    chainId !== undefined\n      ? client?.chains.find((chain) => chain.id === chainId)\n      : client?.currentChain()\n  const path = new URL(\n    `${chain?.baseApiUrl}/collections/${collectionId}/supported-marketplaces/v1`\n  )\n\n  const { data } = useSWR<\n    paths['/collections/{collection}/supported-marketplaces/v1']['get']['responses'][200]['schema']\n  >(collectionId ? [path.href, chain?.apiKey, client?.version] : null, null)\n\n  useEffect(() => {\n    if (data && data.marketplaces) {\n      let updatedMarketplaces: Marketplace[] =\n        data.marketplaces as Marketplace[]\n      if (listingEnabledOnly) {\n        updatedMarketplaces = updatedMarketplaces.filter(\n          (marketplace) =>\n            marketplace.listingEnabled && marketplace.orderbook !== 'x2y2'\n        )\n      }\n      updatedMarketplaces.forEach((marketplace) => {\n        if (marketplace.orderbook === 'reservoir') {\n          const data = getLocalMarketplaceData()\n          marketplace.name = data.title\n          marketplace.domain = client?.source\n          const marketplaceFees = fees || client?.marketplaceFees\n          const feeBps = marketplaceFees?.reduce((total, fee) => {\n            const bps = Number(fee.split(':')[1])\n            total += bps\n            return total\n          }, 0)\n          marketplace.fee = {\n            bps: feeBps || 0,\n            percent: (feeBps || 0) / 100,\n          }\n          if (data.icon) {\n            marketplace.imageUrl = data.icon\n          }\n        }\n        if (marketplace.orderbook === 'opensea' && royaltyBps !== undefined) {\n          const osFee =\n            royaltyBps && royaltyBps >= 50 ? 0 : 50 - (royaltyBps || 0)\n          marketplace.fee = {\n            bps: osFee,\n            percent: osFee / 100,\n          }\n        } else {\n          if (marketplace.fee) {\n            marketplace.fee.percent = (marketplace.fee.bps || 0) / 100\n          }\n        }\n        marketplace.price = 0\n        marketplace.truePrice = 0\n        marketplace.isSelected =\n          marketplace.orderbook === 'reservoir' ? true : false\n      })\n      setMarketplaces(updatedMarketplaces)\n    }\n  }, [data, listingEnabledOnly, chainId, fees, royaltyBps])\n\n  return [marketplaces, setMarketplaces]\n}\n","import { getClient } from '@reservoir0x/reservoir-sdk'\n\nexport default () => {\n  const client = getClient()\n  let reservoirTitleEl = document.querySelector(\n    \"meta[property='reservoir:title']\"\n  )\n  let title: null | string = null\n  if (reservoirTitleEl) {\n    title = reservoirTitleEl.getAttribute('content')\n  }\n\n  if (!title && client && client.source) {\n    title = client.source\n  } else if (!title) {\n    title = location ? location.hostname.replace('www.', '') : ''\n  }\n\n  const reservoirIconEl = document.querySelector(\n    \"meta[property='reservoir:icon']\"\n  )\n  let icon: null | string = null\n  if (reservoirIconEl) {\n    icon = reservoirIconEl.getAttribute('content')\n  }\n\n  if (!icon) {\n    const favicon = document.querySelector(\"link[rel*='icon']\")\n    if (favicon) {\n      icon = favicon.getAttribute('href')\n    }\n  }\n\n  return {\n    title,\n    icon,\n  }\n}\n","import { useContractRead } from 'wagmi'\nimport { mainnet, goerli } from 'wagmi/chains'\nimport useChainCurrency from '../hooks/useChainCurrency'\nimport { parseUnits } from 'viem'\n\ntype Props = {\n  contract?: string\n  tokenId?: string\n  value?: bigint\n  enabled: boolean\n  chainId: number\n}\n\nconst MANIFOLD_ABI = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'tokenAddress',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'getRoyaltyView',\n    outputs: [\n      {\n        internalType: 'address payable[]',\n        name: 'recipients',\n        type: 'address[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'amounts',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nexport default function ({\n  contract,\n  tokenId,\n  value,\n  enabled,\n  chainId = mainnet.id,\n}: Props) {\n  let manifoldContract = ''\n  switch (chainId) {\n    case mainnet.id: {\n      manifoldContract = '0x0385603ab55642cb4dd5de3ae9e306809991804f'\n      break\n    }\n    case goerli.id: {\n      manifoldContract = '0xe7c9Cb6D966f76f3B5142167088927Bf34966a1f'\n      break\n    }\n    case 137: {\n      manifoldContract = '0x28EdFcF0Be7E86b07493466e7631a213bDe8eEF2'\n      break\n    }\n  }\n  const currency = useChainCurrency(chainId)\n  const amount = value ? value : parseUnits('1', currency.decimals || 18)\n\n  return useContractRead({\n    chainId: chainId,\n    address: manifoldContract as any,\n    abi: MANIFOLD_ABI,\n    args: [contract as any, tokenId as any, amount as any],\n    functionName: 'getRoyaltyView',\n    enabled: enabled && tokenId && contract && amount ? true : false,\n    cacheTime: 60 * 1000,\n  })\n}\n","import { ExpirationOption } from '../types/ExpirationOption'\n\nconst expirationOptions: ExpirationOption[] = [\n  {\n    text: '1 Hour',\n    value: 'hour',\n    relativeTime: 1,\n    relativeTimeUnit: 'h',\n  },\n  {\n    text: '12 Hours',\n    value: '12 hours',\n    relativeTime: 12,\n    relativeTimeUnit: 'h',\n  },\n  {\n    text: '1 Day',\n    value: '1 day',\n    relativeTime: 1,\n    relativeTimeUnit: 'd',\n  },\n  {\n    text: '3 Day',\n    value: '3 days',\n    relativeTime: 3,\n    relativeTimeUnit: 'd',\n  },\n  { text: '1 Week', value: 'week', relativeTime: 1, relativeTimeUnit: 'w' },\n  { text: '1 Month', value: 'month', relativeTime: 1, relativeTimeUnit: 'M' },\n  {\n    text: '3 Months',\n    value: '3 months',\n    relativeTime: 3,\n    relativeTimeUnit: 'M',\n  },\n  {\n    text: '6 Months',\n    value: '6 months',\n    relativeTime: 6,\n    relativeTimeUnit: 'M',\n  },\n]\n\nexport default expirationOptions\n","import React, { FC } from 'react'\nimport { Flex, Box, Text } from '../../primitives'\nimport Token from './Token'\nimport Stat from '../Stat'\nimport { useTokens, useCollections } from '../../hooks'\nimport InfoTooltip from '../../primitives/InfoTooltip'\n\ntype Props = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>['0']\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  royaltyBps?: number\n}\n\nconst TokenStats: FC<Props> = ({ token, collection, royaltyBps = 0 }) => {\n  let attributeFloor = token?.token?.attributes\n    ? Math.max(\n        ...token.token.attributes.map((attr: any) =>\n          Number(attr.floorAskPrice)\n        ),\n        0\n      )\n    : 0\n  return (\n    <Flex\n      css={{\n        width: '100%',\n        flexDirection: 'row',\n        '@bp1': {\n          width: 220,\n          flexDirection: 'column',\n        },\n        p: '$4',\n      }}\n    >\n      <Token collection={collection} token={token} />\n      <Box\n        css={{\n          flex: 1,\n          mt: '$4',\n          [`& ${Stat}:not(:last-child)`]: {\n            mb: '$1',\n          },\n          mb: '$3',\n        }}\n      >\n        {[\n          {\n            id: 0,\n            label: (\n              <>\n                <Text\n                  style=\"subtitle2\"\n                  color=\"subtle\"\n                  css={{ minWidth: '0' }}\n                  ellipsify\n                >\n                  Creator Royalties\n                </Text>\n                <InfoTooltip\n                  side=\"right\"\n                  width={200}\n                  content={\n                    'A fee on every order that goes to the collection creator.'\n                  }\n                />\n              </>\n            ),\n            value: `${royaltyBps * 0.01}%`,\n          },\n          {\n            id: 1,\n            label: (\n              <Text\n                style=\"subtitle2\"\n                color=\"subtle\"\n                css={{ minWidth: '0' }}\n                ellipsify\n              >\n                Last Sale\n              </Text>\n            ),\n            value: token?.token?.lastSale?.price?.amount?.decimal || null,\n            address: token?.token?.lastSale?.price?.currency?.contract,\n            symbol: token?.token?.lastSale?.price?.currency?.symbol,\n            asNative: true,\n          },\n          {\n            id: 2,\n            label: (\n              <Text\n                style=\"subtitle2\"\n                color=\"subtle\"\n                css={{ minWidth: '0' }}\n                ellipsify\n              >\n                Collection Floor\n              </Text>\n            ),\n            value: collection?.floorAsk?.price?.amount?.native || 0,\n            address: collection?.floorAsk?.price?.currency?.contract,\n            symbol: collection?.floorAsk?.price?.currency?.symbol,\n            asNative: true,\n          },\n          {\n            id: 3,\n            label: (\n              <>\n                <Text\n                  style=\"subtitle2\"\n                  color=\"subtle\"\n                  css={{ minWidth: '0' }}\n                  ellipsify\n                >\n                  Highest Trait Floor\n                </Text>\n                <InfoTooltip\n                  side=\"right\"\n                  width={200}\n                  content={\n                    'The floor price of the most valuable trait of a token.'\n                  }\n                />\n              </>\n            ),\n            value:\n              attributeFloor ||\n              collection?.floorAsk?.price?.amount?.native ||\n              0,\n            symbol: attributeFloor\n              ? undefined\n              : collection?.floorAsk?.price?.currency?.symbol,\n            asNative: true,\n          },\n        ].map((stat) => (\n          <Stat key={stat.id} {...stat} />\n        ))}\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TokenStats\n","import { useTokens, useCollections } from '../../hooks'\nimport React, { FC } from 'react'\nimport { styled } from '../../../stitches.config'\nimport { Box, Text } from '../../primitives'\nimport optimizeImage from '../../lib/optimizeImage'\n\nconst Img = styled('img', {\n  width: '100%',\n  '@bp1': {\n    height: 150,\n    width: 150,\n  },\n  borderRadius: '$borderRadius',\n})\n\ntype Props = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>['0']\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n}\n\nconst Token: FC<Props> = ({ token, collection }) => {\n  const img = token?.token?.imageSmall\n    ? token.token.imageSmall\n    : optimizeImage(collection?.image as string, 250)\n  return (\n    <Box\n      css={{\n        mr: '$4',\n        width: 120,\n        '@bp1': {\n          mr: 0,\n          width: '100%',\n        },\n      }}\n    >\n      <Text\n        style=\"subtitle2\"\n        color=\"subtle\"\n        css={{ mb: '$1', display: 'block' }}\n      >\n        Item\n      </Text>\n      <Img\n        src={img}\n        css={{\n          mb: '$2',\n          visibility: !img || img.length === 0 ? 'hidden' : 'visible',\n          objectFit: 'cover',\n        }}\n      />\n      <Text style=\"h6\" css={{ flex: 1 }} as=\"h6\" ellipsify>\n        {token?.token?.name || `#${token?.token?.tokenId}`}\n      </Text>\n      <Box>\n        <Text style=\"subtitle2\" color=\"subtle\" as=\"p\" ellipsify>\n          {token?.token?.collection?.name}\n        </Text>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Token\n","const optimizeImage = (imageHref: string | undefined, width: number) => {\n  if (!imageHref) return ''\n  let url = new URL(imageHref)\n  if (url.host === 'lh3.googleusercontent.com') {\n    if (imageHref.includes('=s') || imageHref.includes('=w')) {\n      let newImage = imageHref.split('=')\n      return `${newImage[0]}=w${width}`\n    }\n    return `${imageHref}=w${width}`\n  }\n  return imageHref\n}\nexport default optimizeImage\n","import React, { FC, ReactElement } from 'react'\nimport {\n  Flex,\n  Text,\n  FormatCryptoCurrency,\n  FormatWrappedCurrency,\n} from '../primitives'\n\ntype StatProps = {\n  label: string | ReactElement\n  value: string | number | null\n  symbol?: string\n  asNative?: boolean\n  asWrapped?: boolean\n  address?: string\n}\n\nconst Stat: FC<StatProps> = ({\n  label,\n  value,\n  symbol,\n  asNative = false,\n  asWrapped = false,\n  address,\n  ...props\n}) => (\n  <Flex\n    align=\"center\"\n    justify=\"between\"\n    className=\"rk-stat-well\"\n    css={{\n      backgroundColor: '$wellBackground',\n      p: '$2',\n      borderRadius: '$borderRadius',\n      overflow: 'hidden',\n    }}\n    {...props}\n  >\n    <Flex\n      css={{\n        flex: 1,\n        minWidth: '0',\n        alignItems: 'center',\n        gap: '$2',\n        mr: '$1',\n      }}\n    >\n      {label}\n    </Flex>\n    {asNative && !asWrapped && (\n      <FormatCryptoCurrency\n        amount={value}\n        textStyle=\"subtitle2\"\n        address={address}\n        symbol={symbol}\n      />\n    )}\n    {asWrapped && !asNative && (\n      <FormatWrappedCurrency\n        amount={value}\n        address={address}\n        symbol={symbol}\n        textStyle=\"subtitle2\"\n      />\n    )}\n    {!asNative && !asWrapped && (\n      <Text\n        style=\"subtitle2\"\n        as=\"p\"\n        css={{\n          marginLeft: '$2',\n        }}\n        ellipsify\n      >\n        {value ? value : '-'}\n      </Text>\n    )}\n  </Flex>\n)\n\nStat.toString = () => '.rk-stat-well'\n\nexport default Stat\n","import React, { FC, ComponentProps } from 'react'\nimport wrappedContracts from '../constants/wrappedContracts'\nimport { useNetwork } from 'wagmi'\nimport FormatCryptoCurrency from './FormatCryptoCurrency'\n\ntype Props = ComponentProps<typeof FormatCryptoCurrency> & {\n  logoWidth?: number\n  address?: string\n}\n\nconst FormatWrappedCurrency: FC<Props> = ({ logoWidth, address, ...props }) => {\n  const { chain: activeChain, chains } = useNetwork()\n  let chain = chains.find((chain) => activeChain?.id === chain.id)\n\n  if (!chain && chains.length > 0) {\n    chain = chains[0]\n  } else {\n    chain = activeChain\n  }\n\n  const contractAddress =\n    chain?.id !== undefined && chain.id in wrappedContracts\n      ? wrappedContracts[chain.id]\n      : wrappedContracts[1]\n\n  return (\n    <FormatCryptoCurrency {...props} address={address || contractAddress} />\n  )\n}\n\nexport default FormatWrappedCurrency\n","import React from 'react'\n\nimport { Box, Text, Flex, Switch } from '../../primitives'\nimport { Marketplace } from '../../hooks/useMarketplaces'\n\ntype MarketPlaceToggleProps = {\n  marketplace: Marketplace\n  onSelection: () => void\n}\n\nconst MarketplaceToggle = ({\n  marketplace,\n  onSelection,\n  ...props\n}: MarketPlaceToggleProps) => (\n  <Flex {...props} align=\"center\">\n    <Box css={{ mr: '$2' }}>\n      <img\n        src={marketplace.imageUrl}\n        style={{ height: 32, width: 32, borderRadius: 4 }}\n      />\n    </Box>\n    <Text style=\"body2\" css={{ flex: 1 }}>\n      {marketplace.name}\n    </Text>\n    <Text style=\"subtitle2\" color=\"subtle\" css={{ mr: '$2' }}>\n      Marketplace fee: {marketplace.fee?.percent}%\n    </Text>\n    <Switch checked={marketplace.isSelected} onCheckedChange={onSelection} />\n  </Flex>\n)\n\nexport default MarketplaceToggle\n","import React from 'react'\nimport { styled } from '../../stitches.config'\nimport * as SwitchPrimitive from '@radix-ui/react-switch'\n\nconst StyledSwitch = styled(SwitchPrimitive.Root, {\n  all: 'unset',\n  cursor: 'pointer',\n  width: 46,\n  height: 24,\n  backgroundColor: '$neutralBgActive',\n  borderRadius: '9999px',\n  position: 'relative',\n  transition: 'background-color 250ms linear',\n  $$focusColor: '$colors$accentBorder',\n  '&[data-state=\"checked\"]': { backgroundColor: '$accentSolid' },\n  '&:focus-visible': {\n    boxShadow: '0 0 0 2px $$focusColor',\n  },\n})\n\nconst Thumb = styled(SwitchPrimitive.Thumb, {\n  display: 'block',\n  width: 20,\n  height: 20,\n  backgroundColor: '$buttonTextColor',\n  borderRadius: '9999px',\n  transition: 'transform 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n  transform: 'translateX(4px)',\n  willChange: 'transform',\n  $$borderColor: '$borderColor',\n  //boxShadow: '0 0 0 1px $$borderColor',\n  '&[data-state=\"checked\"]': { transform: 'translateX(22px)' },\n})\n\nconst Switch = (props?: SwitchPrimitive.SwitchProps) => (\n  <StyledSwitch {...props}>\n    <Thumb />\n  </StyledSwitch>\n)\n\nexport default Switch\n","import React from 'react'\n\nimport {\n  Flex,\n  Box,\n  Input,\n  FormatCurrency,\n  Text,\n  FormatCryptoCurrency,\n} from '../../primitives'\n\nimport { Marketplace } from '../../hooks/useMarketplaces'\nimport { Currency } from '../../types/Currency'\nimport { CryptoCurrencyIcon } from '../../primitives'\nimport { useCollections } from '../../hooks'\nimport { CurrencySelector } from '../CurrencySelector'\n\ntype MarketPlaceInputProps = {\n  marketplace: Marketplace\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  currency: Currency\n  currencies: Currency[]\n  setCurrency: (currency: Currency) => void\n  usdPrice?: number | null\n  quantity?: number\n  nativeOnly?: boolean\n  onChange: (e: any) => void\n  onBlur: (e: any) => void\n}\n\nconst MarketplacePriceInput = ({\n  marketplace,\n  collection,\n  currency,\n  currencies,\n  setCurrency,\n  usdPrice,\n  quantity = 1,\n  nativeOnly,\n  onChange,\n  onBlur,\n  ...props\n}: MarketPlaceInputProps) => {\n  let profit =\n    (1 -\n      (marketplace.fee?.percent || 0) / 100 -\n      (collection?.royalties?.bps || 0) * 0.0001) *\n    Number(marketplace.truePrice) *\n    quantity\n  100\n\n  return (\n    <Flex {...props} align=\"center\">\n      <>\n        {!nativeOnly ? (\n          <Box css={{ mr: '$2' }}>\n            <img\n              src={marketplace.imageUrl}\n              style={{ height: 32, width: 32, borderRadius: 4 }}\n            />\n          </Box>\n        ) : null}\n        {nativeOnly && currencies.length > 1 ? (\n          <CurrencySelector\n            currency={currency}\n            currencies={currencies}\n            setCurrency={setCurrency}\n            triggerCss={{\n              mr: '$3',\n              backgroundColor: '$neutralBgActive',\n              borderRadius: 4,\n              p: '$3',\n              width: 120,\n            }}\n            valueCss={{ justifyContent: 'space-between', width: '100%' }}\n          />\n        ) : (\n          <Flex align=\"center\">\n            <Box\n              css={{\n                width: 'auto',\n                height: 20,\n              }}\n            >\n              <CryptoCurrencyIcon\n                css={{ height: 18 }}\n                address={currency.contract}\n              />\n            </Box>\n\n            <Text\n              style=\"body1\"\n              color=\"subtle\"\n              css={{ ml: '$1', mr: '$4' }}\n              as=\"p\"\n            >\n              {currency.symbol}\n            </Text>\n          </Flex>\n        )}\n      </>\n      <Box css={{ flex: 1 }}>\n        <Input\n          type=\"number\"\n          value={marketplace.price}\n          onChange={onChange}\n          onBlur={onBlur}\n          placeholder=\"Enter a listing price\"\n        />\n      </Box>\n      <Flex direction=\"column\" align=\"end\" css={{ ml: '$3' }}>\n        <FormatCryptoCurrency\n          amount={profit}\n          address={currency.contract}\n          decimals={currency.decimals}\n          symbol={currency?.symbol}\n          textStyle=\"h6\"\n          logoWidth={18}\n        />\n        <FormatCurrency\n          amount={profit * (usdPrice || 0)}\n          style=\"subtitle2\"\n          color=\"subtle\"\n        />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default MarketplacePriceInput\n","import { styled } from '../../stitches.config'\nimport Flex from './Flex'\nimport Box from './Box'\nimport React, {\n  ComponentPropsWithoutRef,\n  ElementRef,\n  forwardRef,\n  ReactNode,\n} from 'react'\nimport { CSS } from '@stitches/react'\n\nconst StyledInput = styled('input', {\n  all: 'unset',\n  width: '100%',\n  px: 16,\n  py: 12,\n  borderRadius: 8,\n  fontFamily: '$body',\n  fontSize: 16,\n  color: '$neutralTextContrast',\n  backgroundColor: '$inputBackground',\n  $$focusColor: '$colors$accentBorderHover',\n  '&:placeholder': { color: '$neutralText' },\n  '&:focus': { boxShadow: '0 0 0 2px $$focusColor' },\n\n  '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button': {\n    '-webkit-appearance': 'none',\n    margin: 0,\n  },\n\n  '&[type=number]': {\n    '-moz-appearance': 'textfield',\n  },\n})\n\nexport const Input = forwardRef<\n  ElementRef<typeof StyledInput>,\n  ComponentPropsWithoutRef<typeof StyledInput> & {\n    icon?: ReactNode\n    containerCss?: CSS\n    iconCss?: CSS\n  }\n>(({ children, icon, containerCss, iconCss, ...props }, forwardedRef) => (\n  <Flex css={{ ...containerCss, position: 'relative' }}>\n    {icon && (\n      <Box\n        css={{\n          position: 'absolute',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          left: 16,\n          color: '$neutralTextContrast',\n          pointerEvents: 'none',\n          ...iconCss,\n        }}\n      >\n        {icon}\n      </Box>\n    )}\n    <StyledInput\n      css={{ pl: icon ? 48 : 16, ...props.css }}\n      ref={forwardedRef}\n      {...props}\n    />\n  </Flex>\n))\n\nexport default Input\n","import { CSS } from '@stitches/react'\nimport React, { FC } from 'react'\nimport { CryptoCurrencyIcon, Flex, Select, Text } from '../primitives'\nimport { Currency } from '../types/Currency'\n\ntype Props = {\n  triggerCss?: CSS\n  valueCss?: CSS\n  currencies: Currency[]\n  currency: Currency\n  setCurrency: (currency: Currency) => void\n}\n\nexport const CurrencySelector: FC<Props> = ({\n  triggerCss,\n  valueCss,\n  currencies,\n  currency,\n  setCurrency,\n}) => {\n  return (\n    <Select\n      trigger={\n        <Select.Trigger\n          css={{\n            width: 'auto',\n            p: 0,\n            backgroundColor: 'transparent',\n            ...triggerCss,\n          }}\n        >\n          <Select.Value asChild>\n            <Flex align=\"center\" css={{ ...valueCss }}>\n              <Flex align=\"center\">\n                <CryptoCurrencyIcon\n                  address={currency.contract}\n                  css={{ height: 18 }}\n                />\n                <Text style=\"subtitle1\" color=\"subtle\" css={{ ml: '$1' }}>\n                  {currency.symbol}\n                </Text>\n              </Flex>\n              <Select.DownIcon style={{ marginLeft: 6 }} />\n            </Flex>\n          </Select.Value>\n        </Select.Trigger>\n      }\n      value={currency.contract}\n      onValueChange={(value: string) => {\n        const option = currencies.find((option) => option.contract == value)\n        if (option) {\n          setCurrency(option)\n        }\n      }}\n    >\n      {currencies.map((option) => (\n        <Select.Item key={option.contract} value={option.contract}>\n          <Select.ItemText>\n            <Flex align=\"center\" css={{ gap: '$1' }}>\n              <CryptoCurrencyIcon\n                address={option.contract}\n                css={{ height: 18 }}\n              />\n              {option.symbol}\n            </Flex>\n          </Select.ItemText>\n        </Select.Item>\n      ))}\n    </Select>\n  )\n}\n","import React, { FC } from 'react'\nimport { Flex, Box } from '../../primitives'\nimport Token from './Token'\nimport Stat from '../Stat'\nimport ListingStat from './ListingStat'\nimport { useTokens, useCollections } from '../../hooks'\nimport { ListingData } from './ListModalRenderer'\nimport { Currency } from '../../types/Currency'\n\ntype Props = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>['0']\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  listingData: ListingData[]\n  currency: Currency\n}\n\nconst TokenListingDetails: FC<Props> = ({\n  token,\n  collection,\n  listingData,\n  currency,\n}) => (\n  <Flex\n    css={{\n      width: '100%',\n      flexDirection: 'row',\n      '@bp1': {\n        width: 220,\n        flexDirection: 'column',\n      },\n      p: '$4',\n    }}\n  >\n    <Token collection={collection} token={token} />\n    <Box\n      css={{\n        flex: 1,\n        mt: '$4',\n        [`& ${Stat}:not(:last-child)`]: {\n          mb: '$1',\n        },\n        mb: '$3',\n      }}\n    >\n      {listingData.map((data, i) => (\n        <ListingStat\n          key={i}\n          listing={data.listing}\n          marketImg={data.marketplace.imageUrl || ''}\n          currency={currency}\n        />\n      ))}\n    </Box>\n  </Flex>\n)\n\nexport default TokenListingDetails\n","import React, { FC } from 'react'\nimport { Flex, Text, FormatCryptoCurrency } from '../../primitives'\nimport { styled } from '../../../stitches.config'\nimport { Listings } from './ListModalRenderer'\nimport { useTimeSince } from '../../hooks'\nimport { Currency } from '../../types/Currency'\n\nconst Img = styled('img', {\n  width: 16,\n  height: 16,\n})\n\ntype Props = {\n  listing: Listings[0]\n  marketImg: string\n  currency: Currency\n}\n\nconst ListingStat: FC<Props> = ({ listing, marketImg, currency, ...props }) => {\n  const timeSince = useTimeSince(\n    listing.expirationTime ? +listing.expirationTime : 0\n  )\n\n  return (\n    <Flex\n      direction=\"column\"\n      className=\"rk-stat-well\"\n      css={{\n        backgroundColor: '$wellBackground',\n        p: '$2',\n        borderRadius: '$borderRadius',\n        gap: '$1',\n      }}\n      {...props}\n    >\n      <Flex justify=\"between\">\n        <FormatCryptoCurrency\n          amount={listing.weiPrice}\n          textStyle=\"subtitle2\"\n          address={currency.contract}\n          decimals={currency.decimals}\n          symbol={currency?.symbol}\n        />\n        <Img src={marketImg} />\n      </Flex>\n      <Text style=\"subtitle2\" color=\"subtle\" as=\"p\" css={{ flex: 1 }}>\n        {listing.expirationTime ? `Expires ${timeSince}` : 'No Expiration'}\n      </Text>\n    </Flex>\n  )\n}\n\nListingStat.toString = () => '.rk-stat-well'\n\nexport default ListingStat\n","import { useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime.js'\n\ndayjs.extend(relativeTime)\n\nexport default function (timestamp?: number) {\n  const [timeSince, setTimeSince] = useState('')\n\n  useEffect(() => {\n    if (timestamp) {\n      setTimeSince(dayjs.unix(timestamp).fromNow())\n    } else {\n      setTimeSince('')\n    }\n  }, [timestamp])\n\n  return timeSince\n}\n","import { Box, Flex } from '../primitives'\nimport React, { FC, ComponentPropsWithoutRef } from 'react'\nimport { styled, keyframes } from '../../stitches.config'\n\ntype Props = {\n  fromImg: string\n  toImgs: string[]\n} & ComponentPropsWithoutRef<typeof Flex>\n\nconst Img = styled('img', {\n  width: 56,\n  height: 56,\n  borderRadius: 4,\n  objectFit: 'cover',\n  '& + img': {\n    ml: -20,\n  },\n})\n\nconst ProgressDot = styled(Box, {\n  borderRadius: '50%',\n  width: 5,\n  height: 5,\n})\n\nconst loadingStart = keyframes({\n  '0%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n  '20%': { transform: 'scale(1)', backgroundColor: '$accentText' },\n  '100%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n})\n\nconst loadingMiddle = keyframes({\n  '0%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n  '20%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n  '40%': { transform: 'scale(1)', backgroundColor: '$accentText' },\n  '100%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n})\n\nconst loadingEnd = keyframes({\n  '0%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n  '40%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n  '60%': { transform: 'scale(1)', backgroundColor: '$accentText' },\n  '100%': { transform: 'scale(0.8)', backgroundColor: '$neutralSolid' },\n})\n\nconst TransactionProgress: FC<Props> = ({ fromImg, toImgs, ...props }) => {\n  return (\n    <Flex {...props} align=\"center\">\n      <Img src={fromImg} />\n      <Flex css={{ gap: '$1', mx: 23 }}>\n        <ProgressDot\n          css={{ animation: `${loadingStart} 1s ease-in-out infinite` }}\n        />\n        <ProgressDot\n          css={{ animation: `${loadingMiddle} 1s ease-in-out infinite` }}\n        />\n        <ProgressDot\n          css={{ animation: `${loadingEnd} 1s ease-in-out infinite` }}\n        />\n      </Flex>\n      {toImgs.map((src, i) => (\n        <Img key={i} src={src} />\n      ))}\n    </Flex>\n  )\n}\n\nexport default TransactionProgress\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Flex, Text } from '../primitives'\nimport React, { FC } from 'react'\nimport { faPenNib } from '@fortawesome/free-solid-svg-icons'\nimport { CSS } from '@stitches/react'\n\ntype Props = {\n  css: CSS\n}\n\nconst SigninStep: FC<Props> = ({ css }) => {\n  return (\n    <Flex\n      css={{ color: '$neutralText', ...css }}\n      direction=\"column\"\n      justify=\"center\"\n      align=\"center\"\n    >\n      <Text style=\"h6\" color=\"base\" css={{ mb: '$2', textAlign: 'center' }}>\n        Sign in to Blur\n      </Text>\n      <Text\n        style=\"subtitle2\"\n        color=\"subtle\"\n        css={{ mb: 20, textAlign: 'center' }}\n      >\n        This is a one-time approval process that takes place once a month\n      </Text>\n      <FontAwesomeIcon\n        icon={faPenNib}\n        width={32}\n        height={32}\n        style={{ height: 32 }}\n      />\n    </Flex>\n  )\n}\n\nexport default SigninStep\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useRef,\n  Dispatch,\n  SetStateAction,\n  useContext,\n} from 'react'\nimport { styled } from '../../../stitches.config'\nimport {\n  Flex,\n  Text,\n  FormatWrappedCurrency,\n  Box,\n  Input,\n  Select,\n  DateInput,\n  Button,\n  ErrorWell,\n  Loader,\n  FormatCurrency,\n  FormatCryptoCurrency,\n  CryptoCurrencyIcon,\n} from '../../primitives'\n\nimport { Modal, ModalSize } from '../Modal'\nimport {\n  BidModalRenderer,\n  BidStep,\n  BidData,\n  Trait,\n  BidModalStepData,\n} from './BidModalRenderer'\nimport TokenStats from './TokenStats'\nimport dayjs from 'dayjs'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCalendar,\n  faClose,\n  faChevronDown,\n  faCheckCircle,\n} from '@fortawesome/free-solid-svg-icons'\nimport Flatpickr from 'react-flatpickr'\nimport TransactionProgress from '../TransactionProgress'\nimport ProgressBar from '../ProgressBar'\nimport getLocalMarketplaceData from '../../lib/getLocalMarketplaceData'\nimport TransactionBidDetails from './TransactionBidDetails'\nimport AttributeSelector from './AttributeSelector'\nimport Popover from '../../primitives/Popover'\nimport PseudoInput from '../../primitives/PseudoInput'\nimport { useFallbackState } from '../../hooks'\nimport { Currency } from '../../types/Currency'\nimport { CurrencySelector } from '../CurrencySelector'\nimport { ProviderOptionsContext } from '../../ReservoirKitProvider'\nimport { CSS } from '@stitches/react'\nimport QuantitySelector from '../QuantitySelector'\n\ntype BidCallbackData = {\n  tokenId?: string\n  collectionId?: string\n  bidData: BidData | null\n}\n\nconst ModalCopy = {\n  titleSetPrice: 'Make an Offer',\n  titleConfirm: 'Complete Offer',\n  titleComplete: 'Offer Submitted',\n  ctaBidDisabled: 'Enter a Price',\n  ctaBid: '',\n  ctaConvertManually: 'Convert Manually',\n  ctaConvertAutomatically: '',\n  ctaAwaitingApproval: 'Waiting for Approval',\n  ctaEditOffer: 'Edit Offer',\n  ctaRetry: 'Retry',\n  ctaViewOffers: 'View Offers',\n  ctaClose: 'Close',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  tokenId?: string\n  collectionId?: string\n  attribute?: Trait\n  normalizeRoyalties?: boolean\n  currencies?: Currency[]\n  oracleEnabled?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  feesBps?: string[] | null\n  onViewOffers?: () => void\n  onClose?: (\n    data: BidCallbackData,\n    stepData: BidModalStepData | null,\n    currentStep: BidStep\n  ) => void\n  onBidComplete?: (data: any) => void\n  onBidError?: (error: Error, data: any) => void\n}\n\nfunction titleForStep(step: BidStep, copy: typeof ModalCopy) {\n  switch (step) {\n    case BidStep.SetPrice:\n      return copy.titleSetPrice\n    case BidStep.Offering:\n      return copy.titleConfirm\n    case BidStep.Complete:\n      return copy.titleComplete\n  }\n}\n\nconst ContentContainer = styled(Flex, {\n  width: '100%',\n  flexDirection: 'column',\n  '@bp1': {\n    flexDirection: 'row',\n  },\n  borderColor: '$borderColor',\n})\n\nconst MainContainer = styled(Flex, {\n  flex: 1,\n  borderColor: '$borderColor',\n  borderTopWidth: 1,\n  borderLeftWidth: 0,\n  '@bp1': {\n    borderTopWidth: 0,\n    borderLeftWidth: 1,\n  },\n\n  defaultVariants: {\n    direction: 'column',\n  },\n})\n\nconst minimumDate = dayjs().add(1, 'h').format('MM/DD/YYYY h:mm A')\nexport function BidModal({\n  openState,\n  trigger,\n  tokenId,\n  collectionId,\n  attribute,\n  normalizeRoyalties,\n  currencies,\n  oracleEnabled = false,\n  copyOverrides,\n  feesBps,\n  onViewOffers,\n  onClose,\n  onBidComplete,\n  onBidError,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n\n  const datetimeElement = useRef<Flatpickr | null>(null)\n  const [stepTitle, setStepTitle] = useState('')\n  const [localMarketplace, setLocalMarketplace] = useState<ReturnType<\n    typeof getLocalMarketplaceData\n  > | null>(null)\n  const [attributesSelectable, setAttributesSelectable] = useState(false)\n\n  useEffect(() => {\n    setLocalMarketplace(getLocalMarketplaceData())\n  }, [])\n  const [attributeSelectorOpen, setAttributeSelectorOpen] = useState(false)\n\n  return (\n    <BidModalRenderer\n      open={open}\n      tokenId={tokenId}\n      collectionId={collectionId}\n      attribute={attribute}\n      normalizeRoyalties={normalizeRoyalties}\n      oracleEnabled={oracleEnabled}\n      currencies={currencies}\n      feesBps={feesBps}\n    >\n      {({\n        token,\n        collection,\n        attributes,\n        bidStep,\n        expirationOption,\n        expirationOptions,\n        wrappedBalance,\n        wrappedContractName,\n        wrappedContractAddress,\n        bidAmountPerUnit,\n        totalBidAmount,\n        totalBidAmountUsd,\n        quantity,\n        setQuantity,\n        hasEnoughNativeCurrency,\n        hasEnoughWrappedCurrency,\n        amountToWrap,\n        balance,\n        convertLink,\n        canAutomaticallyConvert,\n        transactionError,\n        stepData,\n        bidData,\n        currencies,\n        currency,\n        setCurrency,\n        setBidAmountPerUnit,\n        setExpirationOption,\n        setBidStep,\n        setTrait,\n        trait,\n        placeBid,\n      }) => {\n        const [expirationDate, setExpirationDate] = useState('')\n\n        const tokenCount = collection?.tokenCount\n          ? +collection.tokenCount\n          : undefined\n\n        const itemImage =\n          token && token.token?.imageSmall\n            ? token.token?.imageSmall\n            : (collection?.image as string)\n\n        const providerOptionsContext = useContext(ProviderOptionsContext)\n\n        const quantityEnabled = !tokenId || token?.token?.kind === 'erc1155'\n\n        useEffect(() => {\n          if (stepData) {\n            switch (stepData.currentStep.kind) {\n              case 'signature': {\n                setStepTitle('Confirm Offer')\n                break\n              }\n              default: {\n                setStepTitle(stepData.currentStep.action)\n                break\n              }\n            }\n          }\n        }, [stepData])\n\n        useEffect(() => {\n          if (expirationOption && expirationOption.relativeTime) {\n            const newExpirationTime = expirationOption.relativeTimeUnit\n              ? dayjs().add(\n                  expirationOption.relativeTime,\n                  expirationOption.relativeTimeUnit\n                )\n              : dayjs.unix(expirationOption.relativeTime)\n            setExpirationDate(newExpirationTime.format('MM/DD/YYYY h:mm A'))\n          } else {\n            setExpirationDate('')\n          }\n        }, [expirationOption])\n\n        useEffect(() => {\n          if (bidStep === BidStep.Complete && onBidComplete) {\n            const data: BidCallbackData = {\n              tokenId: tokenId,\n              collectionId: collectionId,\n              bidData,\n            }\n            onBidComplete(data)\n          }\n        }, [bidStep])\n\n        useEffect(() => {\n          if (transactionError && onBidError) {\n            const data: BidCallbackData = {\n              tokenId: tokenId,\n              collectionId: collectionId,\n              bidData,\n            }\n            onBidError(transactionError, data)\n          }\n        }, [transactionError])\n\n        useEffect(() => {\n          if (open && attributes && !tokenId && attribute) {\n            setTrait(attribute)\n          } else {\n            setTrait(undefined)\n          }\n\n          if (open && attributes && !tokenId) {\n            let attributeCount = 0\n            for (let i = 0; i < attributes.length; i++) {\n              attributeCount += attributes[i].attributeCount || 0\n              if (attributeCount >= 2000) {\n                break\n              }\n            }\n            if (attributeCount >= 2000) {\n              setAttributesSelectable(false)\n            } else {\n              setAttributesSelectable(true)\n            }\n          } else {\n            setAttributesSelectable(false)\n          }\n        }, [open, attributes])\n\n        const contentContainerCss: CSS = {\n          borderBottomWidth: providerOptionsContext.disablePoweredByReservoir\n            ? 0\n            : 1,\n          marginBottom: providerOptionsContext.disablePoweredByReservoir\n            ? 0\n            : 12,\n        }\n\n        return (\n          <Modal\n            size={bidStep !== BidStep.Complete ? ModalSize.LG : ModalSize.MD}\n            trigger={trigger}\n            title={titleForStep(bidStep, copy)}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data: BidCallbackData = {\n                  tokenId: tokenId,\n                  collectionId: collectionId,\n                  bidData,\n                }\n                onClose(data, stepData, bidStep)\n              }\n\n              setOpen(open)\n            }}\n            loading={!collection}\n            onPointerDownOutside={(e) => {\n              if (\n                e.target instanceof Element &&\n                datetimeElement.current?.flatpickr?.calendarContainer &&\n                datetimeElement.current.flatpickr.calendarContainer.contains(\n                  e.target\n                )\n              ) {\n                e.preventDefault()\n              }\n            }}\n            onFocusCapture={(e) => {\n              e.stopPropagation()\n            }}\n          >\n            {bidStep === BidStep.SetPrice && collection && (\n              <ContentContainer\n                css={{\n                  ...contentContainerCss,\n                }}\n              >\n                <TokenStats\n                  token={token ? token : undefined}\n                  collection={collection}\n                  trait={trait}\n                />\n                <MainContainer css={{ p: '$4' }}>\n                  <Flex justify=\"between\">\n                    <Text style=\"tiny\" color=\"subtle\">\n                      Offer Amount {quantityEnabled ? 'and Quantity' : null}\n                    </Text>\n                    <Text\n                      as={Flex}\n                      css={{ gap: '$1' }}\n                      align=\"center\"\n                      style=\"tiny\"\n                    >\n                      Balance:{' '}\n                      <FormatWrappedCurrency\n                        logoWidth={10}\n                        textStyle=\"tiny\"\n                        amount={wrappedBalance?.value}\n                        address={wrappedContractAddress}\n                        decimals={wrappedBalance?.decimals}\n                        symbol={wrappedBalance?.symbol}\n                      />{' '}\n                    </Text>\n                  </Flex>\n                  <Flex css={{ mt: '$2', gap: quantityEnabled ? '$2' : 20 }}>\n                    <Text\n                      as={Flex}\n                      css={{ gap: '$2', '@bp1': { ml: '$3' }, flexShrink: 0 }}\n                      align=\"center\"\n                      style=\"body1\"\n                      color=\"subtle\"\n                    >\n                      {currencies.length > 1 ? (\n                        <CurrencySelector\n                          currency={currency}\n                          currencies={currencies}\n                          setCurrency={setCurrency}\n                          triggerCss={{ width: 90 }}\n                        />\n                      ) : (\n                        <>\n                          <CryptoCurrencyIcon\n                            css={{ height: 20 }}\n                            address={wrappedContractAddress}\n                          />\n                          {wrappedContractName}\n                        </>\n                      )}\n                    </Text>\n                    <Input\n                      type=\"number\"\n                      value={bidAmountPerUnit}\n                      onChange={(e) => {\n                        setBidAmountPerUnit(e.target.value)\n                      }}\n                      placeholder=\"Enter price\"\n                      containerCss={{\n                        width: '100%',\n                      }}\n                      css={{\n                        textAlign: 'center',\n                        '@bp1': {\n                          textAlign: 'left',\n                        },\n                      }}\n                    />\n                    {/* Quantity Selector on Desktop */}\n                    {quantityEnabled ? (\n                      <Flex\n                        css={{ display: 'none', '@bp1': { display: 'flex' } }}\n                      >\n                        <QuantitySelector\n                          quantity={quantity}\n                          setQuantity={setQuantity}\n                          min={1}\n                          max={999999}\n                          css={{\n                            maxWidth: 180,\n                          }}\n                        />\n                      </Flex>\n                    ) : null}\n                  </Flex>\n                  {/* Quantity Selector on Mobile Devices */}\n                  {quantityEnabled ? (\n                    <Flex\n                      align=\"center\"\n                      css={{\n                        width: '100%',\n                        display: 'flex',\n                        mt: '$2',\n                        gap: '$2',\n                        '@bp1': { display: 'none' },\n                      }}\n                    >\n                      <Text\n                        style=\"subtitle2\"\n                        color=\"subtle\"\n                        css={{ width: 90, flexShrink: 0 }}\n                      >\n                        Quantity\n                      </Text>\n                      <QuantitySelector\n                        quantity={quantity}\n                        setQuantity={setQuantity}\n                        min={1}\n                        max={999999}\n                        css={{ justifyContent: 'space-between', width: '100%' }}\n                      />\n                    </Flex>\n                  ) : null}\n                  {quantityEnabled ? (\n                    <Flex\n                      align=\"center\"\n                      css={{ gap: '$2', mt: '$3', mb: '$4' }}\n                    >\n                      <Text style=\"subtitle2\" color=\"subtle\">\n                        Total Offer Price\n                      </Text>\n                      <FormatWrappedCurrency\n                        logoWidth={16}\n                        textStyle=\"subtitle2\"\n                        amount={totalBidAmount}\n                        address={currency?.contract}\n                        decimals={currency?.decimals}\n                        symbol={currency?.symbol}\n                      />\n                      <FormatCurrency\n                        style=\"tiny\"\n                        color=\"subtle\"\n                        amount={totalBidAmountUsd}\n                      />\n                    </Flex>\n                  ) : (\n                    <FormatCurrency\n                      css={{\n                        marginLeft: 'auto',\n                        mt: '$2',\n                        display: 'inline-block',\n                        minHeight: 15,\n                      }}\n                      style=\"tiny\"\n                      amount={totalBidAmountUsd}\n                    />\n                  )}\n                  {attributes &&\n                    attributes.length > 0 &&\n                    (attributesSelectable || trait) &&\n                    !tokenId && (\n                      <>\n                        <Text\n                          as={Box}\n                          css={{ mb: '$2' }}\n                          style=\"tiny\"\n                          color=\"subtle\"\n                        >\n                          Attributes\n                        </Text>\n                        <Popover.Root\n                          open={attributeSelectorOpen}\n                          onOpenChange={\n                            attributesSelectable\n                              ? setAttributeSelectorOpen\n                              : undefined\n                          }\n                        >\n                          <Popover.Trigger asChild>\n                            <PseudoInput>\n                              <Flex\n                                justify=\"between\"\n                                css={{\n                                  gap: '$2',\n                                  alignItems: 'center',\n                                  color: '$neutralText',\n                                }}\n                              >\n                                {trait ? (\n                                  <>\n                                    <Box\n                                      css={{\n                                        maxWidth: 385,\n                                        overflow: 'hidden',\n                                        textOverflow: 'ellipsis',\n                                        whiteSpace: 'nowrap',\n                                      }}\n                                    >\n                                      <Text color=\"accent\" style=\"subtitle1\">\n                                        {trait?.key}:{' '}\n                                      </Text>\n                                      <Text style=\"subtitle1\">\n                                        {trait?.value}\n                                      </Text>\n                                    </Box>\n                                    <Flex\n                                      css={{\n                                        alignItems: 'center',\n                                        gap: '$2',\n                                      }}\n                                    >\n                                      {trait?.floorAskPrice && (\n                                        <Box css={{ flex: 'none' }}>\n                                          <FormatCryptoCurrency\n                                            amount={trait?.floorAskPrice}\n                                            maximumFractionDigits={2}\n                                            logoWidth={11}\n                                          />\n                                        </Box>\n                                      )}\n                                      <FontAwesomeIcon\n                                        style={{\n                                          cursor: 'pointer',\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault()\n                                          setTrait(undefined)\n                                        }}\n                                        icon={faClose}\n                                        width={16}\n                                        height={16}\n                                      />\n                                    </Flex>\n                                  </>\n                                ) : (\n                                  <>\n                                    <Text\n                                      css={{\n                                        color: '$neutralText',\n                                      }}\n                                    >\n                                      All Attributes\n                                    </Text>\n                                    <FontAwesomeIcon\n                                      icon={faChevronDown}\n                                      width={16}\n                                      height={16}\n                                    />\n                                  </>\n                                )}\n                              </Flex>\n                            </PseudoInput>\n                          </Popover.Trigger>\n                          <Popover.Content sideOffset={-50}>\n                            <AttributeSelector\n                              attributes={attributes}\n                              tokenCount={tokenCount}\n                              setTrait={setTrait}\n                              setOpen={setAttributeSelectorOpen}\n                            />\n                          </Popover.Content>\n                        </Popover.Root>\n                      </>\n                    )}\n\n                  <Text\n                    as={Box}\n                    css={{ mt: '$4', mb: '$2' }}\n                    style=\"tiny\"\n                    color=\"subtle\"\n                  >\n                    Expiration Date\n                  </Text>\n                  <Flex css={{ gap: '$2', mb: '$4' }}>\n                    <Select\n                      css={{\n                        flex: 1,\n                        '@bp1': {\n                          width: 160,\n                          flexDirection: 'row',\n                        },\n                      }}\n                      value={expirationOption?.text || ''}\n                      onValueChange={(value: string) => {\n                        const option = expirationOptions.find(\n                          (option) => option.value == value\n                        )\n                        if (option) {\n                          setExpirationOption(option)\n                        }\n                      }}\n                    >\n                      {expirationOptions.map((option) => (\n                        <Select.Item key={option.text} value={option.value}>\n                          <Select.ItemText>{option.text}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select>\n                    <DateInput\n                      ref={datetimeElement}\n                      icon={\n                        <FontAwesomeIcon\n                          icon={faCalendar}\n                          width={14}\n                          height={16}\n                        />\n                      }\n                      value={expirationDate}\n                      options={{\n                        minDate: minimumDate,\n                        enableTime: true,\n                        minuteIncrement: 1,\n                      }}\n                      defaultValue={expirationDate}\n                      onChange={(e: any) => {\n                        if (Array.isArray(e)) {\n                          const customOption = expirationOptions.find(\n                            (option) => option.value === 'custom'\n                          )\n                          if (customOption) {\n                            setExpirationOption({\n                              ...customOption,\n                              relativeTime: e[0] / 1000,\n                            })\n                          }\n                        }\n                      }}\n                      containerCss={{\n                        width: 46,\n                        '@bp1': {\n                          flex: 1,\n                          width: '100%',\n                        },\n                      }}\n                      css={{\n                        padding: 0,\n                        '@bp1': {\n                          padding: '12px 16px 12px 48px',\n                        },\n                      }}\n                    />\n                  </Flex>\n                  <Box css={{ width: '100%', mt: 'auto' }}>\n                    {oracleEnabled && (\n                      <Text\n                        style=\"body2\"\n                        color=\"subtle\"\n                        css={{\n                          mb: 10,\n                          textAlign: 'center',\n                          width: '100%',\n                          display: 'block',\n                        }}\n                      >\n                        You can change or cancel your offer for free on{' '}\n                        {localMarketplace?.title}.\n                      </Text>\n                    )}\n                    {bidAmountPerUnit === '' && (\n                      <Button disabled={true} css={{ width: '100%' }}>\n                        {copy.ctaBidDisabled}\n                      </Button>\n                    )}\n                    {bidAmountPerUnit !== '' && hasEnoughWrappedCurrency && (\n                      <Button\n                        onClick={() => placeBid()}\n                        css={{ width: '100%' }}\n                      >\n                        {copy.ctaBid.length > 0\n                          ? copy.ctaBid\n                          : token && token.token\n                          ? 'Make an Offer'\n                          : trait\n                          ? 'Make an Attribute Offer'\n                          : 'Make a Collection Offer'}\n                      </Button>\n                    )}\n                    {bidAmountPerUnit !== '' && !hasEnoughWrappedCurrency && (\n                      <>\n                        {!hasEnoughNativeCurrency && (\n                          <Flex css={{ gap: '$2', mt: 10 }} justify=\"center\">\n                            <Text style=\"body3\" color=\"error\">\n                              {balance?.symbol || 'ETH'} Balance\n                            </Text>\n                            <FormatCryptoCurrency\n                              amount={balance?.value}\n                              symbol={balance?.symbol}\n                            />\n                          </Flex>\n                        )}\n                        <Flex\n                          css={{\n                            gap: '$2',\n                            mt: 10,\n                            overflow: 'hidden',\n                            flexDirection: 'column-reverse',\n                            '@bp1': {\n                              flexDirection: 'row',\n                            },\n                          }}\n                        >\n                          <Button\n                            css={{ flex: '1 0 auto' }}\n                            color=\"secondary\"\n                            onClick={() => {\n                              window.open(convertLink, '_blank')\n                            }}\n                          >\n                            {copy.ctaConvertManually}\n                          </Button>\n                          {canAutomaticallyConvert && (\n                            <Button\n                              css={{ flex: 1, maxHeight: 44 }}\n                              disabled={!hasEnoughNativeCurrency}\n                              onClick={() => placeBid()}\n                            >\n                              <Text style=\"h6\" color=\"button\" ellipsify>\n                                {copy.ctaConvertAutomatically.length > 0\n                                  ? copy.ctaConvertAutomatically\n                                  : `Convert ${amountToWrap} ${\n                                      balance?.symbol || 'ETH'\n                                    } for me`}\n                              </Text>\n                            </Button>\n                          )}\n                        </Flex>\n                      </>\n                    )}\n                  </Box>\n                </MainContainer>\n              </ContentContainer>\n            )}\n\n            {bidStep === BidStep.Offering && collection && (\n              <ContentContainer\n                css={{\n                  ...contentContainerCss,\n                }}\n              >\n                <TransactionBidDetails\n                  token={token ? token : undefined}\n                  collection={collection}\n                  bidData={bidData}\n                />\n                <MainContainer css={{ p: '$4' }}>\n                  <ProgressBar\n                    value={stepData?.stepProgress || 0}\n                    max={stepData?.totalSteps || 0}\n                  />\n                  {transactionError && <ErrorWell css={{ mt: 24 }} />}\n                  {stepData && (\n                    <>\n                      <Text\n                        css={{ textAlign: 'center', mt: 48, mb: 28 }}\n                        style=\"subtitle1\"\n                      >\n                        {stepTitle}\n                      </Text>\n                      {stepData.currentStep.kind === 'signature' && (\n                        <TransactionProgress\n                          justify=\"center\"\n                          fromImg={itemImage || ''}\n                          toImgs={[localMarketplace?.icon || '']}\n                        />\n                      )}\n                      {stepData.currentStep.kind !== 'signature' && (\n                        <Flex align=\"center\" justify=\"center\">\n                          <Flex\n                            css={{\n                              background: '$neutralLine',\n                              borderRadius: 8,\n                            }}\n                          >\n                            <CryptoCurrencyIcon\n                              css={{ height: 56, width: 56 }}\n                              address={wrappedContractAddress}\n                            />\n                          </Flex>\n                        </Flex>\n                      )}\n                      <Text\n                        css={{\n                          textAlign: 'center',\n                          mt: 24,\n                          maxWidth: 395,\n                          mx: 'auto',\n                          mb: '$4',\n                        }}\n                        style=\"body2\"\n                        color=\"subtle\"\n                      >\n                        {stepData?.currentStep.description}\n                      </Text>\n                    </>\n                  )}\n                  {!stepData && (\n                    <Flex\n                      css={{ height: '100%' }}\n                      justify=\"center\"\n                      align=\"center\"\n                    >\n                      <Loader />\n                    </Flex>\n                  )}\n                  {!transactionError && (\n                    <Button css={{ width: '100%', mt: 'auto' }} disabled={true}>\n                      <Loader />\n                      {copy.ctaAwaitingApproval}\n                    </Button>\n                  )}\n                  {transactionError && (\n                    <Flex css={{ mt: 'auto', gap: 10 }}>\n                      <Button\n                        color=\"secondary\"\n                        css={{ flex: 1 }}\n                        onClick={() => setBidStep(BidStep.SetPrice)}\n                      >\n                        {copy.ctaEditOffer}\n                      </Button>\n                      <Button css={{ flex: 1 }} onClick={() => placeBid()}>\n                        {copy.ctaRetry}\n                      </Button>\n                    </Flex>\n                  )}\n                </MainContainer>\n              </ContentContainer>\n            )}\n\n            {bidStep === BidStep.Complete && (\n              <Flex direction=\"column\" align=\"center\" css={{ p: '$4' }}>\n                <Box css={{ color: '$successAccent', mt: 48 }}>\n                  <FontAwesomeIcon\n                    icon={faCheckCircle}\n                    style={{ width: '32px', height: '32px' }}\n                  />\n                </Box>\n                <Text style=\"h5\" css={{ textAlign: 'center', mt: 36, mb: 80 }}>\n                  Offer Submitted!\n                </Text>\n                {onViewOffers ? (\n                  <Button\n                    css={{ width: '100%' }}\n                    onClick={() => {\n                      onViewOffers()\n                    }}\n                  >\n                    {copy.ctaViewOffers}\n                  </Button>\n                ) : (\n                  <Button\n                    css={{ width: '100%' }}\n                    onClick={() => {\n                      setOpen(false)\n                    }}\n                  >\n                    {copy.ctaClose}\n                  </Button>\n                )}\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </BidModalRenderer>\n  )\n}\n\nBidModal.Custom = BidModalRenderer\n","import { default as FlatpickrModule } from 'react-flatpickr'\nimport Input from './Input'\nimport React, {\n  ComponentPropsWithoutRef,\n  ComponentPropsWithRef,\n  ElementRef,\n  forwardRef,\n} from 'react'\n\n//@ts-ignore\nconst Flatpickr = FlatpickrModule.default\n\ntype FlatPickrProps = ComponentPropsWithoutRef<typeof Flatpickr>\n\ntype Props = Omit<ComponentPropsWithRef<typeof Input>, 'onChange' | 'value'> & {\n  onChange: FlatPickrProps['onChange']\n  value: FlatPickrProps['value']\n  defaultValue: FlatPickrProps['defaultValue']\n  options?: FlatPickrProps['options']\n}\n\nexport default forwardRef<ElementRef<typeof Flatpickr>, Props>(\n  ({ options, onChange, value, defaultValue, ...inputProps }, forwardedRef) => {\n    return (\n      <Flatpickr\n        ref={forwardedRef}\n        value={value}\n        options={{ dateFormat: 'm/d/Y h:i K', ...options }}\n        onChange={onChange}\n        defaultValue={defaultValue}\n        render={({ defaultValue }: any, ref: any) => {\n          return <Input {...inputProps} ref={ref} defaultValue={defaultValue} />\n        }}\n      />\n    )\n  }\n)\n","import React, {\n  FC,\n  useEffect,\n  useState,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport {\n  useTokens,\n  useCoinConversion,\n  useReservoirClient,\n  useCollections,\n  useAttributes,\n  useChainCurrency,\n} from '../../hooks'\nimport { useAccount, useBalance, useNetwork, useWalletClient } from 'wagmi'\nimport { mainnet, goerli } from 'wagmi/chains'\n\nimport { Execute, ReservoirClientActions } from '@reservoir0x/reservoir-sdk'\nimport { ExpirationOption } from '../../types/ExpirationOption'\nimport defaultExpirationOptions from '../../lib/defaultExpirationOptions'\nimport { formatBN } from '../../lib/numbers'\n\nimport dayjs from 'dayjs'\nimport wrappedContractNames from '../../constants/wrappedContractNames'\nimport wrappedContracts from '../../constants/wrappedContracts'\nimport { Currency } from '../../types/Currency'\nimport { parseUnits } from 'viem'\n\nconst expirationOptions = [\n  ...defaultExpirationOptions,\n  {\n    text: 'Custom',\n    value: 'custom',\n    relativeTime: null,\n    relativeTimeUnit: null,\n  },\n]\n\nexport type FetchBalanceResult = {\n  decimals: number\n  formatted: string\n  symbol: string\n  value: bigint\n}\n\nexport enum BidStep {\n  SetPrice,\n  Offering,\n  Complete,\n}\n\nexport type Traits =\n  | NonNullable<ReturnType<typeof useAttributes>['data']>\n  | undefined\n\nexport type Trait =\n  | {\n      key: string\n      value: string\n      floorAskPrice?: number\n    }\n  | undefined\n\ntype ChildrenProps = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>[0]\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  attributes?: Traits\n  bidAmountPerUnit: string\n  totalBidAmount: number\n  totalBidAmountUsd: number\n  quantity: number\n  setQuantity: React.Dispatch<React.SetStateAction<number>>\n  bidData: BidData | null\n  bidStep: BidStep\n  hasEnoughNativeCurrency: boolean\n  hasEnoughWrappedCurrency: boolean\n  amountToWrap: string\n  usdPrice: number | null\n  balance?: FetchBalanceResult\n  wrappedBalance?: FetchBalanceResult\n  wrappedContractName: string\n  wrappedContractAddress: string\n  canAutomaticallyConvert: boolean\n  convertLink: string\n  transactionError?: Error | null\n  expirationOptions: ExpirationOption[]\n  expirationOption: ExpirationOption\n  stepData: BidModalStepData | null\n  currencies: Currency[]\n  currency: Currency\n  feeBps?: number\n  setCurrency: (currency: Currency) => void\n  setBidStep: React.Dispatch<React.SetStateAction<BidStep>>\n  setBidAmountPerUnit: React.Dispatch<React.SetStateAction<string>>\n  setExpirationOption: React.Dispatch<React.SetStateAction<ExpirationOption>>\n  setTrait: React.Dispatch<React.SetStateAction<Trait>>\n  trait: Trait\n  placeBid: (options?: { quantity?: number }) => void\n}\n\ntype Props = {\n  open: boolean\n  tokenId?: string\n  collectionId?: string\n  attribute?: Trait\n  normalizeRoyalties?: boolean\n  currencies?: Currency[]\n  oracleEnabled: boolean\n  feesBps?: string[] | null\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport type BidData = Parameters<\n  ReservoirClientActions['placeBid']\n>['0']['bids'][0]\n\nexport type BidModalStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n}\n\nexport const BidModalRenderer: FC<Props> = ({\n  open,\n  tokenId,\n  collectionId,\n  attribute,\n  normalizeRoyalties,\n  currencies,\n  oracleEnabled = false,\n  feesBps,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const [bidStep, setBidStep] = useState<BidStep>(BidStep.SetPrice)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [bidAmountPerUnit, setBidAmountPerUnit] = useState<string>('')\n  const [quantity, setQuantity] = useState(1)\n  const [expirationOption, setExpirationOption] = useState<ExpirationOption>(\n    expirationOptions[3]\n  )\n  const [hasEnoughNativeCurrency, setHasEnoughNativeCurrency] = useState(false)\n  const [hasEnoughWrappedCurrency, setHasEnoughWrappedCurrency] =\n    useState(false)\n  const [amountToWrap, setAmountToWrap] = useState('')\n  const [stepData, setStepData] = useState<BidModalStepData | null>(null)\n  const [bidData, setBidData] = useState<BidData | null>(null)\n  const contract = collectionId ? collectionId?.split(':')[0] : undefined\n  const [trait, setTrait] = useState<Trait>(attribute)\n  const [attributes, setAttributes] = useState<Traits>()\n  const chainCurrency = useChainCurrency()\n\n  const nativeWrappedContractAddress =\n    chainCurrency.chainId in wrappedContracts\n      ? wrappedContracts[chainCurrency.chainId]\n      : wrappedContracts[1]\n  const nativeWrappedContractName =\n    chainCurrency.chainId in wrappedContractNames\n      ? wrappedContractNames[chainCurrency.chainId]\n      : wrappedContractNames[1]\n\n  const defaultCurrency = {\n    contract: nativeWrappedContractAddress,\n    symbol: nativeWrappedContractName,\n  }\n  const [currency, setCurrency] = useState<Currency>(\n    currencies && currencies[0] ? currencies[0] : defaultCurrency\n  )\n\n  const wrappedContractAddress = currency\n    ? currency.contract\n    : nativeWrappedContractAddress\n  const wrappedContractName = currency\n    ? currency.symbol\n    : nativeWrappedContractName\n\n  const { data: tokens } = useTokens(\n    open &&\n      tokenId !== undefined && {\n        tokens: [`${contract}:${tokenId}`],\n        includeTopBid: true,\n        normalizeRoyalties,\n      },\n    {\n      revalidateFirstPage: true,\n    }\n  )\n\n  const { data: traits } = useAttributes(\n    open && !tokenId ? collectionId : undefined\n  )\n\n  const { data: collections } = useCollections(\n    open && {\n      id: collectionId,\n      includeTopBid: true,\n      normalizeRoyalties,\n    }\n  )\n\n  const collection = collections && collections[0] ? collections[0] : undefined\n\n  const token = tokens && tokens.length > 0 ? tokens[0] : undefined\n  const usdConversion = useCoinConversion(\n    open ? 'USD' : undefined,\n    wrappedContractName\n  )\n  const usdPrice = usdConversion.length > 0 ? usdConversion[0].price : null\n  const totalBidAmount = Number(bidAmountPerUnit) * Math.max(1, quantity)\n  const totalBidAmountUsd = totalBidAmount * (usdPrice || 0)\n\n  const client = useReservoirClient()\n\n  const { address } = useAccount()\n  const { data: balance } = useBalance({\n    address: address,\n    watch: open,\n    chainId: client?.currentChain()?.id,\n  })\n\n  const { data: wrappedBalance } = useBalance({\n    token: wrappedContractAddress as any,\n    address: address,\n    watch: open,\n    chainId: client?.currentChain()?.id,\n  })\n\n  const { chain } = useNetwork()\n  const canAutomaticallyConvert =\n    !currency || currency.contract === nativeWrappedContractAddress\n  let convertLink: string = ''\n\n  if (canAutomaticallyConvert) {\n    convertLink =\n      chain?.id === mainnet.id || chain?.id === goerli.id\n        ? `https://app.uniswap.org/#/swap?theme=dark&exactAmount=${amountToWrap}&chain=${\n            chain?.network || 'mainnet'\n          }&inputCurrency=eth&outputCurrency=${wrappedContractAddress}`\n        : `https://app.uniswap.org/#/swap?theme=dark&exactAmount=${amountToWrap}`\n  } else {\n    convertLink = `https://jumper.exchange/?toChain=${chain?.id}&toToken=${wrappedContractAddress}`\n  }\n\n  const feeBps: number | undefined = useMemo(() => {\n    let bpsFees = feesBps || client?.marketplaceFees\n    if (bpsFees) {\n      return bpsFees.reduce((total, fee) => {\n        const bps = Number(fee.split(':')[1])\n        total += bps\n        return total\n      }, 0)\n    }\n  }, [feesBps, client?.marketplaceFees, currency])\n\n  useEffect(() => {\n    if (totalBidAmount !== 0) {\n      const bid = parseUnits(\n        `${totalBidAmount}`,\n        wrappedBalance?.decimals || 18\n      )\n\n      if (!wrappedBalance?.value || wrappedBalance?.value < bid) {\n        setHasEnoughWrappedCurrency(false)\n        const wrappedAmount = wrappedBalance?.value || 0n\n        const amountToWrap = bid - wrappedAmount\n        setAmountToWrap(formatBN(amountToWrap, 5))\n\n        if (!balance?.value || balance.value < amountToWrap) {\n          setHasEnoughNativeCurrency(false)\n        } else {\n          setHasEnoughNativeCurrency(true)\n        }\n      } else {\n        setHasEnoughWrappedCurrency(true)\n        setHasEnoughNativeCurrency(true)\n        setAmountToWrap('')\n      }\n    } else {\n      setHasEnoughNativeCurrency(true)\n      setHasEnoughWrappedCurrency(true)\n      setAmountToWrap('')\n    }\n  }, [totalBidAmount, balance, wrappedBalance])\n\n  useEffect(() => {\n    const validAttributes = traits\n      ? traits.filter(\n          (attribute) => attribute.values && attribute.values.length > 0\n        )\n      : undefined\n    setAttributes(validAttributes)\n  }, [traits])\n\n  useEffect(() => {\n    const validAttributes = traits\n      ? traits.filter(\n          (attribute) => attribute.values && attribute.values.length > 0\n        )\n      : undefined\n    setAttributes(validAttributes)\n  }, [traits])\n\n  useEffect(() => {\n    if (!open) {\n      setBidStep(BidStep.SetPrice)\n      setExpirationOption(expirationOptions[3])\n      setHasEnoughNativeCurrency(false)\n      setHasEnoughWrappedCurrency(false)\n      setAmountToWrap('')\n      setBidAmountPerUnit('')\n      setQuantity(1)\n      setStepData(null)\n      setBidData(null)\n      setTransactionError(null)\n      setTrait(undefined)\n    } else {\n      setTrait(attribute)\n    }\n    setCurrency(currencies && currencies[0] ? currencies[0] : defaultCurrency)\n  }, [open])\n\n  useEffect(() => {\n    if (currencies && currencies.length > 5) {\n      console.warn(\n        'The BidModal UI was designed to have a maximum of 5 currencies, going above 5 may degrade the user experience.'\n      )\n    }\n  }, [currencies])\n\n  const placeBid = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!tokenId && !collectionId) {\n      const error = new Error('Missing tokenId and collectionId')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    setBidStep(BidStep.Offering)\n    setTransactionError(null)\n    setBidData(null)\n\n    const atomicBidAmount = parseUnits(\n      `${totalBidAmount}`,\n      currency?.decimals || 18\n    ).toString()\n\n    const bid: BidData = {\n      weiPrice: atomicBidAmount,\n      orderbook: 'reservoir',\n      orderKind: 'seaport',\n      attributeKey: trait?.key,\n      attributeValue: trait?.value,\n    }\n\n    if (feesBps && feesBps?.length > 0) {\n      bid.fees = feesBps\n    } else if (!feesBps) {\n      delete bid.fees\n    }\n\n    if (currency) {\n      bid.currency = currency.contract\n    }\n\n    if (tokenId && collectionId) {\n      const contract = collectionId ? collectionId?.split(':')[0] : undefined\n      bid.token = `${contract}:${tokenId}`\n    } else if (collectionId) {\n      bid.collection = collectionId\n    }\n\n    if (expirationOption.relativeTime) {\n      if (expirationOption.relativeTimeUnit) {\n        bid.expirationTime = dayjs()\n          .add(expirationOption.relativeTime, expirationOption.relativeTimeUnit)\n          .unix()\n          .toString()\n      } else {\n        bid.expirationTime = `${expirationOption.relativeTime}`\n      }\n    }\n\n    if (oracleEnabled) {\n      bid.options = {\n        'seaport-v1.4': {\n          useOffChainCancellation: true,\n        },\n      }\n    }\n\n    if (quantity > 1) {\n      bid.quantity = quantity\n    }\n\n    setBidData(bid)\n\n    client.actions\n      .placeBid({\n        wallet,\n        bids: [bid],\n        onProgress: (steps: Execute['steps']) => {\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n          let incompleteStepItemIndex: number | null = null\n          let incompleteStepIndex: number | null = null\n\n          executableSteps.find((step, i) => {\n            if (!step.items) {\n              return false\n            }\n\n            incompleteStepItemIndex = step.items.findIndex(\n              (item) => item.status == 'incomplete'\n            )\n            if (incompleteStepItemIndex !== -1) {\n              incompleteStepIndex = i\n              return true\n            }\n          })\n\n          if (incompleteStepIndex !== null) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: incompleteStepIndex,\n              currentStep: executableSteps[incompleteStepIndex],\n            })\n          } else {\n            setBidStep(BidStep.Complete)\n          }\n        },\n      })\n      .catch((e: any) => {\n        //@ts-ignore\n        const transactionError = new Error(e?.message || '', {\n          cause: e,\n        })\n        setTransactionError(transactionError)\n      })\n  }, [\n    tokenId,\n    collectionId,\n    currency,\n    client,\n    wallet,\n    totalBidAmount,\n    expirationOption,\n    trait,\n    quantity,\n    feesBps,\n  ])\n\n  return (\n    <>\n      {children({\n        token,\n        collection,\n        attributes,\n        usdPrice,\n        balance,\n        wrappedBalance,\n        wrappedContractName,\n        wrappedContractAddress,\n        convertLink,\n        canAutomaticallyConvert,\n        bidAmountPerUnit,\n        totalBidAmount,\n        quantity,\n        setQuantity,\n        bidData,\n        totalBidAmountUsd,\n        bidStep,\n        hasEnoughNativeCurrency,\n        hasEnoughWrappedCurrency,\n        amountToWrap,\n        transactionError,\n        expirationOption,\n        expirationOptions,\n        stepData,\n        currencies: currencies || [defaultCurrency],\n        currency,\n        feeBps,\n        setCurrency,\n        setBidStep,\n        setBidAmountPerUnit,\n        setExpirationOption,\n        setTrait,\n        trait,\n        placeBid,\n      })}\n    </>\n  )\n}\n","const wrappedContractNames: Record<number, string> = {\n  1: 'WETH', //mainnet\n  5: 'WETH', //goerli\n  10: 'WETH', //optimism\n  56: 'WBNB', //bnb\n  137: 'WMATIC', //polygon\n  42161: 'WETH', //arbitrum\n  999: 'WETH', //zoratestnet\n  80001: 'WMATIC', //mumbai\n  84531: 'WETH', //base goerli\n  534353: 'WETH', //scrolltestnet\n  7777777: 'WETH', //zora\n  11155111: 'WETH', //sepolia\n}\nexport default wrappedContractNames\n","import React, { ComponentPropsWithoutRef, FC } from 'react'\nimport { Flex, Box, Grid, Text } from '../../primitives'\nimport TokenStatsHeader from './TokenStatsHeader'\nimport Stat from '../Stat'\nimport { useTokens, useCollections } from '../../hooks'\nimport InfoTooltip from '../../primitives/InfoTooltip'\nimport { Trait } from './BidModalRenderer'\nimport SelectedAttribute from './SelectedAttribute'\n\ntype Props = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>['0']\n  collection: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  trait?: Trait\n}\n\nconst TokenStats: FC<Props> = ({ token, collection, trait }) => {\n  let stats: (ComponentPropsWithoutRef<typeof Stat> & { id: number })[] = []\n\n  stats.push(\n    {\n      id: 0,\n      label: (\n        <>\n          <Text\n            style=\"subtitle2\"\n            color=\"subtle\"\n            css={{ minWidth: '0' }}\n            ellipsify\n          >\n            Creator Royalties\n          </Text>\n          <InfoTooltip\n            side=\"right\"\n            width={200}\n            content={\n              'A fee on every order that goes to the collection creator.'\n            }\n          />\n        </>\n      ),\n      value: (collection?.royalties?.bps || 0) * 0.01 + '%',\n    },\n    {\n      id: 1,\n      label: (\n        <Text\n          style=\"subtitle2\"\n          color=\"subtle\"\n          css={{ minWidth: '0' }}\n          ellipsify\n        >\n          Highest Offer\n        </Text>\n      ),\n      value: token\n        ? token.market?.topBid?.price?.amount?.decimal || null\n        : collection?.topBid?.price?.amount?.decimal || null,\n      address: token\n        ? token?.market?.topBid?.price?.currency?.contract\n        : collection?.topBid?.price?.currency?.contract,\n      symbol: token\n        ? token?.market?.topBid?.price?.currency?.symbol\n        : collection?.topBid?.price?.currency?.symbol,\n      asWrapped: true,\n    }\n  )\n\n  if (token) {\n    stats.push({\n      id: 2,\n      label: (\n        <Text\n          style=\"subtitle2\"\n          color=\"subtle\"\n          css={{ minWidth: '0' }}\n          ellipsify\n        >\n          List Price\n        </Text>\n      ),\n      value: token.market?.floorAsk?.price?.amount?.decimal || null,\n      symbol: token?.market?.floorAsk?.price?.currency?.symbol,\n      address: token?.market?.floorAsk?.price?.currency?.contract,\n      asNative: true,\n    })\n  } else if (!token && collection) {\n    stats.push({\n      id: 2,\n      label: (\n        <Text\n          style=\"subtitle2\"\n          color=\"subtle\"\n          css={{ minWidth: '0' }}\n          ellipsify\n        >\n          Floor\n        </Text>\n      ),\n      value: collection?.floorAsk?.price?.amount?.decimal || null,\n      symbol: collection?.floorAsk?.price?.currency?.symbol,\n      address: collection?.floorAsk?.price?.currency?.contract,\n      asNative: true,\n    })\n  }\n\n  return (\n    <Flex\n      css={{\n        width: '100%',\n        flexDirection: 'row',\n        '@bp1': {\n          width: 220,\n          flexDirection: 'column',\n        },\n        p: '$4',\n      }}\n    >\n      <TokenStatsHeader collection={collection} token={token} />\n      <Grid\n        css={{\n          flex: 1,\n          alignContent: 'start',\n          width: '100%',\n          gridTemplateColumns: 'repeat(1, minmax(0, 1fr))',\n        }}\n      >\n        <SelectedAttribute\n          attributeKey={trait?.key}\n          attributeValue={trait?.value}\n        />\n        <Box\n          css={{\n            flex: 1,\n            [`& ${Stat}:not(:last-child)`]: {\n              mb: '$1',\n            },\n          }}\n        >\n          {stats.map((stat) => (\n            <Stat key={stat.id} {...stat} />\n          ))}\n        </Box>\n      </Grid>\n    </Flex>\n  )\n}\n\nexport default TokenStats\n","import { useTokens, useCollections } from '../../hooks'\nimport React, { FC } from 'react'\nimport { styled } from '../../../stitches.config'\nimport { Box, Text } from '../../primitives'\nimport optimizeImage from '../../lib/optimizeImage'\n\nconst Img = styled('img', {\n  width: '100%',\n  '@bp1': {\n    height: 100,\n    width: 100,\n  },\n  borderRadius: '$borderRadius',\n})\n\ntype Props = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>['0']\n  collection: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n}\n\nconst TokenStatsHeader: FC<Props> = ({ token, collection }) => {\n  const img = token?.token?.imageSmall\n    ? token.token.imageSmall\n    : optimizeImage(collection?.image as string, 250)\n\n  return (\n    <Box\n      css={{\n        mr: '$4',\n        marginBottom: '$4',\n        width: 120,\n        '@bp1': {\n          mr: 0,\n          width: '100%',\n        },\n      }}\n    >\n      <Text\n        style=\"subtitle2\"\n        color=\"subtle\"\n        css={{ mb: '$1', display: 'block' }}\n      >\n        {token ? 'Item' : 'Collection'}\n      </Text>\n      <Img\n        src={img}\n        css={{\n          mb: '$2',\n          visibility: !img || img.length === 0 ? 'hidden' : 'visible',\n          objectFit: 'cover',\n        }}\n      />\n      <Text style=\"h6\" css={{ flex: 1 }} as=\"h6\" ellipsify>\n        {token?.token\n          ? token.token.name || `#${token.token.tokenId}`\n          : collection?.name}\n      </Text>\n      {token && (\n        <Box>\n          <Text style=\"subtitle2\" color=\"subtle\" as=\"p\" ellipsify>\n            {token?.token?.collection?.name}\n          </Text>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default TokenStatsHeader\n","import React, { FC } from 'react'\nimport { useMediaQuery } from '../../hooks'\nimport { Flex, Text } from '../../primitives'\n\ntype Props = {\n  attributeKey?: string\n  attributeValue?: string\n}\n\nconst SelectedAttribute: FC<Props> = ({ attributeKey, attributeValue }) => {\n  const isMobile = useMediaQuery('(max-width: 520px)')\n  if (!attributeKey || !attributeValue) return null\n  return (\n    <Flex\n      css={{\n        padding: '$2',\n        borderRadius: 4,\n        backgroundColor: '$neutralBgHover',\n        marginBottom: '$4',\n        overflow: 'hidden',\n        gap: '$1',\n        justifyContent: 'space-between',\n        maxWidth: '100%',\n        '@bp1': {\n          justifyContent: 'start',\n          width: 'fit-content',\n        },\n      }}\n    >\n      <Text color=\"accent\" style=\"subtitle2\">\n        {attributeKey}\n        {`${isMobile ? '' : ':'}`}\n      </Text>\n      <Text\n        style=\"subtitle2\"\n        css={{\n          maxWidth: 200,\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n        }}\n      >\n        {attributeValue}\n      </Text>\n    </Flex>\n  )\n}\n\nexport default SelectedAttribute\n","import React, { FC, useEffect, useState } from 'react'\nimport { Flex, Box, FormatWrappedCurrency, Text } from '../../primitives'\nimport TokenStatsHeader from './TokenStatsHeader'\nimport { useTokens, useCollections } from '../../hooks'\nimport { BidData } from './BidModalRenderer'\nimport { useTimeSince } from '../../hooks'\nimport SelectedAttribute from './SelectedAttribute'\nimport { formatEther } from 'viem'\n\ntype Props = {\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>['0']\n  collection: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  bidData: BidData | null\n}\n\nconst TransactionBidDetails: FC<Props> = ({ token, collection, bidData }) => {\n  const [value, setValue] = useState('')\n  const timeSince = useTimeSince(\n    bidData?.expirationTime ? +bidData.expirationTime : 0\n  )\n\n  useEffect(() => {\n    setValue(bidData ? formatEther(BigInt(bidData.weiPrice)) : '')\n  }, [bidData])\n\n  return (\n    <Flex\n      css={{\n        width: '100%',\n        flexDirection: 'row',\n        '@bp1': {\n          width: 220,\n          flexDirection: 'column',\n        },\n        p: '$4',\n      }}\n    >\n      <TokenStatsHeader collection={collection} token={token} />\n\n      <Box\n        css={{\n          flex: 1,\n          mb: '$3',\n        }}\n      >\n        <SelectedAttribute\n          attributeKey={bidData?.attributeKey}\n          attributeValue={bidData?.attributeValue}\n        />\n        <Flex\n          direction=\"column\"\n          className=\"rk-stat-well\"\n          css={{\n            backgroundColor: '$wellBackground',\n            p: '$2',\n            borderRadius: '$borderRadius',\n            gap: '$1',\n          }}\n        >\n          <Flex justify=\"between\">\n            <Text style=\"subtitle2\">Offer Price</Text>\n            <FormatWrappedCurrency\n              amount={+value}\n              textStyle=\"subtitle2\"\n              address={bidData?.currency}\n            />\n          </Flex>\n          <Text style=\"subtitle2\" color=\"subtle\" as=\"p\" css={{ flex: 1 }}>\n            {bidData?.expirationTime ? `Expires ${timeSince}` : 'No Expiration'}\n          </Text>\n        </Flex>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TransactionBidDetails\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { FC, useEffect, useState } from 'react'\nimport {\n  Box,\n  Flex,\n  FormatCryptoCurrency,\n  Grid,\n  Input,\n  Text,\n} from '../../primitives'\nimport ScrollArea from '../../primitives/ScrollArea'\nimport { Trait } from './BidModalRenderer'\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\nimport { useAttributes } from '../../hooks'\n\ntype Props = {\n  attributes?: NonNullable<ReturnType<typeof useAttributes>['data']>\n  tokenCount?: number\n  setTrait: React.Dispatch<React.SetStateAction<Trait>>\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst AttributeSelector: FC<Props> = ({\n  attributes,\n  setTrait,\n  setOpen,\n  tokenCount,\n}) => {\n  const [results, setResults] = useState<Props['attributes']>([])\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n    if (query === '') {\n      setResults(attributes)\n    } else {\n      let results: Props['attributes'] = []\n      attributes?.forEach((attribute) => {\n        const values = attribute.values?.filter(({ value }) =>\n          value.toLowerCase().includes(query.toLowerCase())\n        )\n        if (values && values.length > 0) {\n          results?.push({\n            ...attribute,\n            values: values,\n          })\n        }\n      })\n      setResults(results ? [...results] : [])\n    }\n  }, [query])\n\n  if (!attributes) return null\n\n  return (\n    <Box\n      css={{\n        maxWidth: 500,\n        zIndex: 1000,\n        padding: '$4',\n        overflowY: 'auto',\n        borderRadius: '$space$2',\n        backgroundColor: '$popoverBackground',\n      }}\n    >\n      <Input\n        css={{ marginBottom: '$4', padding: '$space$4 $space$4 $space$4 48px' }}\n        placeholder=\"Filter attribute\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        iconCss={{ top: '26px', color: '$neutralText' }}\n        icon={\n          <FontAwesomeIcon icon={faMagnifyingGlass} width={16} height={16} />\n        }\n      />\n      <ScrollArea css={{ minWidth: '80vw', '@bp1': { minWidth: 468 } }}>\n        {results?.map(({ key, values }) => {\n          if (values?.length === 0) return null\n\n          return (\n            <Box key={key} css={{ paddingRight: '$4', marginBottom: 24 }}>\n              <Text\n                style=\"subtitle1\"\n                color=\"accent\"\n                as=\"div\"\n                css={{ marginBottom: '$4' }}\n              >\n                {key}\n              </Text>\n              <Grid\n                css={{\n                  gridTemplateColumns: 'repeat(2, minmax(0, 1fr))',\n                  gap: '$2',\n                  '@bp1': {\n                    gridTemplateColumns: 'repeat(3, minmax(0, 1fr))',\n                  },\n                }}\n              >\n                {values?.map(({ value, count, floorAskPrice }) => (\n                  <Box\n                    key={value}\n                    css={{\n                      display: 'grid',\n                      alignContent: 'space-between',\n                      cursor: 'pointer',\n                      backgroundColor: '$contentBackground',\n                      borderRadius: '$space$2',\n                      $$shadowColor: '$colors$gray7',\n                      boxShadow: 'box-shadow: 0px 2px 16px $$shadowColor',\n                      border: '1px solid $borderColor',\n                      width: '100%',\n                      padding: '12px 16px',\n                    }}\n                    as=\"button\"\n                    onClick={() => {\n                      setTrait({ key, value, floorAskPrice })\n                      setOpen(false)\n                    }}\n                  >\n                    <Flex\n                      justify=\"between\"\n                      css={{\n                        gap: '$2',\n                        marginBottom: '$1',\n                      }}\n                    >\n                      <Text\n                        css={{\n                          maxWidth: 85,\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          textAlign: 'start',\n                        }}\n                        style=\"subtitle2\"\n                      >\n                        {value}\n                      </Text>\n                      <Box css={{ flex: 'none' }}>\n                        <FormatCryptoCurrency\n                          amount={floorAskPrice}\n                          logoWidth={10}\n                          maximumFractionDigits={1}\n                          textStyle=\"subtitle2\"\n                        />\n                      </Box>\n                    </Flex>\n                    <Flex justify=\"between\" css={{ gap: '$2' }}>\n                      <Text style=\"body3\" color=\"subtle\">\n                        {count && tokenCount\n                          ? `${Math.round((count / tokenCount) * 100)}%`\n                          : '-'}\n                      </Text>\n                      <Text style=\"body3\" color=\"subtle\">\n                        floor\n                      </Text>\n                    </Flex>\n                  </Box>\n                ))}\n              </Grid>\n            </Box>\n          )\n        })}\n      </ScrollArea>\n    </Box>\n  )\n}\n\nexport default AttributeSelector\n","import { CSSProps, styled } from '../../stitches.config'\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area'\nimport React from 'react'\n\nconst SCROLLBAR_SIZE = 10\n\nconst ScrollArea = styled(ScrollAreaPrimitive.Root, {\n  height: 322,\n  borderRadius: '$space$2',\n  overflow: 'hidden',\n  boxShadow: `0 2px 10px $inputBackground`,\n})\ntype ScrollAreaProps = ScrollAreaPrimitive.ScrollAreaProps & CSSProps\n\nconst ScrollAreaViewport = styled(ScrollAreaPrimitive.Viewport, {\n  backgroundColor: 'transparent',\n  width: '100%',\n  height: '100%',\n  borderRadius: 'inherit',\n})\n\nconst ScrollAreaScrollbar = styled(ScrollAreaPrimitive.Scrollbar, {\n  display: 'flex',\n  // ensures no selection\n  userSelect: 'none',\n  // disable browser handling of all panning and zooming gestures on touch devices\n  touchAction: 'none',\n  padding: 2,\n  background: '$inputBackground',\n  transition: 'background 160ms ease-out',\n  '&:hover': { background: '$inputBackground' },\n  '&[data-orientation=\"vertical\"]': { width: SCROLLBAR_SIZE },\n  '&[data-orientation=\"horizontal\"]': {\n    flexDirection: 'column',\n    height: SCROLLBAR_SIZE,\n  },\n})\n\nconst ScrollAreaThumb = styled(ScrollAreaPrimitive.Thumb, {\n  flex: 1,\n  background: '$wellBackground',\n  borderRadius: SCROLLBAR_SIZE,\n  // increase target size for touch devices https://www.w3.org/WAI/WCAG21/Understanding/target-size.html\n  position: 'relative',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '100%',\n    height: '100%',\n    minWidth: 44,\n    minHeight: 44,\n  },\n})\n\nconst ScrollAreaCorner = styled(ScrollAreaPrimitive.Corner, {\n  background: '$wellBackground',\n})\n\nconst RKScrollArea = ({ children, ...props }: ScrollAreaProps) => {\n  return (\n    <ScrollArea {...props}>\n      <ScrollAreaViewport>{children}</ScrollAreaViewport>\n      <ScrollAreaScrollbar orientation=\"vertical\">\n        <ScrollAreaThumb />\n      </ScrollAreaScrollbar>\n      <ScrollAreaScrollbar orientation=\"horizontal\">\n        <ScrollAreaThumb />\n      </ScrollAreaScrollbar>\n      <ScrollAreaCorner />\n    </ScrollArea>\n  )\n}\n\nRKScrollArea.Root = ScrollArea\nRKScrollArea.Viewport = ScrollAreaViewport\nRKScrollArea.Scrollbar = ScrollAreaScrollbar\nRKScrollArea.Thumb = ScrollAreaThumb\nRKScrollArea.Corner = ScrollAreaCorner\n\nexport default RKScrollArea\n","import React, {\n  Dispatch,\n  ReactElement,\n  SetStateAction,\n  useEffect,\n  useMemo,\n} from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  FormatCurrency,\n  Loader,\n  FormatCryptoCurrency,\n  Box,\n  Anchor,\n} from '../../primitives'\n\nimport { Modal } from '../Modal'\nimport {\n  faCircleExclamation,\n  faChevronDown,\n  faCube,\n  faCircleCheck,\n  faEnvelopeOpen,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  AcceptBidStep,\n  AcceptBidModalRenderer,\n  AcceptBidStepData,\n  AcceptBidTokenData,\n  EnhancedAcceptBidTokenData,\n} from './AcceptBidModalRenderer'\nimport { useBids, useFallbackState, useReservoirClient } from '../../hooks'\nimport AcceptBidLineItem from './AcceptBidLineItem'\nimport { Collapsible } from '../../primitives/Collapsible'\nimport { ApproveBidCollapsible } from './ApproveBidCollapsible'\nimport SigninStep from '../SigninStep'\nimport AcceptBidSummaryLineItem from './AcceptBidSummaryLineItem'\n\ntype BidData = {\n  tokens?: EnhancedAcceptBidTokenData[]\n  bids?: NonNullable<ReturnType<typeof useBids>['data']>\n  txHash?: string\n  maker?: string\n}\n\nconst ModalCopy = {\n  title: 'Accept Offering.....',\n  ctaAccept: 'Accept',\n  ctaAwaitingApproval: 'Waiting for Approval',\n  ctaClose: 'Close',\n  ctaDone: 'Done',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  tokens: AcceptBidTokenData[]\n  normalizeRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onBidAccepted?: (data: BidData) => void\n  onClose?: (\n    data: BidData,\n    stepData: AcceptBidStepData | null,\n    currentStep: AcceptBidStep\n  ) => void\n  onBidAcceptError?: (error: Error, data: BidData) => void\n  onCurrentStepUpdate?: (data: AcceptBidStepData) => void\n}\n\nexport function AcceptBidModal({\n  openState,\n  trigger,\n  tokens,\n  normalizeRoyalties,\n  copyOverrides,\n  onBidAccepted,\n  onClose,\n  onBidAcceptError,\n  onCurrentStepUpdate,\n}: Props): ReactElement {\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n\n  return (\n    <AcceptBidModalRenderer\n      open={open}\n      tokens={tokens}\n      normalizeRoyalties={normalizeRoyalties}\n    >\n      {({\n        loading,\n        acceptBidStep,\n        transactionError,\n        txHash,\n        usdPrices,\n        prices,\n        tokensData,\n        address,\n        blockExplorerBaseUrl,\n        stepData,\n        acceptBid,\n      }) => {\n        const client = useReservoirClient()\n        const chain = client?.currentChain()\n\n        useEffect(() => {\n          if (acceptBidStep === AcceptBidStep.Complete && onBidAccepted) {\n            const data: BidData = {\n              tokens: tokensData,\n              maker: address,\n            }\n            if (txHash) {\n              data.txHash = txHash\n            }\n            onBidAccepted(data)\n          }\n        }, [acceptBidStep])\n\n        useEffect(() => {\n          if (transactionError && onBidAcceptError) {\n            const data: BidData = {\n              tokens: tokensData,\n              maker: address,\n            }\n            onBidAcceptError(transactionError, data)\n          }\n        }, [transactionError])\n\n        useEffect(() => {\n          if (stepData && onCurrentStepUpdate) {\n            onCurrentStepUpdate(stepData)\n          }\n        }, [stepData])\n\n        const bidCount = useMemo(\n          () =>\n            tokensData.reduce(\n              (total, tokenData) => (total += tokenData.bidsPath.length),\n              0\n            ),\n          [tokensData]\n        )\n\n        const salesTxHashes =\n          stepData?.currentStep?.items?.reduce((txHashes, item) => {\n            item.salesData?.forEach((saleData) => {\n              if (saleData.txHash) {\n                txHashes.add(saleData.txHash)\n              }\n            })\n            return txHashes\n          }, new Set<string>()) || []\n        const totalSales = Array.from(salesTxHashes).length\n        const failedSales =\n          totalSales - (stepData?.currentStep?.items?.length || 0)\n        const successfulSales = totalSales - failedSales\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={copy.title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data: BidData = {\n                  tokens: tokensData,\n                  maker: address,\n                }\n                onClose(data, stepData, acceptBidStep)\n              }\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            <h1>Hello World</h1>\n            {acceptBidStep === AcceptBidStep.Unavailable && !loading && (\n              <Flex direction=\"column\" css={{ mt: 80 }}>\n                <Box css={{ color: '$neutralSolidHover', m: '0 auto' }}>\n                  <FontAwesomeIcon\n                    icon={faEnvelopeOpen}\n                    style={{ height: 24, width: 24 }}\n                  />\n                </Box>\n                <Text\n                  style=\"body2\"\n                  css={{ mt: '$2', mb: 74, textAlign: 'center' }}\n                >\n                  Offers are no longer available\n                </Text>\n                <Button\n                  onClick={() => setOpen(false)}\n                  css={{\n                    m: '$4',\n                    flex: 1,\n                  }}\n                >\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n\n            {acceptBidStep === AcceptBidStep.Checkout && !loading && (\n              <Flex direction=\"column\">\n                {transactionError && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      {transactionError.message}\n                    </Text>\n                  </Flex>\n                )}\n                <Flex justify=\"between\" css={{ px: '$4', pt: '$4' }}>\n                  <Text style=\"subtitle2\" color=\"subtle\">\n                    {bidCount > 1 ? `${bidCount} Items` : 'Item'}\n                  </Text>\n                  <Text style=\"subtitle2\" color=\"subtle\">\n                    Total Offer Value\n                  </Text>\n                </Flex>\n                {tokensData.map(({ tokenData, bidsPath }, i) => {\n                  if (!bidsPath || !bidsPath.length) {\n                    return (\n                      <AcceptBidLineItem\n                        key={i}\n                        token={{\n                          name: tokenData?.token?.name || '',\n                          id: tokenData?.token?.tokenId || '',\n                        }}\n                        collection={{\n                          id: tokenData?.token?.collection?.id || '',\n                          name: tokenData?.token?.collection?.name || '',\n                        }}\n                        img={\n                          tokenData?.token?.imageSmall ||\n                          tokenData?.token?.collection?.image ||\n                          ''\n                        }\n                      />\n                    )\n                  } else {\n                    return bidsPath.map((bidPath) => (\n                      <AcceptBidLineItem\n                        key={i}\n                        token={{\n                          name: tokenData?.token?.name || '',\n                          id: tokenData?.token?.tokenId || '',\n                        }}\n                        collection={{\n                          id: tokenData?.token?.collection?.id || '',\n                          name: tokenData?.token?.collection?.name || '',\n                        }}\n                        img={\n                          tokenData?.token?.imageSmall ||\n                          tokenData?.token?.collection?.image ||\n                          ''\n                        }\n                        netAmount={bidPath.quote}\n                        price={bidPath.totalPrice}\n                        fees={bidPath.builtInFees}\n                        currency={bidPath.currency}\n                        decimals={bidPath.currencyDecimals}\n                        sourceImg={\n                          bidPath.source\n                            ? `https://api.reservoir.tools/redirect/sources/${bidPath.source}/logo/v2`\n                            : ''\n                        }\n                      />\n                    ))\n                  }\n                })}\n\n                {prices.map((price, i) => (\n                  <Collapsible\n                    key={i}\n                    trigger={\n                      <Flex justify=\"between\" css={{ p: '$4' }}>\n                        <Text style=\"h6\">\n                          {price.currency?.symbol} You Get{' '}\n                          <Text css={{ color: '$neutralSolidHover', ml: '$2' }}>\n                            <FontAwesomeIcon\n                              icon={faChevronDown}\n                              width={16}\n                              height={16}\n                            />\n                          </Text>\n                        </Text>\n                        <Flex direction=\"column\" css={{ gap: '$1' }}>\n                          <FormatCryptoCurrency\n                            amount={price.netAmount}\n                            decimals={price.currency?.decimals}\n                            address={price.currency?.contract}\n                            symbol={price.currency?.symbol}\n                            textStyle=\"h6\"\n                          />\n                          {price.currency?.symbol &&\n                            usdPrices[price.currency.symbol] ? (\n                            <FormatCurrency\n                              color=\"subtle\"\n                              style=\"tiny\"\n                              amount={\n                                usdPrices[price.currency.symbol].price *\n                                price.amount\n                              }\n                              css={{ textAlign: 'end' }}\n                            />\n                          ) : null}\n                        </Flex>\n                      </Flex>\n                    }\n                  >\n                    <Flex\n                      css={{\n                        gap: '$2',\n                        padding: '$4',\n                        paddingTop: 0,\n                      }}\n                      direction=\"column\"\n                    >\n                      <Flex justify=\"between\">\n                        <Text style=\"subtitle2\" color=\"subtle\">\n                          Total {price.currency?.symbol} Offer Value\n                        </Text>\n                        <FormatCryptoCurrency\n                          amount={price.amount}\n                          decimals={price.currency?.decimals}\n                          address={price.currency?.contract}\n                          symbol={price.currency?.symbol}\n                          textStyle=\"subtitle2\"\n                        />\n                      </Flex>\n                      {price.royalty > 0 ? (\n                        <Flex justify=\"between\">\n                          <Text style=\"subtitle2\" color=\"subtle\">\n                            Creator Royalties\n                          </Text>\n                          <Text\n                            css={{ ml: 'auto' }}\n                            style=\"subtitle2\"\n                            color=\"subtle\"\n                          >\n                            -\n                          </Text>\n                          <FormatCryptoCurrency\n                            amount={price.royalty}\n                            decimals={price.currency?.decimals}\n                            address={price.currency?.contract}\n                            symbol={price.currency?.symbol}\n                            textStyle=\"subtitle2\"\n                          />\n                        </Flex>\n                      ) : null}\n                      {price.marketplaceFee > 0 ? (\n                        <Flex justify=\"between\">\n                          <Text style=\"subtitle2\" color=\"subtle\">\n                            Marketplace Fee\n                          </Text>\n                          <Text\n                            css={{ ml: 'auto' }}\n                            style=\"subtitle2\"\n                            color=\"subtle\"\n                          >\n                            -\n                          </Text>\n                          <FormatCryptoCurrency\n                            amount={price.marketplaceFee}\n                            decimals={price.currency?.decimals}\n                            address={price.currency?.contract}\n                            symbol={price.currency?.symbol}\n                            textStyle=\"subtitle2\"\n                          />\n                        </Flex>\n                      ) : null}\n                    </Flex>\n                  </Collapsible>\n                ))}\n\n                <Button\n                  css={{\n                    flex: 1,\n                    m: '$4',\n                  }}\n                  color=\"primary\"\n                  onClick={acceptBid}\n                >\n                  {copy.ctaAccept}\n                </Button>\n              </Flex>\n            )}\n            {acceptBidStep === AcceptBidStep.Auth && !loading && (\n              <Flex direction=\"column\">\n                <AcceptBidSummaryLineItem\n                  tokensData={tokensData}\n                  usdPrices={usdPrices}\n                  prices={prices}\n                  chain={chain}\n                />\n                <SigninStep css={{ mt: 48, mb: 60, gap: 20 }} />\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n            {acceptBidStep === AcceptBidStep.ApproveMarketplace && !loading && (\n              <Flex direction=\"column\">\n                <AcceptBidSummaryLineItem\n                  tokensData={tokensData}\n                  usdPrices={usdPrices}\n                  prices={prices}\n                  chain={chain}\n                />\n                <Text style=\"h6\" css={{ m: '$4', textAlign: 'center' }}>\n                  Confirm Selling\n                </Text>\n                {stepData?.steps.map((step) =>\n                  step?.items && step.items.length > 0 ? (\n                    <ApproveBidCollapsible\n                      key={step.id}\n                      step={step}\n                      tokensData={tokensData}\n                      chain={chain}\n                      isCurrentStep={stepData.currentStep.id === step.id}\n                      open={stepData.currentStep.id === step.id}\n                    />\n                  ) : null\n                )}\n\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n\n            {acceptBidStep === AcceptBidStep.Finalizing && !loading && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{\n                  gap: '$4',\n                  pb: '$5',\n                }}\n              >\n                <AcceptBidSummaryLineItem\n                  tokensData={tokensData}\n                  usdPrices={usdPrices}\n                  prices={prices}\n                  chain={chain}\n                />\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Finalizing on blockchain\n                </Text>\n                <Text\n                  style=\"subtitle2\"\n                  color=\"subtle\"\n                  css={{ textAlign: 'center', px: '$4' }}\n                >\n                  You can close this modal while it finalizes on the blockchain.\n                  The transaction will continue in the background.\n                </Text>\n                <Box\n                  css={{\n                    color: '$neutralSolid',\n                    width: 32,\n                    height: 32,\n                    m: '0 auto',\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={faCube}\n                    style={{ width: 32, height: 32 }}\n                  />\n                </Box>\n              </Flex>\n            )}\n\n            {acceptBidStep === AcceptBidStep.Complete && !loading && (\n              <Flex direction=\"column\">\n                <Flex\n                  css={{\n                    p: '$4',\n                    py: '$5',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Box\n                    css={{\n                      color: failedSales ? '$errorAccent' : '$successAccent',\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={failedSales ? faCircleExclamation : faCircleCheck}\n                      fontSize={32}\n                    />\n                  </Box>\n                  <Text style=\"h5\" css={{ my: 24 }}>\n                    {failedSales\n                      ? `${successfulSales} ${successfulSales > 1 ? 'items' : 'item'\n                      } sold, ${failedSales} ${failedSales > 1 ? 'items' : 'item'\n                      } failed`\n                      : `${totalSales > 1 ? 'Offers' : 'Offer'} accepted!`}\n                  </Text>\n                  <Flex direction=\"column\" css={{ gap: '$2', mb: '$3' }}>\n                    {stepData?.currentStep?.items?.map((item) => {\n                      const txHash = item.txHash\n                        ? `${item.txHash.slice(0, 4)}...${item.txHash.slice(\n                          -4\n                        )}`\n                        : ''\n                      return (\n                        <Anchor\n                          href={`${blockExplorerBaseUrl}/tx/${item?.txHash}`}\n                          color=\"primary\"\n                          weight=\"medium\"\n                          target=\"_blank\"\n                          css={{ fontSize: 12 }}\n                        >\n                          View transaction: {txHash}\n                        </Anchor>\n                      )\n                    })}\n                  </Flex>\n                </Flex>\n                <Flex\n                  css={{\n                    p: '$4',\n                    flexDirection: 'column',\n                    gap: '$3',\n                    '@bp1': {\n                      flexDirection: 'row',\n                    },\n                  }}\n                >\n                  <Button\n                    css={{ width: '100%' }}\n                    onClick={() => {\n                      setOpen(false)\n                    }}\n                  >\n                    {copy.ctaDone}\n                  </Button>\n                </Flex>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </AcceptBidModalRenderer>\n  )\n}\n\nAcceptBidModal.Custom = AcceptBidModalRenderer\n","import React, {\n  FC,\n  useEffect,\n  useState,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { useTokens, useCoinConversion, useReservoirClient } from '../../hooks'\nimport { useAccount, useWalletClient, useNetwork } from 'wagmi'\nimport {\n  Execute,\n  ReservoirClientActions,\n  SellPath,\n} from '@reservoir0x/reservoir-sdk'\nimport { Currency } from '../../types/Currency'\n\nexport enum AcceptBidStep {\n  Checkout,\n  Auth,\n  ApproveMarketplace,\n  Finalizing,\n  Complete,\n  Unavailable,\n}\n\nexport type AcceptBidTokenData = {\n  tokenId: string\n  collectionId: string\n  bidIds?: string[]\n  bidsPath?: NonNullable<SellPath>\n}\n\nexport type EnhancedAcceptBidTokenData = Required<AcceptBidTokenData> & {\n  tokenData?: ReturnType<typeof useTokens>['data'][0]\n}\n\nexport type AcceptBidPrice = {\n  netAmount: number\n  amount: number\n  currency: Currency\n  royalty: number\n  marketplaceFee: number\n}\n\nexport type AcceptBidStepData = {\n  totalSteps: number\n  steps: Execute['steps']\n  currentStep: Execute['steps'][0]\n  currentStepItem?: NonNullable<Execute['steps'][0]['items']>[0]\n}\n\ntype ChildrenProps = {\n  loading: boolean\n  tokensData: EnhancedAcceptBidTokenData[]\n  acceptBidStep: AcceptBidStep\n  transactionError?: Error | null\n  txHash: string | null\n  usdPrices: Record<string, ReturnType<typeof useCoinConversion>[0]>\n  prices: AcceptBidPrice[]\n  address?: string\n  blockExplorerBaseUrl: string\n  stepData: AcceptBidStepData | null\n  acceptBid: () => void\n  setAcceptBidStep: React.Dispatch<React.SetStateAction<AcceptBidStep>>\n}\n\ntype Props = {\n  open: boolean\n  tokens: AcceptBidTokenData[]\n  normalizeRoyalties?: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const AcceptBidModalRenderer: FC<Props> = ({\n  open,\n  tokens,\n  normalizeRoyalties,\n  children,\n}) => {\n  const client = useReservoirClient()\n  const { data: wallet } = useWalletClient()\n  const [stepData, setStepData] = useState<AcceptBidStepData | null>(null)\n  const [prices, setPrices] = useState<AcceptBidPrice[]>([])\n  const [acceptBidStep, setAcceptBidStep] = useState<AcceptBidStep>(\n    AcceptBidStep.Checkout\n  )\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [txHash, setTxHash] = useState<string | null>(null)\n  const { chain: activeChain } = useNetwork()\n  const blockExplorerBaseUrl =\n    activeChain?.blockExplorers?.etherscan?.url || 'https://etherscan.io'\n  const [isFetchingBidPath, setIsFetchingBidPath] = useState(false)\n  const [bidsPath, setBidsPath] = useState<SellPath | null>(null)\n\n  const _tokenIds = tokens.map((token) => {\n    const contract = (token?.collectionId || '').split(':')[0]\n    return `${contract}:${token.tokenId}`\n  })\n  const {\n    data: tokensData,\n    mutate: mutateTokens,\n    isValidating: isFetchingTokenData,\n  } = useTokens(\n    open && {\n      tokens: _tokenIds,\n      normalizeRoyalties,\n    },\n    {\n      revalidateFirstPage: true,\n    }\n  )\n\n  const enhancedTokens = useMemo(() => {\n    const tokensDataMap = tokensData.reduce((map, data) => {\n      map[`${data.token?.contract}:${data.token?.tokenId}`] = data\n      return map\n    }, {} as Record<string, typeof tokensData[0]>)\n    const tokensBidPathMap =\n      bidsPath?.reduce((map, path) => {\n        const key = `${path.contract}:${path.tokenId}`\n        const mapPath = map[key]\n        if (!mapPath) {\n          map[key] = [path]\n        } else {\n          mapPath.push(path)\n        }\n        return map\n      }, {} as Record<string, NonNullable<AcceptBidTokenData['bidsPath']>>) ||\n      {}\n\n    return tokens.reduce((enhancedTokens, token) => {\n      const contract = token.collectionId.split(':')[0]\n      const dataMapKey = `${contract}:${token.tokenId}`\n      const tokenData = tokensDataMap[dataMapKey]\n      const bidIds = token.bidIds?.filter((bidId) => bidId.length > 0) || []\n      const bidsPath: NonNullable<AcceptBidTokenData['bidsPath']> =\n        tokensBidPathMap[dataMapKey] ? tokensBidPathMap[dataMapKey] : []\n      if (!bidIds.length) {\n        enhancedTokens.push({\n          ...token,\n          bidIds: tokenData?.market?.topBid?.id\n            ? [tokenData.market.topBid.id]\n            : [],\n          tokenData,\n          bidsPath,\n        })\n      } else {\n        enhancedTokens.push({\n          ...token,\n          bidIds: token.bidIds || [],\n          tokenData,\n          bidsPath,\n        })\n      }\n      return enhancedTokens\n    }, [] as EnhancedAcceptBidTokenData[])\n  }, [tokensData, tokens, bidsPath])\n\n  const bidTokenMap = useMemo(\n    () =>\n      enhancedTokens.reduce((map, token) => {\n        token.bidIds.forEach((bidId) => {\n          map[bidId] = token\n        })\n        return map\n      }, {} as Record<string, typeof enhancedTokens[0]>),\n    [enhancedTokens]\n  )\n\n  const fetchBidsPath = useCallback(\n    (tokens: AcceptBidTokenData[]) => {\n      if (!wallet || !client) {\n        setIsFetchingBidPath(false)\n        return\n      }\n      setIsFetchingBidPath(true)\n      type AcceptOfferOptions = Parameters<\n        ReservoirClientActions['acceptOffer']\n      >['0']['options']\n      let options: AcceptOfferOptions = {\n        onlyPath: true,\n        partial: true,\n      }\n      if (normalizeRoyalties !== undefined) {\n        options.normalizeRoyalties = normalizeRoyalties\n      }\n\n      type AcceptBidItems = Parameters<\n        ReservoirClientActions['acceptOffer']\n      >[0]['items']\n      const items: AcceptBidItems = tokens?.reduce((items, token) => {\n        if (tokens) {\n          const contract = token.collectionId.split(':')[0]\n          const bids = token.bidIds\n            ? token.bidIds.filter((bid) => bid.length > 0)\n            : []\n          if (bids && bids.length > 0) {\n            bids.forEach((bidId) => {\n              items.push({\n                orderId: bidId,\n                token: `${contract}:${token.tokenId}`,\n              })\n            })\n          } else {\n            items.push({\n              token: `${contract}:${token.tokenId}`,\n            })\n          }\n        }\n        return items\n      }, [] as AcceptBidItems)\n\n      client.actions\n        .acceptOffer({\n          items: items,\n          wallet,\n          options,\n          precheck: true,\n          onProgress: () => { },\n        })\n        .then((data) => {\n          setBidsPath(\n            'path' in (data as any)\n              ? ((data as Execute)['path'] as SellPath)\n              : null\n          )\n        })\n        .finally(() => {\n          setIsFetchingBidPath(false)\n        })\n    },\n    [client, wallet, normalizeRoyalties]\n  )\n\n  useEffect(() => {\n    if (open) {\n      fetchBidsPath(tokens)\n    }\n  }, [client, tokens, open])\n\n  const currencySymbols = useMemo(\n    () =>\n      Array.from(\n        enhancedTokens.reduce((symbols, { bidsPath }) => {\n          bidsPath.forEach(({ currencySymbol }) => {\n            if (currencySymbol) {\n              symbols.add(currencySymbol)\n            }\n          })\n          return symbols\n        }, new Set() as Set<string>)\n      ).join(','),\n    [enhancedTokens]\n  )\n\n  const conversions = useCoinConversion(\n    open && currencySymbols.length > 0 ? 'USD' : undefined,\n    currencySymbols\n  )\n\n  const usdPrices = useMemo(\n    () =>\n      conversions.reduce((map, price) => {\n        map[price.symbol] = price\n        return map\n      }, {} as ChildrenProps['usdPrices']),\n    [conversions]\n  )\n\n  const acceptBid = useCallback(() => {\n    setTransactionError(null)\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!bidsPath) {\n      const error = new Error('Missing bids to accept')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      setTransactionError(null)\n      throw error\n    }\n\n    type AcceptOfferOptions = Parameters<\n      ReservoirClientActions['acceptOffer']\n    >['0']['options']\n    let options: AcceptOfferOptions = {\n      partial: true,\n    }\n\n    if (normalizeRoyalties !== undefined) {\n      options.normalizeRoyalties = normalizeRoyalties\n    }\n\n    setAcceptBidStep(AcceptBidStep.ApproveMarketplace)\n\n    type AcceptBidItems = Parameters<\n      ReservoirClientActions['acceptOffer']\n    >[0]['items']\n    const items: AcceptBidItems = bidsPath.map(\n      ({ orderId, tokenId, contract }) => ({\n        orderId: orderId,\n        token: `${contract}:${tokenId}`,\n      })\n    )\n\n    const expectedPrice: Record<string, number> = {}\n    for (let currency in prices) {\n      expectedPrice[currency] = prices[currency].netAmount\n    }\n\n    let hasError = false\n\n    client.actions\n      .acceptOffer({\n        expectedPrice,\n        wallet,\n        items,\n        onProgress: (steps: Execute['steps'], path: Execute['path']) => {\n          if (!steps || hasError) return\n          setBidsPath(path)\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n          let currentStepIndex: number = 0\n          executableSteps.find((step, index) => {\n            currentStepIndex = index\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              currentStep,\n              currentStepItem,\n              steps,\n            })\n            if (currentStep.id === 'auth') {\n              setAcceptBidStep(AcceptBidStep.Auth)\n            } else if (currentStep.id === 'nft-approval') {\n              setAcceptBidStep(AcceptBidStep.ApproveMarketplace)\n            } else if (currentStep.id === 'sale') {\n              if (\n                currentStep.items?.every((item) => item.txHash !== undefined)\n              ) {\n                setAcceptBidStep(AcceptBidStep.Finalizing)\n              } else {\n                setAcceptBidStep(AcceptBidStep.ApproveMarketplace)\n              }\n            }\n          } else if (\n            executableSteps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setAcceptBidStep(AcceptBidStep.Complete)\n            const lastStepItem = currentStep.items\n              ? currentStep.items[currentStep.items?.length - 1]\n              : undefined\n            if (lastStepItem) {\n              setStepData({\n                totalSteps: stepCount,\n                steps,\n                currentStep,\n                currentStepItem: lastStepItem,\n              })\n            }\n          }\n        },\n        options,\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        const errorType = (error as any)?.type\n        let message = 'Oops, something went wrong. Please try again.'\n        if (errorType && errorType === 'price mismatch') {\n          message = error.message\n        }\n        //@ts-ignore\n        const transactionError = new Error(message, {\n          cause: error,\n        })\n        hasError = true\n        setTransactionError(transactionError)\n        setAcceptBidStep(AcceptBidStep.Checkout)\n        setStepData(null)\n        fetchBidsPath(tokens)\n        mutateTokens()\n      })\n  }, [bidsPath, bidTokenMap, client, wallet, prices, mutateTokens])\n\n  useEffect(() => {\n    if (bidsPath && bidsPath.length > 0) {\n      const prices: Record<string, AcceptBidPrice> = bidsPath.reduce(\n        (\n          map,\n          {\n            quote,\n            currency,\n            currencyDecimals,\n            currencySymbol,\n            builtInFees,\n            feesOnTop,\n            totalPrice,\n          }\n        ) => {\n          const netAmount = quote || 0\n          const amount = totalPrice || 0\n          let royalty = 0\n          let marketplaceFee = 0\n\n          if (currency && currencySymbol) {\n            builtInFees?.forEach((fee) => {\n              switch (fee.kind) {\n                case 'marketplace': {\n                  marketplaceFee = fee.amount || 0\n                  break\n                }\n                case 'royalty': {\n                  royalty = fee.amount || 0\n                  break\n                }\n              }\n            })\n            feesOnTop?.forEach((fee) => {\n              switch (fee.kind) {\n                case 'marketplace': {\n                  marketplaceFee = fee.amount || 0\n                  break\n                }\n                case 'royalty': {\n                  royalty = fee.amount || 0\n                  break\n                }\n              }\n            })\n            if (!map[currencySymbol]) {\n              map[currencySymbol] = {\n                netAmount,\n                amount,\n                currency: {\n                  contract: currency,\n                  symbol: currencySymbol,\n                  decimals: currencyDecimals,\n                },\n                royalty,\n                marketplaceFee,\n              }\n            } else if (map[currencySymbol]) {\n              map[currencySymbol].netAmount += netAmount\n              map[currencySymbol].amount += amount\n              map[currencySymbol].royalty += royalty\n              map[currencySymbol].marketplaceFee += marketplaceFee\n            }\n          }\n          return map\n        },\n        {} as Record<string, AcceptBidPrice>\n      )\n\n      setPrices(Object.values(prices))\n      if (acceptBidStep === AcceptBidStep.Unavailable) {\n        setAcceptBidStep(AcceptBidStep.Checkout)\n      }\n    } else if (!isFetchingBidPath) {\n      setPrices([])\n      setAcceptBidStep(AcceptBidStep.Unavailable)\n    }\n  }, [client, bidsPath, isFetchingBidPath])\n\n  const { address } = useAccount()\n\n  useEffect(() => {\n    if (!open) {\n      setAcceptBidStep(AcceptBidStep.Checkout)\n      setTxHash(null)\n      setStepData(null)\n      setTransactionError(null)\n    }\n  }, [open])\n\n  return (\n    <>\n      {children({\n        loading: isFetchingBidPath || isFetchingTokenData,\n        tokensData: enhancedTokens,\n        acceptBidStep,\n        transactionError,\n        txHash,\n        usdPrices,\n        prices,\n        address,\n        blockExplorerBaseUrl,\n        acceptBid,\n        setAcceptBidStep,\n        stepData,\n      })}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { styled } from '../../../stitches.config'\nimport { Flex, FormatCryptoCurrency, Text, Tooltip } from '../../primitives'\nimport { SellPath } from '@reservoir0x/reservoir-sdk'\n\ntype Props = {\n  token: {\n    name?: string\n    id: string\n  }\n  collection?: {\n    name: string\n    id: string\n  }\n  fees?: NonNullable<SellPath>[0]['builtInFees']\n  img: string\n  sourceImg?: string\n  price?: number\n  netAmount?: number\n  currency?: string\n  decimals?: number\n}\n\nconst Img = styled('img', {\n  height: 56,\n  width: 56,\n})\n\nconst AcceptBidLineItem: FC<Props> = ({\n  img,\n  token,\n  collection,\n  sourceImg,\n  price,\n  netAmount,\n  fees,\n  currency,\n  decimals,\n}) => {\n  const royaltiesBps = fees?.reduce((total, fee) => {\n    if (fee?.kind === 'royalty') {\n      total += fee?.bps || 0\n    }\n    return total\n  }, 0)\n\n  const isUnavailable = !price\n\n  return (\n    <Flex css={{ p: '$4', borderBottom: '1px solid $borderColor', gap: '$2' }}>\n      <Img\n        src={img}\n        alt={'Token Image'}\n        css={{\n          borderRadius: 4,\n          overflow: 'hidden',\n          visibility: !img || img.length === 0 ? 'hidden' : 'visible',\n          flexShrink: 0,\n          objectFit: 'cover',\n          filter: isUnavailable ? 'grayscale(1)' : 'unset',\n        }}\n      />\n      <Flex\n        direction=\"column\"\n        align=\"start\"\n        justify=\"center\"\n        css={{ gap: 2, mr: 'auto' }}\n      >\n        <Text style=\"h6\" color={isUnavailable ? 'subtle' : 'base'}>\n          {token.name || `#${token.id}`}\n        </Text>\n        <Text style=\"body3\" color={isUnavailable ? 'subtle' : 'base'}>\n          {collection?.name}\n        </Text>\n        {royaltiesBps ? (\n          <Text style=\"body3\" color=\"subtle\">\n            Creator Royalties: {royaltiesBps / 100}%\n          </Text>\n        ) : null}\n      </Flex>\n      {isUnavailable ? (\n        <Text\n          color=\"error\"\n          style=\"body3\"\n          css={{ display: 'flex', alignItems: 'center', flexShrink: 0 }}\n        >\n          Offer no longer available\n        </Text>\n      ) : (\n        <Tooltip\n          side=\"left\"\n          content={\n            <Flex direction=\"column\" css={{ gap: '$2' }}>\n              <Flex css={{ gap: '$1' }} justify=\"between\">\n                <Text style=\"body3\">Total Offer Value</Text>\n                <FormatCryptoCurrency\n                  amount={price}\n                  address={currency}\n                  decimals={decimals}\n                  textStyle=\"subtitle2\"\n                />\n              </Flex>\n              {fees?.map((fee, i) => {\n                let feeName = 'Misc Fee'\n                switch (fee.kind) {\n                  case 'marketplace': {\n                    feeName = 'Marketplace Fee'\n                    break\n                  }\n                  case 'royalty': {\n                    feeName = 'Creator Royalties'\n                    break\n                  }\n                }\n                return (\n                  <Flex justify=\"between\" key={i}>\n                    <Text style=\"body3\" color=\"subtle\" css={{ mr: '$1' }}>\n                      {feeName}\n                    </Text>\n                    <Text style=\"body3\" color=\"subtle\" css={{ ml: 'auto' }}>\n                      -\n                    </Text>\n                    <FormatCryptoCurrency\n                      amount={fee.amount}\n                      address={currency}\n                      decimals={decimals}\n                      textStyle=\"subtitle2\"\n                    />\n                  </Flex>\n                )\n              })}\n              <Flex justify=\"between\" css={{ gap: '$1' }}>\n                <Text style=\"body3\">You Get</Text>\n                <FormatCryptoCurrency\n                  amount={netAmount}\n                  address={currency}\n                  decimals={decimals}\n                  textStyle=\"subtitle2\"\n                />\n              </Flex>\n            </Flex>\n          }\n        >\n          <Flex\n            direction=\"column\"\n            align=\"end\"\n            justify=\"center\"\n            css={{ gap: '$1', ml: 'auto', height: '100%' }}\n          >\n            {sourceImg && (\n              <Img src={sourceImg} css={{ height: 16, width: 16 }} />\n            )}\n            <FormatCryptoCurrency\n              amount={price}\n              address={currency}\n              decimals={decimals}\n              textStyle=\"subtitle2\"\n            />\n          </Flex>\n        </Tooltip>\n      )}\n    </Flex>\n  )\n}\n\nexport default AcceptBidLineItem\n","import React, { useEffect } from 'react'\nimport { keyframes, styled } from '@stitches/react'\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible'\nimport {\n  ComponentPropsWithoutRef,\n  ElementRef,\n  forwardRef,\n  ReactNode,\n  useState,\n} from 'react'\n\nconst slideDown = keyframes({\n  from: { height: 0 },\n  to: { height: 'var(--radix-collapsible-content-height)' },\n})\n\nconst slideUp = keyframes({\n  from: { height: 'var(--radix-collapsible-content-height)' },\n  to: { height: 0 },\n})\n\nconst CollapsibleContent = styled(CollapsiblePrimitive.CollapsibleContent, {\n  background: 'transparent',\n  border: 'none',\n  borderRadius: 0,\n  '&[data-state=\"open\"]': {\n    animation: `${slideDown} 300ms cubic-bezier(0.87, 0, 0.13, 1)`,\n  },\n  '&[data-state=\"closed\"]': {\n    animation: `${slideUp} 300ms cubic-bezier(0.87, 0, 0.13, 1)`,\n  },\n})\n\nconst CollapsibleRoot = styled(CollapsiblePrimitive.Root, {\n  borderRadius: 8,\n  overflow: 'hidden',\n})\n\ntype Props = {\n  trigger: ReactNode\n  contentProps?: CollapsiblePrimitive.CollapsibleContentProps\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}\n\nconst Collapsible = forwardRef<\n  ElementRef<typeof CollapsiblePrimitive.Content>,\n  ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Content> & Props\n>(\n  (\n    { children, trigger, contentProps, open, onOpenChange, ...props },\n    forwardedRef\n  ) => {\n    const [collapsibleOpen, setCollapsibleOpen] = useState(false)\n\n    useEffect(() => {\n      if (open !== undefined && open !== collapsibleOpen) {\n        setCollapsibleOpen(open)\n        if (onOpenChange) {\n          onOpenChange(open)\n        }\n      }\n    }, [open])\n\n    return (\n      <CollapsibleRoot\n        {...props}\n        onOpenChange={(open) => {\n          setCollapsibleOpen(open)\n          if (onOpenChange) {\n            onOpenChange(open)\n          }\n        }}\n        open={collapsibleOpen}\n      >\n        <CollapsiblePrimitive.Trigger asChild>\n          {trigger}\n        </CollapsiblePrimitive.Trigger>\n        <CollapsibleContent ref={forwardedRef} {...contentProps}>\n          {children}\n        </CollapsibleContent>\n      </CollapsibleRoot>\n    )\n  }\n)\n\nexport { Collapsible, CollapsibleContent, CollapsibleRoot }\n","import React, { FC, useEffect, useMemo, useState } from 'react'\nimport { Execute, ReservoirChain } from '@reservoir0x/reservoir-sdk'\nimport { ApproveCollapsible } from '../ApproveCollapisble'\nimport { EnhancedAcceptBidTokenData } from './AcceptBidModalRenderer'\nimport { Flex, Grid, Img, Loader, Text } from '../../primitives'\nimport { styled } from '@stitches/react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons'\n\ntype Props = {\n  step: NonNullable<Execute['steps'][0]>\n  tokensData: EnhancedAcceptBidTokenData[]\n  chain?: ReservoirChain | null\n  open?: boolean\n  isCurrentStep?: boolean\n}\n\nconst StyledImg = styled(Img, {\n  width: 24,\n  height: 24,\n  borderRadius: 4,\n})\n\nconst Spinner = () => (\n  <Loader\n    css={{ display: 'flex', alignItems: 'center' }}\n    icon={\n      <Flex css={{ color: '$accentSolidHover' }}>\n        <FontAwesomeIcon icon={faCircleNotch} width={16} height={16} />\n      </Flex>\n    }\n  />\n)\n\nexport const ApproveBidCollapsible: FC<Props> = ({\n  step,\n  tokensData,\n  chain,\n  open,\n  isCurrentStep,\n}) => {\n  const [collapsibleOpen, setCollapsibleOpen] = useState(false)\n  const isComplete =\n    step && step.items?.every((item) => item?.status == 'complete')\n      ? true\n      : false\n\n  useEffect(() => {\n    if (open !== undefined && open !== collapsibleOpen) {\n      setCollapsibleOpen(open)\n    }\n  }, [open])\n\n  const pathMap = useMemo(\n    () =>\n      tokensData.reduce((paths, tokenData) => {\n        tokenData.bidsPath.forEach((bidPath) => {\n          if (bidPath.orderId) {\n            paths[bidPath.orderId] = bidPath\n          }\n        })\n        return paths\n      }, {} as Record<string, EnhancedAcceptBidTokenData['bidsPath'][0]>),\n    [tokensData]\n  )\n\n  const tokensMap = useMemo(\n    () =>\n      tokensData.reduce((map, tokenData) => {\n        const contract = (tokenData?.collectionId || '').split(':')[0]\n        map[`${contract}:${tokenData.tokenId}`] = tokenData\n        return map\n      }, {} as Record<string, EnhancedAcceptBidTokenData>),\n    []\n  )\n\n  if (step.id !== 'sale' && step.id !== 'nft-approval') {\n    return null\n  }\n\n  const title = step.id === 'sale' ? 'Confirm Sale' : 'Approve Collections'\n  const disabled = !step.items || !step.items.length\n  const baseApiUrl = chain?.baseApiUrl\n\n  return (\n    <ApproveCollapsible\n      title={title}\n      open={disabled ? false : collapsibleOpen}\n      onOpenChange={disabled ? () => {} : setCollapsibleOpen}\n      isInProgress={isCurrentStep}\n      isComplete={isComplete}\n      css={{ margin: 12 }}\n    >\n      <Grid\n        css={{\n          px: '$4',\n          pb: '$2',\n          gridTemplateColumns: 'auto 1fr 16px',\n          gridRowGap: 24,\n        }}\n      >\n        {step?.items?.map((item, i) => {\n          const paths = item.orderIds?.map((id) => pathMap[id]) || []\n          const marketplaces = Array.from(\n            paths.reduce((marketplaces, path) => {\n              if (path.source) {\n                marketplaces.add(path.source)\n              }\n              return marketplaces\n            }, new Set() as Set<string>)\n          ).join(',')\n          if (step.id === 'sale') {\n            const images = paths.reduce((images, path) => {\n              const tokenKey = `${path?.contract}:${path?.tokenId}`\n              const tokenData = tokensMap[tokenKey]?.tokenData\n              const image =\n                tokenData?.token?.imageSmall || baseApiUrl\n                  ? `${baseApiUrl}/redirect/tokens/${tokenKey}/image/v1?imageSize=small`\n                  : null\n              if (image && images.length < 4) {\n                images.push(image)\n              }\n              return images\n            }, [] as string[])\n\n            return (\n              <React.Fragment key={i}>\n                <Flex css={{ mr: '$2' }}>\n                  {images.map((image, i) => (\n                    <StyledImg\n                      key={i}\n                      src={image}\n                      css={{ marginLeft: i > 0 ? -14 : 0 }}\n                    />\n                  ))}\n                </Flex>\n                <Text\n                  style=\"body2\"\n                  color=\"subtle\"\n                  css={{ display: 'flex', alignItems: 'center' }}\n                >\n                  Confirm sale of {paths.length}{' '}\n                  {paths.length > 1 ? 'items' : 'item'} on{' '}\n                  {marketplaces.length > 0 ? marketplaces : 'exchange'}\n                </Text>\n                {isCurrentStep ? <Spinner /> : null}\n              </React.Fragment>\n            )\n          } else {\n            const path = paths.length > 0 ? paths[0] : null\n            const tokenKey = `${path?.contract}:${path?.tokenId}`\n            const collection = tokensMap[tokenKey]?.tokenData?.token?.collection\n            const collectionName = collection?.name || 'Collection'\n            const collectionImage =\n              collection?.image || baseApiUrl\n                ? `${baseApiUrl}/redirect/collections/${path?.contract}/image/v1`\n                : ''\n            const sourceImages = paths.map(\n              (path) => `${baseApiUrl}/redirect/sources/${path.source}/logo/v2`\n            )\n\n            return (\n              <React.Fragment key={i}>\n                <Flex css={{ mr: '$2' }}>\n                  <StyledImg src={collectionImage} />\n                  {sourceImages.map((src, i) => (\n                    <StyledImg key={i} src={src} css={{ marginLeft: -14 }} />\n                  ))}\n                </Flex>\n                <Text\n                  style=\"body2\"\n                  color=\"subtle\"\n                  css={{ display: 'flex', alignItems: 'center' }}\n                >\n                  Approve {collectionName} for{' '}\n                  {marketplaces.length > 0 ? marketplaces : 'trading'}\n                </Text>\n                {isCurrentStep ? <Spinner /> : null}\n              </React.Fragment>\n            )\n          }\n        })}\n      </Grid>\n    </ApproveCollapsible>\n  )\n}\n","import { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { FC, PropsWithChildren, useEffect } from 'react'\nimport { Flex, Box, Text } from '../primitives'\nimport { CollapsibleContent, CollapsibleRoot } from '../primitives/Collapsible'\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible'\nimport { CSS } from '@stitches/react'\n\ntype Props = {\n  title?: string\n  isInProgress?: boolean\n  isComplete: boolean\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  css?: CSS\n} & PropsWithChildren\n\nexport const ApproveCollapsible: FC<Props> = ({\n  title,\n  isInProgress,\n  isComplete,\n  children,\n  open,\n  css,\n  onOpenChange,\n}) => {\n  useEffect(() => {\n    if (isComplete) {\n      onOpenChange(false)\n    }\n  }, [isComplete])\n\n  let backgroundColor = 'transparent'\n  let borderColor = '$neutralLine'\n\n  if (isComplete) {\n    backgroundColor = '$green6'\n    borderColor = '$green9'\n  } else if (isInProgress) {\n    backgroundColor = '$accentSolid'\n    borderColor = '$accentLine'\n  }\n\n  return (\n    <CollapsibleRoot\n      open={open}\n      onOpenChange={onOpenChange}\n      css={{ backgroundColor: '$gray3', ...css }}\n    >\n      <CollapsiblePrimitive.Trigger asChild>\n        <Flex justify=\"between\" css={{ p: '$4' }}>\n          <Flex align=\"center\" css={{ gap: '$3' }}>\n            <Box\n              css={{\n                width: 18,\n                height: 18,\n                backgroundColor: backgroundColor,\n                borderColor: borderColor,\n                borderStyle: 'solid',\n                borderWidth: 4,\n                borderRadius: 999,\n              }}\n            />\n            <Text\n              style=\"subtitle2\"\n              css={{ color: isComplete ? '$neutralText' : '$textColor' }}\n            >\n              {title}\n            </Text>\n          </Flex>\n          <Box\n            css={{\n              color: '$neutralSolid',\n              transform: open ? 'rotate(180deg)' : 'rotate(0)',\n              transition: '.3s',\n            }}\n          >\n            <FontAwesomeIcon icon={faChevronDown} />\n          </Box>\n        </Flex>\n      </CollapsiblePrimitive.Trigger>\n      <CollapsibleContent>{children}</CollapsibleContent>\n    </CollapsibleRoot>\n  )\n}\n","import { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Flex from './Flex'\nimport { ComponentPropsWithoutRef, useEffect, useState } from 'react'\nimport { styled } from '@stitches/react'\nimport React from 'react'\n\nconst StyledImg = styled('img')\n\nconst Img = (props: ComponentPropsWithoutRef<typeof StyledImg>) => {\n  const [imageBroken, setImageBroken] = useState(false)\n\n  useEffect(() => {\n    if (imageBroken) {\n      setImageBroken(false)\n    }\n  }, [props.src])\n\n  return imageBroken || !props.src ? (\n    <Flex\n      css={{ ...props.css, background: '$neutralBgActive' }}\n      justify=\"center\"\n      align=\"center\"\n    >\n      <FontAwesomeIcon icon={faImage} size=\"2x\" />\n    </Flex>\n  ) : (\n    <StyledImg\n      {...props}\n      onError={(e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n        setImageBroken(true)\n      }}\n    />\n  )\n}\n\nexport default Img\n","import React, { FC, useMemo } from 'react'\nimport { styled } from '../../../stitches.config'\nimport {\n  Flex,\n  FormatCryptoCurrency,\n  FormatCurrency,\n  Text,\n} from '../../primitives'\nimport { ReservoirChain } from '@reservoir0x/reservoir-sdk'\nimport {\n  AcceptBidPrice,\n  EnhancedAcceptBidTokenData,\n} from './AcceptBidModalRenderer'\nimport { useCoinConversion } from '../../hooks'\n\ntype Props = {\n  tokensData: EnhancedAcceptBidTokenData[]\n  prices: AcceptBidPrice[]\n  usdPrices: Record<string, ReturnType<typeof useCoinConversion>[0]>\n  chain?: ReservoirChain | null\n}\n\nconst Img = styled('img', {\n  height: 56,\n  width: 56,\n  borderRadius: 4,\n  overflow: 'hidden',\n  flexShrink: 0,\n  objectFit: 'cover',\n})\n\nconst AcceptBidSummaryLineItem: FC<Props> = ({\n  tokensData,\n  prices,\n  usdPrices,\n  chain,\n}) => {\n  const imgs = useMemo(() => {\n    if (!tokensData || tokensData.length <= 0) {\n      return []\n    }\n    const imgs: string[] = []\n    const baseApiUrl = chain?.baseApiUrl\n    for (var i = 0; i < tokensData.length; i++) {\n      const token = tokensData[i]\n      const contract = (token?.collectionId || '').split(':')[0]\n      const tokenId = `${contract}:${token?.tokenId}`\n      if (token?.tokenData?.token?.imageSmall || baseApiUrl) {\n        imgs.push(\n          `${baseApiUrl}/redirect/tokens/${tokenId}/image/v1?imageSize=small`\n        )\n      }\n      if (imgs.length > 2) {\n        break\n      }\n    }\n    return imgs\n  }, [tokensData, chain])\n\n  const itemCount = useMemo(\n    () =>\n      tokensData.reduce((total, tokenData) => {\n        tokenData.bidsPath.forEach((path) => {\n          total += path.quantity || 0\n        })\n        return total\n      }, 0),\n    [tokensData]\n  )\n  const usdPrice = useMemo(() => {\n    let missingConversion = false\n    const totalUsd = prices.reduce((total, { amount, currency }) => {\n      const conversion = usdPrices[currency.symbol]\n      if (conversion) {\n        total += conversion.price * amount\n      } else {\n        missingConversion = true\n      }\n      return total\n    }, 0)\n    return missingConversion ? 0 : totalUsd\n  }, [prices, usdPrices])\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ p: '$4', borderBottom: '1px solid $borderColor', gap: '$2' }}\n    >\n      <Flex justify=\"between\">\n        <Text color=\"subtle\" style=\"subtitle2\">\n          Item\n        </Text>\n        <Text color=\"subtle\" style=\"subtitle2\">\n          You Get\n        </Text>\n      </Flex>\n      <Flex align=\"center\">\n        <Flex css={{ mr: '$4', position: 'relative' }}>\n          <Img\n            src={imgs[0]}\n            alt={'Token Image'}\n            css={{\n              visibility: !imgs[0] ? 'hidden' : 'visible',\n              mr: itemCount > 1 && imgs[1] ? 8 : 0,\n            }}\n          />\n          {itemCount > 1 && imgs[1] ? (\n            <Img\n              src={imgs[1]}\n              alt={'Token Image'}\n              css={{\n                position: 'absolute',\n                right: -5,\n                zIndex: -1,\n                opacity: 0.5,\n              }}\n            />\n          ) : null}\n        </Flex>\n        <Text style=\"h6\">\n          {itemCount} {itemCount > 1 ? 'Items' : 'Item'}\n        </Text>\n\n        <Flex\n          align=\"end\"\n          justify=\"end\"\n          direction=\"column\"\n          css={{ ml: 'auto', gap: '$2' }}\n        >\n          <Flex align=\"center\">\n            {prices.map(({ netAmount, currency }, i) => {\n              return (\n                <span key={i}>\n                  {i > 0 ? (\n                    <Text color=\"subtle\" style=\"subtitle2\" css={{ mx: '$1' }}>\n                      +\n                    </Text>\n                  ) : null}\n                  <FormatCryptoCurrency\n                    amount={netAmount}\n                    address={currency.contract}\n                    decimals={currency.decimals}\n                    textStyle=\"h6\"\n                    logoWidth={19}\n                  />\n                </span>\n              )\n            })}\n          </Flex>\n          <FormatCurrency amount={usdPrice} style=\"tiny\" color=\"subtle\" />\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AcceptBidSummaryLineItem\n","import { useFallbackState, useReservoirClient, useTimeSince } from '../../hooks'\nimport React, { ReactElement, Dispatch, SetStateAction, useEffect } from 'react'\nimport { Flex, Text, Box, Button, Loader, Anchor } from '../../primitives'\nimport { CancelBidModalRenderer, CancelStep } from './CancelBidModalRenderer'\nimport { Modal } from '../Modal'\nimport TokenPrimitive from '../../modal/TokenPrimitive'\nimport Progress from '../Progress'\nimport { useNetwork } from 'wagmi'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleExclamation,\n  faGasPump,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ModalCopy = {\n  title: 'Cancel Offer',\n  ctaCancel: 'Continue to Cancel',\n  ctaAwaitingApproval: 'Waiting for approval...',\n  ctaAwaitingValidation: 'Waiting for transaction to be validated',\n  ctaClose: 'Close',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  bidId?: string\n  normalizeRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onClose?: (data: any, currentStep: CancelStep) => void\n  onCancelComplete?: (data: any) => void\n  onCancelError?: (error: Error, data: any) => void\n}\n\nexport function CancelBidModal({\n  openState,\n  bidId,\n  trigger,\n  normalizeRoyalties,\n  copyOverrides,\n  onClose,\n  onCancelComplete,\n  onCancelError,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n  const client = useReservoirClient()\n  const { chain: activeChain } = useNetwork()\n  const reservoirChain = client?.currentChain()\n\n  return (\n    <CancelBidModalRenderer\n      bidId={bidId}\n      open={open}\n      normalizeRoyalties={normalizeRoyalties}\n    >\n      {({\n        loading,\n        bid,\n        tokenId,\n        cancelStep,\n        transactionError,\n        stepData,\n        totalUsd,\n        blockExplorerBaseUrl,\n        cancelOrder,\n      }) => {\n        const expires = useTimeSince(bid?.expiration)\n        const collectionId = bid?.criteria?.data?.collection?.id\n        const bidImg = tokenId\n          ? `${reservoirChain?.baseApiUrl}/redirect/tokens/${collectionId}:${tokenId}/image/v1?imageSize=small`\n          : `${reservoirChain?.baseApiUrl}/redirect/collections/${collectionId}/image/v1`\n        const isAttributeOffer = (bid?.criteria?.kind as any) === 'attribute'\n\n        useEffect(() => {\n          if (cancelStep === CancelStep.Complete && onCancelComplete) {\n            const data = {\n              bid,\n              stepData: stepData,\n            }\n            onCancelComplete(data)\n          }\n        }, [cancelStep])\n\n        useEffect(() => {\n          if (transactionError && onCancelError) {\n            const data = {\n              bid,\n              stepData: stepData,\n            }\n            onCancelError(transactionError, data)\n          }\n        }, [transactionError])\n\n        const isBidAvailable =\n          bid &&\n          (bid.status === 'active' || bid.status === 'inactive') &&\n          !loading\n\n        const isOracleOrder = bid?.isNativeOffChainCancellable\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={copy.title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data = {\n                  bid,\n                  stepData: stepData,\n                }\n                onClose(data, cancelStep)\n              }\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            {!isBidAvailable && !loading && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{ px: '$4', py: '$6' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Selected bid is no longer available\n                </Text>\n              </Flex>\n            )}\n            {isBidAvailable && cancelStep === CancelStep.Cancel && (\n              <Flex direction=\"column\">\n                {transactionError && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      {transactionError.message}\n                    </Text>\n                  </Flex>\n                )}\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={bidImg}\n                    name={bid?.criteria?.data?.token?.name}\n                    price={bid?.price?.amount?.decimal}\n                    usdPrice={totalUsd}\n                    collection={bid?.criteria?.data?.collection?.name || ''}\n                    currencyContract={bid?.price?.currency?.contract}\n                    currencyDecimals={bid?.price?.currency?.decimals}\n                    currencySymbol={bid?.price?.currency?.symbol}\n                    expires={expires}\n                    source={(bid?.source?.icon as string) || ''}\n                    priceSubtitle=\"Offer\"\n                  />\n                </Box>\n                <Text\n                  style=\"body2\"\n                  color=\"subtle\"\n                  css={{ mt: '$3', mr: '$3', ml: '$3', textAlign: 'center' }}\n                >\n                  {!isOracleOrder\n                    ? 'This action will cancel your offer. You will be prompted to confirm this cancellation from your wallet. A gas fee is required.'\n                    : 'This will cancel your offer for free. You will be prompted to confirm this cancellation from your wallet.'}\n                </Text>\n                <Button onClick={cancelOrder} css={{ m: '$4' }}>\n                  {!isOracleOrder && (\n                    <FontAwesomeIcon icon={faGasPump} width=\"16\" height=\"16\" />\n                  )}\n                  {copy.ctaCancel}\n                </Button>\n              </Flex>\n            )}\n            {cancelStep === CancelStep.Approving && (\n              <Flex direction=\"column\">\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={bidImg}\n                    name={bid?.criteria?.data?.token?.name}\n                    price={bid?.price?.amount?.decimal}\n                    usdPrice={totalUsd}\n                    collection={bid?.criteria?.data?.collection?.name || ''}\n                    currencyContract={bid?.price?.currency?.contract}\n                    currencyDecimals={bid?.price?.currency?.decimals}\n                    currencySymbol={bid?.price?.currency?.symbol}\n                    expires={expires}\n                    source={(bid?.source?.icon as string) || ''}\n                    priceSubtitle=\"Offer\"\n                  />\n                </Box>\n                {!stepData && <Loader css={{ height: 206 }} />}\n                {stepData && (\n                  <>\n                    <Progress\n                      title={\n                        stepData?.currentStepItem.txHash\n                          ? 'Finalizing on blockchain'\n                          : 'Confirm cancelation in your wallet'\n                      }\n                      txHash={stepData?.currentStepItem.txHash}\n                      blockExplorerBaseUrl={`${blockExplorerBaseUrl}/tx/${stepData?.currentStepItem.txHash}`}\n                    />\n                    {isAttributeOffer && !stepData?.currentStepItem.txHash && (\n                      <Flex justify=\"center\">\n                        <Text\n                          style=\"body2\"\n                          color=\"subtle\"\n                          css={{ maxWidth: 400, textAlign: 'center', mx: '$3' }}\n                        >\n                          This will cancel your offer on all items that were\n                          included in this attribute offer.\n                        </Text>\n                      </Flex>\n                    )}\n                  </>\n                )}\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {stepData?.currentStepItem.txHash\n                    ? copy.ctaAwaitingValidation\n                    : copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n            {cancelStep === CancelStep.Complete && (\n              <Flex direction=\"column\">\n                <Flex\n                  css={{\n                    p: '$4',\n                    py: '$5',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Text style=\"h5\" css={{ mb: '$2' }}>\n                    Offer Canceled!\n                  </Text>\n                  <Text style=\"body2\" color=\"subtle\" css={{ mb: 24 }}>\n                    <>\n                      Your{' '}\n                      <Text style=\"body2\" color=\"accent\">\n                        {bid?.source?.name as string}\n                      </Text>{' '}\n                      offer for{' '}\n                      <Text style=\"body2\" color=\"accent\">\n                        {bid?.criteria?.data?.token?.name ||\n                          bid?.criteria?.data?.collection?.name}{' '}\n                      </Text>\n                      at {bid?.price?.amount?.decimal}{' '}\n                      {bid?.price?.currency?.symbol} has been canceled.\n                    </>\n                  </Text>\n\n                  <Anchor\n                    color=\"primary\"\n                    weight=\"medium\"\n                    css={{ fontSize: 12 }}\n                    href={`${blockExplorerBaseUrl}/tx/${stepData?.currentStepItem.txHash}`}\n                    target=\"_blank\"\n                  >\n                    View on{' '}\n                    {activeChain?.blockExplorers?.default.name || 'Etherscan'}\n                  </Anchor>\n                </Flex>\n                <Button\n                  onClick={() => {\n                    setOpen(false)\n                  }}\n                  css={{ m: '$4' }}\n                >\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </CancelBidModalRenderer>\n  )\n}\n\nCancelBidModal.Custom = CancelBidModalRenderer\n","import React, { FC, useEffect, useState, useCallback, ReactNode } from 'react'\nimport { useCoinConversion, useReservoirClient, useBids } from '../../hooks'\nimport { useWalletClient, useNetwork } from 'wagmi'\nimport { Execute } from '@reservoir0x/reservoir-sdk'\n\nexport enum CancelStep {\n  Cancel,\n  Approving,\n  Complete,\n}\n\nexport type CancelBidStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  currentStepItem: NonNullable<Execute['steps'][0]['items']>[0]\n}\n\ntype ChildrenProps = {\n  loading: boolean\n  bid?: NonNullable<ReturnType<typeof useBids>['data']>[0]\n  tokenId?: string\n  cancelStep: CancelStep\n  transactionError?: Error | null\n  totalUsd: number\n  usdPrice: number\n  blockExplorerBaseUrl: string\n  steps: Execute['steps'] | null\n  stepData: CancelBidStepData | null\n  setCancelStep: React.Dispatch<React.SetStateAction<CancelStep>>\n  cancelOrder: () => void\n}\n\ntype Props = {\n  open: boolean\n  bidId?: string\n  normalizeRoyalties?: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const CancelBidModalRenderer: FC<Props> = ({\n  open,\n  bidId,\n  normalizeRoyalties,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const [cancelStep, setCancelStep] = useState<CancelStep>(CancelStep.Cancel)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [stepData, setStepData] = useState<CancelBidStepData | null>(null)\n  const [steps, setSteps] = useState<Execute['steps'] | null>(null)\n  const { chain: activeChain } = useNetwork()\n  const blockExplorerBaseUrl =\n    activeChain?.blockExplorers?.default.url || 'https://etherscan.io'\n\n  const { data: bids, isFetchingPage } = useBids(\n    {\n      ids: bidId,\n      normalizeRoyalties,\n      includeCriteriaMetadata: true,\n      includeRawData: true,\n    },\n    {\n      revalidateFirstPage: true,\n    },\n    open && bidId ? true : false\n  )\n\n  const bid = bids && bids[0] ? bids[0] : undefined\n  const currency = bid?.price?.currency\n\n  const coinConversion = useCoinConversion(\n    open && bid ? 'USD' : undefined,\n    currency?.symbol\n  )\n  const usdPrice = coinConversion.length > 0 ? coinConversion[0].price : 0\n  const totalUsd = usdPrice * (bid?.price?.amount?.decimal || 0)\n\n  const client = useReservoirClient()\n\n  const cancelOrder = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!bidId) {\n      const error = new Error('Missing bid id to cancel')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    setCancelStep(CancelStep.Approving)\n\n    client.actions\n      .cancelOrder({\n        ids: [bidId],\n        wallet,\n        onProgress: (steps: Execute['steps']) => {\n          if (!steps) {\n            return\n          }\n          setSteps(steps)\n\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n\n          const currentStepIndex = executableSteps.findIndex((step) => {\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: currentStepIndex,\n              currentStep,\n              currentStepItem,\n            })\n          } else if (\n            steps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setCancelStep(CancelStep.Complete)\n          }\n        },\n      })\n      .catch((e: any) => {\n        const error = e as any\n        const errorStatus = (error as any)?.statusCode\n        let message = 'Oops, something went wrong. Please try again.'\n        if (errorStatus >= 400 && errorStatus < 500) {\n          message = error.message\n        }\n        const transactionError = new Error(message, {\n          cause: error,\n        })\n        setTransactionError(transactionError)\n        setCancelStep(CancelStep.Cancel)\n        setStepData(null)\n        setSteps(null)\n      })\n  }, [bidId, client, wallet])\n\n  useEffect(() => {\n    if (!open) {\n      setCancelStep(CancelStep.Cancel)\n      setTransactionError(null)\n      setStepData(null)\n      setSteps(null)\n    }\n  }, [open])\n\n  let tokenId\n\n  if (bid?.criteria?.kind === 'token') {\n    tokenId = bid?.tokenSetId?.split(':')[2]\n  }\n\n  return (\n    <>\n      {children({\n        loading: isFetchingPage !== undefined ? isFetchingPage : true,\n        bid,\n        tokenId,\n        cancelStep,\n        transactionError,\n        usdPrice,\n        totalUsd,\n        blockExplorerBaseUrl,\n        steps,\n        stepData,\n        setCancelStep,\n        cancelOrder,\n      })}\n    </>\n  )\n}\n","import { useFallbackState, useReservoirClient, useTimeSince } from '../../hooks'\nimport React, { ReactElement, Dispatch, SetStateAction, useEffect } from 'react'\nimport { Flex, Text, Box, Button, Loader, Anchor } from '../../primitives'\nimport {\n  CancelListingModalRenderer,\n  CancelStep,\n} from './CancelListingModalRenderer'\nimport { Modal } from '../Modal'\nimport TokenPrimitive from '../TokenPrimitive'\nimport Progress from '../Progress'\nimport { useNetwork } from 'wagmi'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleExclamation,\n  faGasPump,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ModalCopy = {\n  title: 'Cancel Listing',\n  ctaCancel: 'Continue to Cancel',\n  ctaAwaitingApproval: 'Waiting for approval...',\n  ctaAwaitingValidation: 'Waiting for transaction to be validated',\n  ctaClose: 'Close',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  listingId?: string\n  normalizeRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onClose?: (data: any, currentStep: CancelStep) => void\n  onCancelComplete?: (data: any) => void\n  onCancelError?: (error: Error, data: any) => void\n}\n\nexport function CancelListingModal({\n  openState,\n  listingId,\n  trigger,\n  normalizeRoyalties,\n  copyOverrides,\n  onClose,\n  onCancelComplete,\n  onCancelError,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n  const client = useReservoirClient()\n  const { chain: activeChain } = useNetwork()\n  const reservoirChain = client?.currentChain()\n\n  return (\n    <CancelListingModalRenderer\n      listingId={listingId}\n      open={open}\n      normalizeRoyalties={normalizeRoyalties}\n    >\n      {({\n        loading,\n        listing,\n        tokenId,\n        contract,\n        cancelStep,\n        transactionError,\n        stepData,\n        totalUsd,\n        blockExplorerBaseUrl,\n        cancelOrder,\n      }) => {\n        const expires = useTimeSince(listing?.expiration)\n        const listingImg = tokenId\n          ? `${reservoirChain?.baseApiUrl}/redirect/tokens/${contract}:${tokenId}/image/v1?imageSize=small`\n          : `${reservoirChain?.baseApiUrl}/redirect/collections/${contract}/image/v1`\n\n        useEffect(() => {\n          if (cancelStep === CancelStep.Complete && onCancelComplete) {\n            const data = {\n              listing,\n              stepData: stepData,\n            }\n            onCancelComplete(data)\n          }\n        }, [cancelStep])\n\n        useEffect(() => {\n          if (transactionError && onCancelError) {\n            const data = {\n              listing,\n              stepData: stepData,\n            }\n            onCancelError(transactionError, data)\n          }\n        }, [transactionError])\n\n        const isListingAvailable =\n          listing &&\n          (listing.status === 'active' || listing.status === 'inactive') &&\n          !loading\n\n        const isOracleOrder = listing?.isNativeOffChainCancellable\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={copy.title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data = {\n                  listing,\n                  stepData: stepData,\n                }\n                onClose(data, cancelStep)\n              }\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            {!isListingAvailable && !loading && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{ px: '$4', py: '$6' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Selected listing is no longer available\n                </Text>\n              </Flex>\n            )}\n            {isListingAvailable && cancelStep === CancelStep.Cancel && (\n              <Flex direction=\"column\">\n                {transactionError && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      {transactionError.message}\n                    </Text>\n                  </Flex>\n                )}\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={listingImg}\n                    name={listing.criteria?.data?.token?.name}\n                    price={listing?.price?.amount?.decimal}\n                    usdPrice={totalUsd}\n                    collection={listing.criteria?.data?.collection?.name || ''}\n                    currencyContract={listing.price?.currency?.contract}\n                    currencyDecimals={listing?.price?.currency?.decimals}\n                    currencySymbol={listing?.price?.currency?.symbol}\n                    expires={expires}\n                    source={(listing?.source?.icon as string) || ''}\n                  />\n                </Box>\n                <Text\n                  style=\"body2\"\n                  color=\"subtle\"\n                  css={{ mt: '$3', mr: '$3', ml: '$3', textAlign: 'center' }}\n                >\n                  {!isOracleOrder\n                    ? 'This action will cancel your listing. You will be prompted to confirm this cancellation from your wallet. A gas fee is required.'\n                    : 'This will cancel your listing for free. You will be prompted to confirm this cancellation from your wallet.'}\n                </Text>\n                <Button onClick={cancelOrder} css={{ m: '$4' }}>\n                  {!isOracleOrder && (\n                    <FontAwesomeIcon icon={faGasPump} width=\"16\" height=\"16\" />\n                  )}\n                  {copy.ctaCancel}\n                </Button>\n              </Flex>\n            )}\n            {cancelStep === CancelStep.Approving && (\n              <Flex direction=\"column\">\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={listingImg}\n                    name={listing?.criteria?.data?.token?.name}\n                    price={listing?.price?.amount?.decimal}\n                    usdPrice={totalUsd}\n                    collection={listing?.criteria?.data?.collection?.name || ''}\n                    currencyContract={listing?.price?.currency?.contract}\n                    currencyDecimals={listing?.price?.currency?.decimals}\n                    currencySymbol={listing?.price?.currency?.symbol}\n                    expires={expires}\n                    source={(listing?.source?.icon as string) || ''}\n                  />\n                </Box>\n                {!stepData && <Loader css={{ height: 206 }} />}\n                {stepData && (\n                  <>\n                    <Progress\n                      title={\n                        stepData?.currentStepItem.txHash\n                          ? 'Finalizing on blockchain'\n                          : 'Confirm cancelation in your wallet'\n                      }\n                      txHash={stepData?.currentStepItem.txHash}\n                      blockExplorerBaseUrl={`${blockExplorerBaseUrl}/tx/${stepData?.currentStepItem.txHash}`}\n                    />\n                  </>\n                )}\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {stepData?.currentStepItem.txHash\n                    ? copy.ctaAwaitingValidation\n                    : copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n            {cancelStep === CancelStep.Complete && (\n              <Flex direction=\"column\">\n                <Flex\n                  css={{\n                    p: '$4',\n                    py: '$5',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Text style=\"h5\" css={{ mb: '$2' }}>\n                    Listing Canceled!\n                  </Text>\n                  <Text style=\"body2\" color=\"subtle\" css={{ mb: 24 }}>\n                    <>\n                      Your{' '}\n                      <Text style=\"body2\" color=\"accent\">\n                        {listing?.source?.name as string}\n                      </Text>{' '}\n                      listing for{' '}\n                      <Text style=\"body2\" color=\"accent\">\n                        {listing?.criteria?.data?.token?.name ||\n                          listing?.criteria?.data?.collection?.name}{' '}\n                      </Text>\n                      at {listing?.price?.amount?.decimal}{' '}\n                      {listing?.price?.currency?.symbol} has been canceled.\n                    </>\n                  </Text>\n\n                  <Anchor\n                    color=\"primary\"\n                    weight=\"medium\"\n                    css={{ fontSize: 12 }}\n                    href={`${blockExplorerBaseUrl}/tx/${stepData?.currentStepItem.txHash}`}\n                    target=\"_blank\"\n                  >\n                    View on{' '}\n                    {activeChain?.blockExplorers?.default.name || 'Etherscan'}\n                  </Anchor>\n                </Flex>\n                <Button\n                  onClick={() => {\n                    setOpen(false)\n                  }}\n                  css={{ m: '$4' }}\n                >\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </CancelListingModalRenderer>\n  )\n}\n\nCancelListingModal.Custom = CancelListingModalRenderer\n","import React, { FC, useEffect, useState, useCallback, ReactNode } from 'react'\nimport { useCoinConversion, useReservoirClient, useListings } from '../../hooks'\nimport { useWalletClient, useNetwork } from 'wagmi'\nimport { Execute } from '@reservoir0x/reservoir-sdk'\n\nexport enum CancelStep {\n  Cancel,\n  Approving,\n  Complete,\n}\n\nexport type CancelListingStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  currentStepItem: NonNullable<Execute['steps'][0]['items']>[0]\n}\n\ntype ChildrenProps = {\n  loading: boolean\n  listing?: NonNullable<ReturnType<typeof useListings>['data']>[0]\n  tokenId?: string\n  contract?: string\n  cancelStep: CancelStep\n  transactionError?: Error | null\n  totalUsd: number\n  usdPrice: number\n  blockExplorerBaseUrl: string\n  steps: Execute['steps'] | null\n  stepData: CancelListingStepData | null\n  setCancelStep: React.Dispatch<React.SetStateAction<CancelStep>>\n  cancelOrder: () => void\n}\n\ntype Props = {\n  open: boolean\n  listingId?: string\n  normalizeRoyalties?: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const CancelListingModalRenderer: FC<Props> = ({\n  open,\n  listingId,\n  normalizeRoyalties,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const [cancelStep, setCancelStep] = useState<CancelStep>(CancelStep.Cancel)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [stepData, setStepData] = useState<CancelListingStepData | null>(null)\n  const [steps, setSteps] = useState<Execute['steps'] | null>(null)\n  const { chain: activeChain } = useNetwork()\n  const blockExplorerBaseUrl =\n    activeChain?.blockExplorers?.default.url || 'https://etherscan.io'\n\n  const { data: listings, isFetchingPage } = useListings(\n    {\n      ids: listingId,\n      normalizeRoyalties,\n      includeCriteriaMetadata: true,\n      includeRawData: true,\n    },\n    {\n      revalidateFirstPage: true,\n    },\n    open && listingId ? true : false\n  )\n\n  const listing = listings && listings[0] ? listings[0] : undefined\n  const currency = listing?.price?.currency\n\n  const coinConversion = useCoinConversion(\n    open && listing ? 'USD' : undefined,\n    currency?.symbol\n  )\n  const usdPrice = coinConversion.length > 0 ? coinConversion[0].price : 0\n  const totalUsd = usdPrice * (listing?.price?.amount?.decimal || 0)\n\n  const client = useReservoirClient()\n\n  const cancelOrder = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!listingId) {\n      const error = new Error('Missing list id to cancel')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    setCancelStep(CancelStep.Approving)\n\n    client.actions\n      .cancelOrder({\n        ids: [listingId],\n        wallet,\n        onProgress: (steps: Execute['steps']) => {\n          if (!steps) {\n            return\n          }\n          setSteps(steps)\n\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n\n          const currentStepIndex = executableSteps.findIndex((step) => {\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: currentStepIndex,\n              currentStep,\n              currentStepItem,\n            })\n          } else if (\n            steps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setCancelStep(CancelStep.Complete)\n          }\n        },\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        const errorStatus = (error as any)?.statusCode\n        let message = 'Oops, something went wrong. Please try again.'\n        if (errorStatus >= 400 && errorStatus < 500) {\n          message = error.message\n        }\n        //@ts-ignore: Should be fixed in an update to typescript\n        const transactionError = new Error(message, {\n          cause: error,\n        })\n        setTransactionError(transactionError)\n        setCancelStep(CancelStep.Cancel)\n        setStepData(null)\n        setSteps(null)\n      })\n  }, [listingId, client, wallet])\n\n  useEffect(() => {\n    if (!open) {\n      setCancelStep(CancelStep.Cancel)\n      setTransactionError(null)\n      setStepData(null)\n      setSteps(null)\n    }\n  }, [open])\n\n  const tokenId = listing?.tokenSetId?.split(':')[2]\n  const contract = listing?.tokenSetId?.split(':')[1]\n\n  return (\n    <>\n      {children({\n        loading: isFetchingPage !== undefined ? isFetchingPage : true,\n        listing,\n        tokenId,\n        contract,\n        cancelStep,\n        transactionError,\n        usdPrice,\n        totalUsd,\n        blockExplorerBaseUrl,\n        steps,\n        stepData,\n        setCancelStep,\n        cancelOrder,\n      })}\n    </>\n  )\n}\n","import { useFallbackState, useTimeSince } from '../../hooks'\nimport React, {\n  ReactElement,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react'\nimport {\n  Flex,\n  Text,\n  Box,\n  Button,\n  Loader,\n  Select,\n  CryptoCurrencyIcon,\n  Input,\n  FormatCurrency,\n  FormatWrappedCurrency,\n  Popover,\n  FormatCryptoCurrency,\n} from '../../primitives'\nimport PseudoInput from '../../primitives/PseudoInput'\nimport AttributeSelector from '../bid/AttributeSelector'\nimport { EditBidModalRenderer, EditBidStep } from './EditBidModalRenderer'\nimport { Modal } from '../Modal'\nimport TokenPrimitive from '../TokenPrimitive'\nimport Progress from '../Progress'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCheckCircle,\n  faChevronDown,\n  faCircleExclamation,\n  faClose,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ModalCopy = {\n  title: 'Edit Offer',\n  ctaClose: 'Close',\n  ctaConfirm: 'Confirm',\n  ctaConvertManually: 'Convert Manually',\n  ctaConvertAutomatically: '',\n  ctaAwaitingApproval: 'Waiting for approval...',\n  ctaAwaitingValidation: 'Waiting for transaction to be validated',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  bidId?: string\n  tokenId?: string\n  collectionId?: string\n  normalizeRoyalties?: boolean\n  enableOnChainRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onClose?: (data: any, currentStep: EditBidStep) => void\n  onEditBidComplete?: (data: any) => void\n  onEditBidError?: (error: Error, data: any) => void\n}\n\nexport function EditBidModal({\n  openState,\n  bidId,\n  tokenId,\n  collectionId,\n  trigger,\n  normalizeRoyalties,\n  copyOverrides,\n  onClose,\n  onEditBidComplete,\n  onEditBidError,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n\n  return (\n    <EditBidModalRenderer\n      bidId={bidId}\n      tokenId={tokenId}\n      collectionId={collectionId}\n      open={open}\n      normalizeRoyalties={normalizeRoyalties}\n    >\n      {({\n        loading,\n        bid,\n        attributes,\n        trait,\n        isOracleOrder,\n        isTokenBid,\n        bidAmount,\n        bidAmountUsd,\n        token,\n        collection,\n        editBidStep,\n        transactionError,\n        hasEnoughNativeCurrency,\n        hasEnoughWrappedCurrency,\n        amountToWrap,\n        balance,\n        wrappedBalance,\n        wrappedContractName,\n        wrappedContractAddress,\n        canAutomaticallyConvert,\n        convertLink,\n        royaltyBps,\n        expirationOptions,\n        expirationOption,\n        usdPrice,\n        stepData,\n        setTrait,\n        setBidAmount,\n        setExpirationOption,\n        editBid,\n      }) => {\n        const [attributeSelectorOpen, setAttributeSelectorOpen] =\n          useState(false)\n\n        const [attributesSelectable, setAttributesSelectable] = useState(false)\n        const tokenCount = collection?.tokenCount\n          ? +collection.tokenCount\n          : undefined\n\n        const itemImage = isTokenBid\n          ? bid?.criteria?.data?.token?.image || token?.token?.imageSmall\n          : bid?.criteria?.data?.collection?.image || collection?.image\n\n        const previousBidsExpiration = useTimeSince(bid?.expiration)\n\n        useEffect(() => {\n          if (editBidStep === EditBidStep.Complete && onEditBidComplete) {\n            const data = {\n              bid,\n              stepData: stepData,\n            }\n            onEditBidComplete(data)\n          }\n        }, [editBidStep])\n\n        useEffect(() => {\n          if (transactionError && onEditBidError) {\n            const data = {\n              bid,\n              stepData: stepData,\n            }\n            onEditBidError(transactionError, data)\n          }\n        }, [transactionError])\n\n        useEffect(() => {\n          if (open && attributes) {\n            let attributeCount = 0\n            for (let i = 0; i < attributes.length; i++) {\n              attributeCount += attributes[i].attributeCount || 0\n              if (attributeCount >= 2000) {\n                break\n              }\n            }\n            if (attributeCount >= 2000) {\n              setAttributesSelectable(false)\n            } else {\n              setAttributesSelectable(true)\n            }\n          } else {\n            setAttributesSelectable(false)\n          }\n        }, [open, attributes])\n\n        const isBidAvailable = bid && bid.status === 'active' && !loading\n\n        const isBidEditable =\n          bid && bid.status === 'active' && !loading && isOracleOrder\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={copy.title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data = {\n                  bid,\n                  stepData: stepData,\n                }\n                onClose(data, editBidStep)\n              }\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            {!isBidAvailable && !loading && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{ px: '$4', py: '$6' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Selected offer is no longer available\n                </Text>\n              </Flex>\n            )}\n            {!isBidEditable && isBidAvailable && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{ px: '$4', py: '$6' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Selected offer is not an oracle order, so cannot be edited.\n                </Text>\n              </Flex>\n            )}\n            {isBidEditable && editBidStep === EditBidStep.Edit && (\n              <Flex direction=\"column\">\n                {transactionError && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      {transactionError.message}\n                    </Text>\n                  </Flex>\n                )}\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={itemImage}\n                    name={bid?.criteria?.data?.token?.name}\n                    price={bid?.price?.amount?.decimal}\n                    priceSubtitle=\"Price\"\n                    royaltiesBps={royaltyBps}\n                    usdPrice={\n                      (bid?.price?.amount?.decimal as number) * (usdPrice || 0)\n                    }\n                    collection={bid?.criteria?.data?.collection?.name || ''}\n                    currencyContract={bid?.price?.currency?.contract}\n                    currencyDecimals={bid?.price?.currency?.decimals}\n                    currencySymbol={bid?.price?.currency?.symbol}\n                    expires={previousBidsExpiration}\n                    source={(bid?.source?.icon as string) || ''}\n                  />\n                </Box>\n                <Flex direction=\"column\" css={{ px: '$4', py: '$2' }}>\n                  <Flex css={{ mb: '$2' }} justify=\"between\">\n                    <Text style=\"subtitle2\" color=\"subtle\" as=\"p\">\n                      Set New Offer\n                    </Text>\n                    {wrappedBalance?.value ? (\n                      <Text\n                        as={Flex}\n                        css={{ gap: '$1' }}\n                        align=\"center\"\n                        style=\"tiny\"\n                      >\n                        Balance:{' '}\n                        <FormatWrappedCurrency\n                          logoWidth={10}\n                          textStyle=\"tiny\"\n                          amount={wrappedBalance?.value}\n                          decimals={wrappedBalance?.decimals}\n                          address={wrappedContractAddress}\n                          symbol={wrappedBalance?.symbol}\n                        />{' '}\n                      </Text>\n                    ) : null}\n                  </Flex>\n                  <Flex css={{ gap: '$2' }}>\n                    <Text\n                      as={Flex}\n                      css={{ gap: '$2', flexShrink: 0 }}\n                      align=\"center\"\n                      style=\"body1\"\n                      color=\"subtle\"\n                    >\n                      <CryptoCurrencyIcon\n                        css={{ height: 20 }}\n                        address={wrappedContractAddress}\n                      />\n                      {wrappedContractName}\n                    </Text>\n                    <Input\n                      type=\"number\"\n                      value={bidAmount}\n                      onChange={(e) => {\n                        setBidAmount(e.target.value)\n                      }}\n                      placeholder=\"Enter price here\"\n                      containerCss={{\n                        width: '100%',\n                      }}\n                      css={{\n                        color: '$neutralText',\n                        textAlign: 'left',\n                      }}\n                    />\n                  </Flex>\n                  <FormatCurrency\n                    css={{\n                      marginLeft: 'auto',\n                      mt: '$2',\n                      display: 'inline-block',\n                      minHeight: 15,\n                    }}\n                    style=\"tiny\"\n                    amount={bidAmountUsd}\n                  />\n                  {attributes &&\n                    attributes.length > 0 &&\n                    (attributesSelectable || trait) &&\n                    !isTokenBid && (\n                      <Flex direction=\"column\" css={{ mb: '$3' }}>\n                        <Text\n                          as=\"div\"\n                          css={{ mb: '$2' }}\n                          style=\"subtitle2\"\n                          color=\"subtle\"\n                        >\n                          Attributes\n                        </Text>\n                        <Popover.Root\n                          open={attributeSelectorOpen}\n                          onOpenChange={\n                            attributesSelectable\n                              ? setAttributeSelectorOpen\n                              : undefined\n                          }\n                        >\n                          <Popover.Trigger asChild>\n                            <PseudoInput>\n                              <Flex\n                                justify=\"between\"\n                                css={{\n                                  gap: '$2',\n                                  alignItems: 'center',\n                                  color: '$neutralText',\n                                }}\n                              >\n                                {trait ? (\n                                  <>\n                                    <Box\n                                      css={{\n                                        maxWidth: 385,\n                                        overflow: 'hidden',\n                                        textOverflow: 'ellipsis',\n                                        whiteSpace: 'nowrap',\n                                      }}\n                                    >\n                                      <Text color=\"accent\" style=\"subtitle1\">\n                                        {trait?.key}:{' '}\n                                      </Text>\n                                      <Text style=\"subtitle1\">\n                                        {trait?.value}\n                                      </Text>\n                                    </Box>\n                                    <Flex\n                                      css={{\n                                        alignItems: 'center',\n                                        gap: '$2',\n                                      }}\n                                    >\n                                      {trait?.floorAskPrice && (\n                                        <Box css={{ flex: 'none' }}>\n                                          <FormatCryptoCurrency\n                                            amount={trait?.floorAskPrice}\n                                            maximumFractionDigits={2}\n                                            logoWidth={11}\n                                          />\n                                        </Box>\n                                      )}\n                                      <FontAwesomeIcon\n                                        style={{\n                                          cursor: 'pointer',\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault()\n                                          setTrait(undefined)\n                                        }}\n                                        icon={faClose}\n                                        width={16}\n                                        height={16}\n                                      />\n                                    </Flex>\n                                  </>\n                                ) : (\n                                  <>\n                                    <Text\n                                      css={{\n                                        color: '$neutralText',\n                                      }}\n                                    >\n                                      All Attributes\n                                    </Text>\n                                    <FontAwesomeIcon\n                                      icon={faChevronDown}\n                                      width={16}\n                                      height={16}\n                                    />\n                                  </>\n                                )}\n                              </Flex>\n                            </PseudoInput>\n                          </Popover.Trigger>\n                          <Popover.Content sideOffset={-50}>\n                            <AttributeSelector\n                              attributes={attributes}\n                              tokenCount={tokenCount}\n                              setTrait={setTrait}\n                              setOpen={setAttributeSelectorOpen}\n                            />\n                          </Popover.Content>\n                        </Popover.Root>\n                      </Flex>\n                    )}\n                  <Box css={{ mb: '$3' }}>\n                    <Text\n                      as=\"div\"\n                      css={{ mb: '$2' }}\n                      style=\"subtitle2\"\n                      color=\"subtle\"\n                    >\n                      Expiration Date\n                    </Text>\n                    <Select\n                      value={expirationOption?.text || ''}\n                      onValueChange={(value: string) => {\n                        const option = expirationOptions.find(\n                          (option) => option.value == value\n                        )\n                        if (option) {\n                          setExpirationOption(option)\n                        }\n                      }}\n                    >\n                      {expirationOptions.map((option) => (\n                        <Select.Item key={option.text} value={option.value}>\n                          <Select.ItemText>{option.text}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select>\n                  </Box>\n\n                  <Flex\n                    css={{\n                      gap: '$3',\n                      py: '$3',\n                    }}\n                  >\n                    {hasEnoughWrappedCurrency ? (\n                      <>\n                        <Button\n                          onClick={() => {\n                            setOpen(false)\n                          }}\n                          color=\"secondary\"\n                          css={{ flex: 1 }}\n                        >\n                          {copy.ctaClose}\n                        </Button>\n                        <Button\n                          disabled={bidAmount === '' || bidAmount === '0'}\n                          onClick={editBid}\n                          css={{ flex: 1 }}\n                        >\n                          {copy.ctaConfirm}\n                        </Button>\n                      </>\n                    ) : (\n                      <Box css={{ width: '100%', mt: 'auto' }}>\n                        {!hasEnoughNativeCurrency && (\n                          <Flex css={{ gap: '$2', mt: 10 }} justify=\"center\">\n                            <Text style=\"body3\" color=\"error\">\n                              {balance?.symbol || 'ETH'} Balance\n                            </Text>\n                            <FormatCryptoCurrency\n                              amount={balance?.value}\n                              symbol={balance?.symbol}\n                            />\n                          </Flex>\n                        )}\n                        <Flex\n                          css={{\n                            gap: '$2',\n                            mt: 10,\n                            overflow: 'hidden',\n                            flexDirection: 'column-reverse',\n                            '@bp1': {\n                              flexDirection: 'row',\n                            },\n                          }}\n                        >\n                          <Button\n                            css={{ flex: '1 0 auto' }}\n                            color=\"secondary\"\n                            onClick={() => {\n                              window.open(convertLink, '_blank')\n                            }}\n                          >\n                            {copy.ctaConvertManually}\n                          </Button>\n\n                          {canAutomaticallyConvert && (\n                            <Button\n                              css={{ flex: 1, maxHeight: 44 }}\n                              disabled={!hasEnoughNativeCurrency}\n                              onClick={editBid}\n                            >\n                              <Text style=\"h6\" color=\"button\" ellipsify>\n                                {copy.ctaConvertAutomatically.length > 0\n                                  ? copy.ctaConvertAutomatically\n                                  : `Convert ${amountToWrap} ${\n                                      balance?.symbol || 'ETH'\n                                    } for me`}\n                              </Text>\n                            </Button>\n                          )}\n                        </Flex>\n                      </Box>\n                    )}\n                  </Flex>\n                </Flex>\n              </Flex>\n            )}\n            {editBidStep === EditBidStep.Approving && (\n              <Flex direction=\"column\">\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={itemImage}\n                    name={bid?.criteria?.data?.token?.name}\n                    price={Number(bidAmount)}\n                    usdPrice={bidAmountUsd}\n                    collection={collection?.name || ''}\n                    currencyContract={bid?.price?.currency?.contract}\n                    currencyDecimals={bid?.price?.currency?.decimals}\n                    currencySymbol={bid?.price?.currency?.symbol}\n                    expires={`in ${expirationOption.text.toLowerCase()}`}\n                    source={(bid?.source?.icon as string) || ''}\n                  />\n                </Box>\n                {!stepData && <Loader css={{ height: 206 }} />}\n                {stepData && (\n                  <>\n                    <Progress\n                      title={\n                        stepData?.currentStepItem.txHash\n                          ? 'Finalizing on blockchain'\n                          : 'Approve Reservoir Oracle to update the offer'\n                      }\n                      txHash={stepData?.currentStepItem.txHash}\n                    />\n                  </>\n                )}\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {stepData?.currentStepItem.txHash\n                    ? copy.ctaAwaitingValidation\n                    : copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n            {editBidStep === EditBidStep.Complete && (\n              <Flex direction=\"column\">\n                <Flex\n                  css={{\n                    p: '$4',\n                    py: '$5',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Box css={{ color: '$successAccent', mb: 24 }}>\n                    <FontAwesomeIcon icon={faCheckCircle} size=\"3x\" />\n                  </Box>\n                  <Text style=\"h5\" css={{ mb: '$4' }}>\n                    Offer Updated!\n                  </Text>\n                  <Text style=\"body2\" color=\"subtle\" css={{ mb: 24 }}>\n                    Your offer for{' '}\n                    <Text style=\"body2\" color=\"base\">\n                      {token?.token?.name}\n                    </Text>{' '}\n                    has been updated.\n                  </Text>\n                </Flex>\n                <Button\n                  onClick={() => {\n                    setOpen(false)\n                  }}\n                  css={{ m: '$4' }}\n                >\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </EditBidModalRenderer>\n  )\n}\n\nEditBidModal.Custom = EditBidModalRenderer\n","import React, { FC, useEffect, useState, useCallback, ReactNode } from 'react'\nimport {\n  useCoinConversion,\n  useReservoirClient,\n  useListings,\n  useTokens,\n  useCollections,\n  useChainCurrency,\n  useBids,\n  useAttributes,\n} from '../../hooks'\nimport { useWalletClient, useAccount, useBalance, useNetwork } from 'wagmi'\nimport { mainnet, goerli } from 'wagmi/chains'\n\nimport { Execute } from '@reservoir0x/reservoir-sdk'\nimport { ExpirationOption } from '../../types/ExpirationOption'\nimport expirationOptions from '../../lib/defaultExpirationOptions'\nimport dayjs from 'dayjs'\nimport wrappedContractNames from '../../constants/wrappedContractNames'\nimport wrappedContracts from '../../constants/wrappedContracts'\nimport {\n  BidData,\n  FetchBalanceResult,\n  Trait,\n  Traits,\n} from '../bid/BidModalRenderer'\nimport { formatBN } from '../../lib/numbers'\nimport { parseUnits } from 'viem'\n\nexport enum EditBidStep {\n  Edit,\n  Approving,\n  Complete,\n}\n\nexport type EditBidStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  currentStepItem: NonNullable<Execute['steps'][0]['items']>[0]\n}\n\ntype ChildrenProps = {\n  loading: boolean\n  bid?: NonNullable<ReturnType<typeof useBids>['data']>[0]\n  attributes?: Traits\n  trait: Trait\n  tokenId?: string\n  contract?: string\n  isOracleOrder: boolean\n  isTokenBid: boolean\n  bidAmount: string\n  bidAmountUsd: number\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>[0]\n  currency: NonNullable<\n    NonNullable<ReturnType<typeof useListings>['data']>[0]['price']\n  >['currency']\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  editBidStep: EditBidStep\n  transactionError?: Error | null\n  hasEnoughNativeCurrency: boolean\n  hasEnoughWrappedCurrency: boolean\n  balance?: FetchBalanceResult\n  wrappedBalance?: FetchBalanceResult\n  wrappedContractName: string\n  wrappedContractAddress: string\n  amountToWrap: string\n  canAutomaticallyConvert: boolean\n  convertLink: string\n  royaltyBps?: number\n  expirationOptions: ExpirationOption[]\n  expirationOption: ExpirationOption\n  usdPrice: number\n  steps: Execute['steps'] | null\n  stepData: EditBidStepData | null\n  setTrait: React.Dispatch<React.SetStateAction<Trait>>\n  setBidAmount: React.Dispatch<React.SetStateAction<string>>\n  setExpirationOption: React.Dispatch<React.SetStateAction<ExpirationOption>>\n  setEditBidStep: React.Dispatch<React.SetStateAction<EditBidStep>>\n  editBid: () => void\n}\n\ntype Props = {\n  open: boolean\n  bidId?: string\n  tokenId?: string\n  attribute?: Trait\n  collectionId?: string\n  normalizeRoyalties?: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const EditBidModalRenderer: FC<Props> = ({\n  open,\n  bidId,\n  tokenId,\n  collectionId,\n  attribute,\n  normalizeRoyalties,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const [editBidStep, setEditBidStep] = useState<EditBidStep>(EditBidStep.Edit)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [stepData, setStepData] = useState<EditBidStepData | null>(null)\n  const [steps, setSteps] = useState<Execute['steps'] | null>(null)\n  const [bidAmount, setBidAmount] = useState<string>('')\n  const [expirationOption, setExpirationOption] = useState<ExpirationOption>(\n    expirationOptions[5]\n  )\n  const [hasEnoughNativeCurrency, setHasEnoughNativeCurrency] = useState(false)\n  const [hasEnoughWrappedCurrency, setHasEnoughWrappedCurrency] =\n    useState(false)\n  const [amountToWrap, setAmountToWrap] = useState('')\n  const [trait, setTrait] = useState<Trait>(attribute)\n  const [attributes, setAttributes] = useState<Traits>()\n  const chainCurrency = useChainCurrency()\n\n  const nativeWrappedContractAddress =\n    chainCurrency.chainId in wrappedContracts\n      ? wrappedContracts[chainCurrency.chainId]\n      : wrappedContracts[1]\n  const nativeWrappedContractName =\n    chainCurrency.chainId in wrappedContractNames\n      ? wrappedContractNames[chainCurrency.chainId]\n      : wrappedContractNames[1]\n\n  const { data: bids } = useBids(\n    {\n      ids: bidId,\n      normalizeRoyalties,\n      includeCriteriaMetadata: true,\n      includeRawData: true,\n    },\n    {\n      revalidateFirstPage: true,\n    },\n    open && bidId ? true : false\n  )\n\n  const bid = bids && bids[0] ? bids[0] : undefined\n\n  const contract = bid?.tokenSetId?.split(':')[1]\n  const currency = bid?.price?.currency\n\n  const isOracleOrder = bid?.isNativeOffChainCancellable as boolean\n\n  const wrappedContractAddress = currency\n    ? (currency.contract as string)\n    : nativeWrappedContractAddress\n  const wrappedContractName = currency\n    ? (currency.symbol as string)\n    : nativeWrappedContractName\n\n  useEffect(() => {\n    if (bid?.price?.amount?.decimal) {\n      setBidAmount(bid?.price?.amount?.decimal.toString())\n    }\n  }, [bid?.price])\n\n  const coinConversion = useCoinConversion(\n    open && bid ? 'USD' : undefined,\n    wrappedContractName\n  )\n  const usdPrice = coinConversion.length > 0 ? coinConversion[0].price : 0\n\n  const bidAmountUsd = +bidAmount * (usdPrice || 0)\n\n  const client = useReservoirClient()\n\n  const { address } = useAccount()\n  const { data: balance } = useBalance({\n    address: address,\n    watch: open,\n  })\n\n  const { data: wrappedBalance } = useBalance({\n    token: wrappedContractAddress as any,\n    address: address,\n    watch: open,\n    chainId: client?.currentChain()?.id,\n  })\n\n  const { chain } = useNetwork()\n  const canAutomaticallyConvert =\n    !currency || currency.contract === nativeWrappedContractAddress\n  let convertLink: string = ''\n\n  if (canAutomaticallyConvert) {\n    convertLink =\n      chain?.id === mainnet.id || chain?.id === goerli.id\n        ? `https://app.uniswap.org/#/swap?theme=dark&exactAmount=${amountToWrap}&chain=${\n            chain?.network || 'mainnet'\n          }&inputCurrency=eth&outputCurrency=${wrappedContractAddress}`\n        : `https://app.uniswap.org/#/swap?theme=dark&exactAmount=${amountToWrap}`\n  } else {\n    convertLink = `https://jumper.exchange/?toChain=${chain?.id}&toToken=${wrappedContractAddress}`\n  }\n\n  const isTokenBid = bid?.criteria?.kind == 'token'\n\n  const { data: traits } = useAttributes(\n    open && !isTokenBid ? collectionId : undefined\n  )\n\n  const { data: collections } = useCollections(\n    open && {\n      id: collectionId,\n      includeTopBid: true,\n      normalizeRoyalties,\n    }\n  )\n  const collection = collections && collections[0] ? collections[0] : undefined\n  let royaltyBps = collection?.royalties?.bps\n\n  const { data: tokens } = useTokens(\n    open && {\n      tokens: [`${contract}:${tokenId}`],\n      includeAttributes: true,\n      normalizeRoyalties,\n    },\n    {\n      revalidateFirstPage: true,\n    }\n  )\n\n  const token = tokens && tokens.length > 0 ? tokens[0] : undefined\n\n  useEffect(() => {\n    if (bidAmount !== '') {\n      const bid = parseUnits(\n        `${Number(bidAmount)}`,\n        wrappedBalance?.decimals || 18\n      )\n\n      if (!wrappedBalance?.value || wrappedBalance?.value < bid) {\n        setHasEnoughWrappedCurrency(false)\n        const wrappedAmount = wrappedBalance?.value || 0n\n        const amountToWrap = bid - wrappedAmount\n        setAmountToWrap(formatBN(amountToWrap, 5))\n\n        if (!balance?.value || balance.value < amountToWrap) {\n          setHasEnoughNativeCurrency(false)\n        } else {\n          setHasEnoughNativeCurrency(true)\n        }\n      } else {\n        setHasEnoughWrappedCurrency(true)\n        setHasEnoughNativeCurrency(true)\n        setAmountToWrap('')\n      }\n    } else {\n      setHasEnoughNativeCurrency(true)\n      setHasEnoughWrappedCurrency(true)\n      setAmountToWrap('')\n    }\n  }, [bidAmount, balance, wrappedBalance])\n\n  useEffect(() => {\n    const validAttributes = traits\n      ? traits.filter(\n          (attribute) => attribute.values && attribute.values.length > 0\n        )\n      : undefined\n    setAttributes(validAttributes)\n  }, [traits])\n\n  useEffect(() => {\n    //@ts-ignore\n    if (bid?.criteria?.kind == 'attribute' && bid?.criteria?.data.attribute) {\n      //@ts-ignore\n      setTrait(bid?.criteria?.data?.attribute)\n    }\n  }, [bid])\n\n  useEffect(() => {\n    if (!open) {\n      setEditBidStep(EditBidStep.Edit)\n      setExpirationOption(expirationOptions[3])\n      setHasEnoughNativeCurrency(false)\n      setHasEnoughWrappedCurrency(false)\n      setAmountToWrap('')\n      setBidAmount('')\n      setStepData(null)\n      setTransactionError(null)\n      setTrait(undefined)\n    } else {\n      setTrait(attribute)\n    }\n  }, [open])\n\n  const editBid = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!bidId) {\n      const error = new Error('Missing bid id to edit')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!isOracleOrder) {\n      const error = new Error('Not an oracle powered offer')\n      setTransactionError(error)\n      throw error\n    }\n\n    setTransactionError(null)\n\n    let expirationTime: string | null = null\n\n    if (expirationOption.relativeTime && expirationOption.relativeTimeUnit) {\n      expirationTime = dayjs()\n        .add(expirationOption.relativeTime, expirationOption.relativeTimeUnit)\n        .unix()\n        .toString()\n    }\n\n    const bid: BidData = {\n      weiPrice: parseUnits(\n        `${Number(bidAmount)}`,\n        wrappedBalance?.decimals || 18\n      ).toString(),\n      orderbook: 'reservoir',\n      orderKind: 'seaport-v1.4',\n      attributeKey: trait?.key,\n      attributeValue: trait?.value,\n    }\n\n    if (isTokenBid && tokenId && collectionId) {\n      const contract = collectionId ? collectionId?.split(':')[0] : undefined\n      bid.token = `${contract}:${tokenId}`\n    } else if (collectionId) {\n      bid.collection = collectionId\n    }\n\n    if (nativeWrappedContractAddress != wrappedContractAddress) {\n      bid.currency = wrappedContractAddress\n    }\n\n    if (expirationTime) {\n      bid.expirationTime = expirationTime\n    }\n\n    bid.options = {\n      'seaport-v1.4': {\n        useOffChainCancellation: true,\n        replaceOrderId: bidId,\n      },\n    }\n\n    setEditBidStep(EditBidStep.Approving)\n\n    client.actions\n      .placeBid({\n        bids: [bid],\n        wallet,\n        onProgress: (steps: Execute['steps']) => {\n          if (!steps) {\n            return\n          }\n          setSteps(steps)\n\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n\n          const currentStepIndex = executableSteps.findIndex((step) => {\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: currentStepIndex,\n              currentStep,\n              currentStepItem,\n            })\n          } else if (\n            steps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setEditBidStep(EditBidStep.Complete)\n          }\n        },\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        //@ts-ignore: Should be fixed in an update to typescript\n        const transactionError = new Error(error?.message || '', {\n          cause: error,\n        })\n        setTransactionError(transactionError)\n        setEditBidStep(EditBidStep.Edit)\n        setStepData(null)\n        setSteps(null)\n      })\n  }, [\n    client,\n    wallet,\n    collectionId,\n    tokenId,\n    expirationOption,\n    trait,\n    bidAmount,\n    wrappedBalance,\n    wrappedContractAddress,\n    nativeWrappedContractAddress,\n  ])\n\n  return (\n    <>\n      {children({\n        loading: !bid || !collection,\n        bid,\n        attributes,\n        trait,\n        tokenId,\n        contract,\n        isOracleOrder,\n        isTokenBid,\n        bidAmount,\n        bidAmountUsd,\n        token,\n        currency,\n        collection,\n        editBidStep,\n        transactionError,\n        hasEnoughNativeCurrency,\n        hasEnoughWrappedCurrency,\n        balance,\n        wrappedBalance,\n        wrappedContractName,\n        wrappedContractAddress,\n        amountToWrap,\n        convertLink,\n        canAutomaticallyConvert,\n        royaltyBps,\n        expirationOptions,\n        expirationOption,\n        usdPrice,\n        steps,\n        stepData,\n        setTrait,\n        setBidAmount,\n        setExpirationOption,\n        setEditBidStep,\n        editBid,\n      })}\n    </>\n  )\n}\n","import { useFallbackState, useTimeSince } from '../../hooks'\nimport React, { ReactElement, Dispatch, SetStateAction, useEffect } from 'react'\nimport { Flex, Text, Box, Button, Loader, Select } from '../../primitives'\nimport {\n  EditListingModalRenderer,\n  EditListingStep,\n} from './EditListingModalRenderer'\nimport { Modal } from '../Modal'\nimport TokenPrimitive from '../TokenPrimitive'\nimport Progress from '../Progress'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCheckCircle,\n  faCircleExclamation,\n} from '@fortawesome/free-solid-svg-icons'\nimport PriceInput from './PriceInput'\nimport InfoTooltip from '../../primitives/InfoTooltip'\nimport { zeroAddress } from 'viem'\n\nconst ModalCopy = {\n  title: 'Edit Listing',\n  ctaClose: 'Close',\n  ctaConfirm: 'Confirm',\n  ctaConvertManually: 'Convert Manually',\n  ctaConvertAutomatically: '',\n  ctaAwaitingApproval: 'Waiting for approval...',\n  ctaAwaitingValidation: 'Waiting for transaction to be validated',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  listingId?: string\n  tokenId?: string\n  collectionId?: string\n  normalizeRoyalties?: boolean\n  enableOnChainRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onClose?: (data: any, currentStep: EditListingStep) => void\n  onEditListingComplete?: (data: any) => void\n  onEditListingError?: (error: Error, data: any) => void\n}\n\nconst MINIMUM_AMOUNT = 0.000001\n\nexport function EditListingModal({\n  openState,\n  listingId,\n  tokenId,\n  collectionId,\n  trigger,\n  normalizeRoyalties,\n  enableOnChainRoyalties = false,\n  copyOverrides,\n  onClose,\n  onEditListingComplete,\n  onEditListingError,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n\n  return (\n    <EditListingModalRenderer\n      listingId={listingId}\n      tokenId={tokenId}\n      collectionId={collectionId}\n      open={open}\n      normalizeRoyalties={normalizeRoyalties}\n      enableOnChainRoyalties={enableOnChainRoyalties}\n    >\n      {({\n        loading,\n        listing,\n        token,\n        price,\n        currency,\n        isOracleOrder,\n        quantityAvailable,\n        collection,\n        quantity,\n        expirationOption,\n        expirationOptions,\n        editListingStep,\n        transactionError,\n        usdPrice,\n        totalUsd,\n        royaltyBps,\n        stepData,\n        setPrice,\n        setQuantity,\n        setExpirationOption,\n        editListing,\n      }) => {\n        const expires = useTimeSince(listing?.expiration)\n\n        const profit =\n          (1 - (collection?.royalties?.bps || 0) * 0.0001) *\n          (price || 0) *\n          quantity\n        100\n\n        const updatedTotalUsd = profit * usdPrice\n\n        useEffect(() => {\n          if (\n            editListingStep === EditListingStep.Complete &&\n            onEditListingComplete\n          ) {\n            const data = {\n              listing,\n              stepData: stepData,\n            }\n            onEditListingComplete(data)\n          }\n        }, [editListingStep])\n\n        useEffect(() => {\n          if (transactionError && onEditListingError) {\n            const data = {\n              listing,\n              stepData: stepData,\n            }\n            onEditListingError(transactionError, data)\n          }\n        }, [transactionError])\n\n        const isListingAvailable =\n          listing &&\n          (listing.status === 'active' || listing.status === 'inactive') &&\n          !loading\n\n        const isListingEditable =\n          listing && listing.status === 'active' && !loading && isOracleOrder\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={copy.title}\n            open={open}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data = {\n                  listing,\n                  stepData: stepData,\n                }\n                onClose(data, editListingStep)\n              }\n              setOpen(open)\n            }}\n            loading={loading}\n          >\n            {!isListingAvailable && !loading && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{ px: '$4', py: '$6' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Selected listing is no longer available\n                </Text>\n              </Flex>\n            )}\n            {!isListingEditable && isListingAvailable && (\n              <Flex\n                direction=\"column\"\n                justify=\"center\"\n                css={{ px: '$4', py: '$6' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  Selected listing is not an oracle order, so cannot be edited.\n                </Text>\n              </Flex>\n            )}\n            {isListingEditable && editListingStep === EditListingStep.Edit && (\n              <Flex direction=\"column\">\n                {transactionError && (\n                  <Flex\n                    css={{\n                      color: '$errorAccent',\n                      p: '$4',\n                      gap: '$2',\n                      background: '$wellBackground',\n                    }}\n                    align=\"center\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faCircleExclamation}\n                      width={16}\n                      height={16}\n                    />\n                    <Text style=\"body3\" color=\"errorLight\">\n                      {transactionError.message}\n                    </Text>\n                  </Flex>\n                )}\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={token?.token?.imageSmall}\n                    name={listing.criteria?.data?.token?.name}\n                    price={listing?.price?.amount?.decimal}\n                    priceSubtitle=\"Price\"\n                    royaltiesBps={royaltyBps}\n                    usdPrice={totalUsd}\n                    collection={listing.criteria?.data?.collection?.name || ''}\n                    currencyContract={listing.price?.currency?.contract}\n                    currencyDecimals={listing?.price?.currency?.decimals}\n                    currencySymbol={listing?.price?.currency?.symbol}\n                    expires={expires}\n                    source={(listing?.source?.icon as string) || ''}\n                    quantity={listing?.quantityRemaining}\n                  />\n                </Box>\n                <Flex direction=\"column\" css={{ px: '$4', py: '$2' }}>\n                  {quantityAvailable > 1 && (\n                    <>\n                      <Box css={{ mb: '$2' }}>\n                        <Text\n                          as=\"div\"\n                          css={{ mb: '$2' }}\n                          style=\"subtitle2\"\n                          color=\"subtle\"\n                        >\n                          Quantity\n                        </Text>\n                        <Select\n                          value={`${quantity}`}\n                          onValueChange={(value: string) => {\n                            setQuantity(Number(value))\n                          }}\n                        >\n                          {[...Array(quantityAvailable)].map((_a, i) => (\n                            <Select.Item key={i} value={`${i + 1}`}>\n                              <Select.ItemText>{i + 1}</Select.ItemText>\n                            </Select.Item>\n                          ))}\n                        </Select>\n                      </Box>\n                      <Text\n                        style=\"body3\"\n                        css={{ mb: 24, display: 'inline-block' }}\n                      >\n                        {quantityAvailable} items available\n                      </Text>\n                    </>\n                  )}\n                  <Flex css={{ mb: '$2' }} justify=\"between\">\n                    <Text style=\"subtitle2\" color=\"subtle\" as=\"p\">\n                      Set New Price\n                    </Text>\n                    <Flex css={{ alignItems: 'center', gap: 8 }}>\n                      <Text style=\"subtitle2\" color=\"subtle\" as=\"p\">\n                        You Get\n                      </Text>\n                      <InfoTooltip\n                        side=\"left\"\n                        width={200}\n                        content={`How much ${currency?.symbol} you will receive after creator royalties are subtracted.`}\n                      />\n                    </Flex>\n                  </Flex>\n                  <Flex direction=\"column\" css={{ gap: '$2' }}>\n                    <PriceInput\n                      price={price}\n                      collection={collection}\n                      currency={currency}\n                      usdPrice={usdPrice}\n                      quantity={quantity}\n                      onChange={(e) => {\n                        if (e.target.value === '') {\n                          setPrice(undefined)\n                        } else {\n                          setPrice(Number(e.target.value))\n                        }\n                      }}\n                      onBlur={() => {\n                        if (price === undefined) {\n                          setPrice(0)\n                        }\n                      }}\n                    />\n                    {price !== undefined &&\n                      price !== null &&\n                      price !== 0 &&\n                      price < MINIMUM_AMOUNT && (\n                        <Box>\n                          <Text style=\"body3\" color=\"error\">\n                            Amount must be higher than {MINIMUM_AMOUNT}\n                          </Text>\n                        </Box>\n                      )}\n                    {collection &&\n                      collection?.floorAsk?.price?.amount?.native !==\n                        undefined &&\n                      price !== undefined &&\n                      price !== null &&\n                      price !== 0 &&\n                      price >= MINIMUM_AMOUNT &&\n                      currency?.contract === zeroAddress &&\n                      price < collection?.floorAsk?.price.amount.native && (\n                        <Box>\n                          <Text style=\"body3\" color=\"error\">\n                            Price is{' '}\n                            {Math.round(\n                              ((collection.floorAsk.price.amount.native -\n                                price) /\n                                ((collection.floorAsk.price.amount.native +\n                                  price) /\n                                  2)) *\n                                100 *\n                                1000\n                            ) / 1000}\n                            % below the floor\n                          </Text>\n                        </Box>\n                      )}\n                  </Flex>\n                  <Box css={{ mb: '$3', mt: '$4' }}>\n                    <Text\n                      as=\"div\"\n                      css={{ mb: '$2' }}\n                      style=\"subtitle2\"\n                      color=\"subtle\"\n                    >\n                      Expiration Date\n                    </Text>\n                    <Select\n                      value={expirationOption?.text || ''}\n                      onValueChange={(value: string) => {\n                        const option = expirationOptions.find(\n                          (option) => option.value == value\n                        )\n                        if (option) {\n                          setExpirationOption(option)\n                        }\n                      }}\n                    >\n                      {expirationOptions.map((option) => (\n                        <Select.Item key={option.text} value={option.value}>\n                          <Select.ItemText>{option.text}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select>\n                  </Box>\n                  <Flex\n                    css={{\n                      gap: '$3',\n                      py: '$3',\n                    }}\n                  >\n                    <Button\n                      onClick={() => {\n                        setOpen(false)\n                      }}\n                      color=\"secondary\"\n                      css={{ flex: 1 }}\n                    >\n                      {copy.ctaClose}\n                    </Button>\n                    <Button\n                      disabled={\n                        price === undefined ||\n                        price === 0 ||\n                        price < MINIMUM_AMOUNT\n                      }\n                      onClick={editListing}\n                      css={{ flex: 1 }}\n                    >\n                      {copy.ctaConfirm}\n                    </Button>\n                  </Flex>\n                </Flex>\n              </Flex>\n            )}\n            {editListingStep === EditListingStep.Approving && (\n              <Flex direction=\"column\">\n                <Box css={{ p: '$4', borderBottom: '1px solid $borderColor' }}>\n                  <TokenPrimitive\n                    img={token?.token?.imageSmall}\n                    name={token?.token?.name}\n                    price={profit}\n                    usdPrice={updatedTotalUsd}\n                    collection={collection?.name || ''}\n                    currencyContract={listing?.price?.currency?.contract}\n                    currencyDecimals={listing?.price?.currency?.decimals}\n                    currencySymbol={listing?.price?.currency?.symbol}\n                    expires={`in ${expirationOption.text.toLowerCase()}`}\n                    source={(listing?.source?.icon as string) || ''}\n                    quantity={quantity}\n                  />\n                </Box>\n                {!stepData && <Loader css={{ height: 206 }} />}\n                {stepData && (\n                  <>\n                    <Progress\n                      title={\n                        stepData?.currentStepItem.txHash\n                          ? 'Finalizing on blockchain'\n                          : 'Approve Reservoir Oracle to update the listing'\n                      }\n                      txHash={stepData?.currentStepItem.txHash}\n                    />\n                  </>\n                )}\n                <Button disabled={true} css={{ m: '$4' }}>\n                  <Loader />\n                  {stepData?.currentStepItem.txHash\n                    ? copy.ctaAwaitingValidation\n                    : copy.ctaAwaitingApproval}\n                </Button>\n              </Flex>\n            )}\n            {editListingStep === EditListingStep.Complete && (\n              <Flex direction=\"column\" align=\"center\" css={{ width: '100%' }}>\n                <Flex\n                  direction=\"column\"\n                  align=\"center\"\n                  css={{\n                    p: '$4',\n                    py: '$5',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Box css={{ color: '$successAccent', mb: 24 }}>\n                    <FontAwesomeIcon icon={faCheckCircle} size=\"3x\" />\n                  </Box>\n                  <Text style=\"h5\" css={{ mb: '$4' }}>\n                    Listing Updated!\n                  </Text>\n                  <Text style=\"body2\" color=\"subtle\" css={{ mb: 24 }}>\n                    Your listing for{' '}\n                    <Text style=\"body2\" color=\"base\">\n                      {token?.token?.name}\n                    </Text>{' '}\n                    has been updated.\n                  </Text>\n                </Flex>\n                <Button\n                  onClick={() => {\n                    setOpen(false)\n                  }}\n                  css={{ m: '$4' }}\n                >\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </EditListingModalRenderer>\n  )\n}\n\nEditListingModal.Custom = EditListingModalRenderer\n","import React, {\n  FC,\n  useEffect,\n  useState,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport {\n  useCoinConversion,\n  useReservoirClient,\n  useListings,\n  useTokens,\n  useUserTokens,\n  useCollections,\n  useOnChainRoyalties,\n  useChainCurrency,\n} from '../../hooks'\nimport { useWalletClient, useAccount } from 'wagmi'\nimport { Execute } from '@reservoir0x/reservoir-sdk'\nimport { ExpirationOption } from '../../types/ExpirationOption'\nimport expirationOptions from '../../lib/defaultExpirationOptions'\nimport dayjs from 'dayjs'\nimport { Listings } from '../list/ListModalRenderer'\nimport { formatUnits, parseUnits, zeroAddress } from 'viem'\n\nexport enum EditListingStep {\n  Edit,\n  Approving,\n  Complete,\n}\n\nexport type EditListingStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  currentStepItem: NonNullable<Execute['steps'][0]['items']>[0]\n}\n\ntype ChildrenProps = {\n  loading: boolean\n  listing?: NonNullable<ReturnType<typeof useListings>['data']>[0]\n  tokenId?: string\n  contract?: string\n  isOracleOrder: boolean\n  price: number | undefined\n  token?: NonNullable<NonNullable<ReturnType<typeof useTokens>>['data']>[0]\n  currency: NonNullable<\n    NonNullable<ReturnType<typeof useListings>['data']>[0]['price']\n  >['currency']\n  quantityAvailable: number\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  quantity: number\n  editListingStep: EditListingStep\n  transactionError?: Error | null\n  totalUsd: number\n  royaltyBps?: number\n  expirationOptions: ExpirationOption[]\n  expirationOption: ExpirationOption\n  usdPrice: number\n  steps: Execute['steps'] | null\n  stepData: EditListingStepData | null\n  setPrice: React.Dispatch<React.SetStateAction<number | undefined>>\n  setQuantity: React.Dispatch<React.SetStateAction<number>>\n  setExpirationOption: React.Dispatch<React.SetStateAction<ExpirationOption>>\n  setEditListingStep: React.Dispatch<React.SetStateAction<EditListingStep>>\n  editListing: () => void\n}\n\ntype Props = {\n  open: boolean\n  listingId?: string\n  tokenId?: string\n  collectionId?: string\n  normalizeRoyalties?: boolean\n  enableOnChainRoyalties: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const EditListingModalRenderer: FC<Props> = ({\n  open,\n  listingId,\n  tokenId,\n  collectionId,\n  normalizeRoyalties,\n  enableOnChainRoyalties = false,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const account = useAccount()\n  const [editListingStep, setEditListingStep] = useState<EditListingStep>(\n    EditListingStep.Edit\n  )\n  const [transactionError, setTransactionError] = useState<Error | null>()\n  const [stepData, setStepData] = useState<EditListingStepData | null>(null)\n  const [steps, setSteps] = useState<Execute['steps'] | null>(null)\n  const [price, setPrice] = useState<number | undefined>(0)\n  const [quantity, setQuantity] = useState(1)\n\n  const { data: listings } = useListings(\n    {\n      ids: listingId,\n      normalizeRoyalties,\n      includeCriteriaMetadata: true,\n      includeRawData: true,\n    },\n    {\n      revalidateFirstPage: true,\n    },\n    open && listingId ? true : false\n  )\n\n  const listing = listings && listings[0] ? listings[0] : undefined\n  const contract = listing?.tokenSetId?.split(':')[1]\n  const currency = listing?.price?.currency\n\n  const isOracleOrder = listing?.isNativeOffChainCancellable as boolean\n\n  useEffect(() => {\n    if (listing?.price?.amount?.decimal) {\n      setPrice(listing?.price?.amount?.decimal)\n    }\n  }, [listing?.price])\n\n  const coinConversion = useCoinConversion(\n    open && listing ? 'USD' : undefined,\n    currency?.symbol\n  )\n  const usdPrice = coinConversion.length > 0 ? coinConversion[0].price : 0\n  const totalUsd = usdPrice * (listing?.price?.amount?.decimal || 0)\n\n  const client = useReservoirClient()\n\n  const [expirationOption, setExpirationOption] = useState<ExpirationOption>(\n    expirationOptions[5]\n  )\n\n  const { data: collections } = useCollections(\n    open && {\n      id: collectionId,\n      normalizeRoyalties,\n    }\n  )\n  const collection = collections && collections[0] ? collections[0] : undefined\n  let royaltyBps = collection?.royalties?.bps\n\n  useEffect(() => {\n    if (!open) {\n      setEditListingStep(EditListingStep.Edit)\n      setTransactionError(null)\n      setStepData(null)\n      setExpirationOption(expirationOptions[5])\n      setQuantity(1)\n    }\n  }, [open])\n\n  const { data: tokens } = useTokens(\n    open && {\n      tokens: [`${contract}:${tokenId}`],\n      includeAttributes: true,\n      normalizeRoyalties,\n    },\n    {\n      revalidateFirstPage: true,\n    }\n  )\n\n  const token = tokens && tokens.length > 0 ? tokens[0] : undefined\n  const is1155 = token?.token?.kind === 'erc1155'\n\n  const { data: userTokens } = useUserTokens(\n    open && is1155 ? account.address : undefined,\n    {\n      tokens: [`${contract}:${tokenId}`],\n    }\n  )\n\n  const quantityAvailable =\n    is1155 && userTokens[0]\n      ? Number(userTokens[0].ownership?.tokenCount || 1)\n      : 1\n\n  const chainCurrency = useChainCurrency()\n\n  const { data: onChainRoyalties } = useOnChainRoyalties({\n    contract,\n    tokenId,\n    chainId: chainCurrency.chainId,\n    enabled: enableOnChainRoyalties && open,\n  })\n\n  const onChainRoyaltyBps = useMemo(() => {\n    const totalRoyalty = onChainRoyalties?.[1].reduce((total, royalty) => {\n      total += parseFloat(formatUnits(royalty, currency?.decimals || 18))\n      return total\n    }, 0)\n    if (totalRoyalty) {\n      return (totalRoyalty / 1) * 10000\n    }\n    return 0\n  }, [onChainRoyalties, chainCurrency])\n\n  if (enableOnChainRoyalties && onChainRoyaltyBps) {\n    royaltyBps = onChainRoyaltyBps\n  }\n\n  const editListing = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!listingId) {\n      const error = new Error('Missing list id to edit')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!isOracleOrder) {\n      const error = new Error('Not an oracle order')\n      setTransactionError(error)\n      throw error\n    }\n\n    setTransactionError(null)\n\n    let expirationTime: string | null = null\n\n    if (expirationOption.relativeTime && expirationOption.relativeTimeUnit) {\n      expirationTime = dayjs()\n        .add(expirationOption.relativeTime, expirationOption.relativeTimeUnit)\n        .unix()\n        .toString()\n    }\n\n    const listing: Listings[0] = {\n      token: `${contract}:${tokenId}`,\n      weiPrice: (\n        parseUnits(`${price as number}`, currency?.decimals || 18) *\n        BigInt(quantity)\n      ).toString(),\n      orderbook: 'reservoir',\n      orderKind: 'seaport-v1.4',\n    }\n\n    if (quantity > 1) {\n      listing.quantity = quantity\n    }\n\n    if (expirationTime) {\n      listing.expirationTime = expirationTime\n    }\n\n    if (currency && currency.contract != zeroAddress) {\n      listing.currency = currency.contract\n    }\n\n    listing.options = {\n      'seaport-v1.4': {\n        useOffChainCancellation: true,\n        replaceOrderId: listingId,\n      },\n    }\n\n    setEditListingStep(EditListingStep.Approving)\n\n    client.actions\n      .listToken({\n        listings: [listing],\n        wallet,\n        onProgress: (steps: Execute['steps']) => {\n          if (!steps) {\n            return\n          }\n          setSteps(steps)\n\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n\n          const currentStepIndex = executableSteps.findIndex((step) => {\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: currentStepIndex,\n              currentStep,\n              currentStepItem,\n            })\n          } else if (\n            steps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setEditListingStep(EditListingStep.Complete)\n          }\n        },\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        const transactionError = new Error(error?.message || '', {\n          cause: error,\n        })\n        setTransactionError(transactionError)\n        setEditListingStep(EditListingStep.Edit)\n        setStepData(null)\n        setSteps(null)\n      })\n  }, [\n    client,\n    wallet,\n    collectionId,\n    tokenId,\n    expirationOption,\n    price,\n    currency,\n    quantity,\n    contract,\n  ])\n\n  useEffect(() => {\n    if (!open) {\n      setEditListingStep(EditListingStep.Edit)\n      setTransactionError(null)\n      setStepData(null)\n      setSteps(null)\n    }\n  }, [open])\n\n  return (\n    <>\n      {children({\n        loading: !listing || !token || !collection,\n        listing,\n        tokenId,\n        contract,\n        isOracleOrder,\n        currency,\n        token,\n        price,\n        quantityAvailable,\n        collection,\n        quantity,\n        expirationOption,\n        expirationOptions,\n        editListingStep,\n        transactionError,\n        usdPrice,\n        totalUsd,\n        royaltyBps,\n        steps,\n        stepData,\n        setPrice,\n        setQuantity,\n        setExpirationOption,\n        setEditListingStep,\n        editListing,\n      })}\n    </>\n  )\n}\n","import React from 'react'\n\nimport {\n  Flex,\n  Box,\n  Input,\n  FormatCurrency,\n  Text,\n  FormatCryptoCurrency,\n} from '../../primitives'\n\nimport { CryptoCurrencyIcon } from '../../primitives'\nimport { useCollections, useListings } from '../../hooks'\n\ntype MarketPlaceInputProps = {\n  price: number | undefined\n  collection?: NonNullable<ReturnType<typeof useCollections>['data']>[0]\n  currency: NonNullable<\n    NonNullable<ReturnType<typeof useListings>['data']>[0]['price']\n  >['currency']\n  usdPrice?: number | null\n  quantity?: number\n  onChange: (e: any) => void\n  onBlur: (e: any) => void\n}\n\nconst PriceInput = ({\n  price,\n  collection,\n  currency,\n  usdPrice,\n  quantity = 1,\n  onChange,\n  onBlur,\n  ...props\n}: MarketPlaceInputProps) => {\n  let profit =\n    (1 - (collection?.royalties?.bps || 0) * 0.0001) * (price || 0) * quantity\n  100\n\n  return (\n    <Flex {...props} align=\"center\">\n      <Flex align=\"center\">\n        <Box\n          css={{\n            width: 'auto',\n            height: 20,\n          }}\n        >\n          <CryptoCurrencyIcon\n            css={{ height: 18 }}\n            address={currency?.contract as string}\n          />\n        </Box>\n\n        <Text style=\"body1\" color=\"subtle\" css={{ ml: '$1', mr: '$4' }} as=\"p\">\n          {currency?.symbol}\n        </Text>\n      </Flex>\n      <Box css={{ flex: 1 }}>\n        <Input\n          type=\"number\"\n          value={price}\n          onChange={onChange}\n          onBlur={onBlur}\n          placeholder=\"Enter a listing price\"\n        />\n      </Box>\n      <Flex direction=\"column\" align=\"end\" css={{ ml: '$3' }}>\n        <FormatCryptoCurrency\n          amount={profit}\n          address={currency?.contract}\n          decimals={currency?.decimals}\n          symbol={currency?.symbol}\n          textStyle=\"h6\"\n          logoWidth={18}\n        />\n        <FormatCurrency\n          amount={profit * (usdPrice || 0)}\n          style=\"subtitle2\"\n          color=\"subtle\"\n        />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PriceInput\n","import {\n  faCheckCircle,\n  faCircleExclamation,\n  faCube,\n  faWallet,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { Dispatch, ReactElement, SetStateAction, useEffect } from 'react'\nimport { Path } from '../../components/cart/CartCheckoutModal'\nimport { useFallbackState } from '../../hooks'\nimport {\n  Button,\n  Flex,\n  FormatCryptoCurrency,\n  Text,\n  Slider,\n  Input,\n  Grid,\n  FormatCurrency,\n  Box,\n  Loader,\n  Anchor,\n  ErrorWell,\n} from '../../primitives'\nimport { ApprovePurchasingCollapsible } from '../ApprovePurchasingCollapsible'\nimport { Modal } from '../Modal'\nimport SigninStep from '../SigninStep'\nimport { TokenCheckout } from '../TokenCheckout'\nimport { ItemToggle } from './ItemToggle'\nimport { SweepItem } from './SweepItem'\nimport {\n  SweepModalRenderer,\n  SweepModalStepData,\n  SweepStep,\n} from './SweepModalRenderer'\n\ntype SweepCallbackData = {\n  collectionId?: string\n  maker?: string\n  stepData: SweepModalStepData | null\n}\n\nconst ModalCopy = {\n  title: 'Buy',\n  ctaClose: 'Close',\n  ctaBuy: 'Buy',\n  ctaBuyDisabled: 'Select Items to Buy..***',\n  ctaInsufficientFunds: 'Add Funds to Purchase',\n  ctaAwaitingApproval: 'Waiting for Approval...',\n}\n\ntype Props = Pick<Parameters<typeof Modal>['0'], 'trigger'> & {\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  collectionId?: string\n  feesOnTopBps?: string[] | null\n  feesOnTopFixed?: string[] | null\n  normalizeRoyalties?: boolean\n  copyOverrides?: Partial<typeof ModalCopy>\n  onSweepComplete?: (data: SweepCallbackData) => void\n  onSweepError?: (error: Error, data: SweepCallbackData) => void\n  onClose?: (data: SweepCallbackData, currentStep: SweepStep) => void\n}\n\nexport function SweepModal({\n  openState,\n  trigger,\n  collectionId,\n  feesOnTopBps,\n  feesOnTopFixed,\n  normalizeRoyalties,\n  copyOverrides,\n  onSweepComplete,\n  onSweepError,\n  onClose,\n}: Props): ReactElement {\n  const copy: typeof ModalCopy = { ...ModalCopy, ...copyOverrides }\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n\n  return (\n    <SweepModalRenderer\n      open={open}\n      collectionId={collectionId}\n      feesOnTopBps={feesOnTopBps}\n      feesOnTopFixed={feesOnTopFixed}\n      normalizeRoyalties={normalizeRoyalties}\n    >\n      {({\n        loading,\n        address,\n        selectedTokens,\n        itemAmount,\n        setItemAmount,\n        ethAmount,\n        setEthAmount,\n        isItemsToggled,\n        setIsItemsToggled,\n        maxInput,\n        currency,\n        chainCurrency,\n        isChainCurrency,\n        total,\n        totalUsd,\n        feeOnTop,\n        feeUsd,\n        usdPrice,\n        currentChain,\n        availableTokens,\n        balance,\n        hasEnoughCurrency,\n        blockExplorerBaseUrl,\n        transactionError,\n        stepData,\n        sweepStep,\n        sweepTokens,\n      }) => {\n        useEffect(() => {\n          if (sweepStep === SweepStep.Complete && onSweepComplete) {\n            const data: SweepCallbackData = {\n              collectionId: collectionId,\n              maker: address,\n              stepData,\n            }\n\n            onSweepComplete(data)\n          }\n        }, [sweepStep])\n\n        useEffect(() => {\n          if (transactionError && onSweepError) {\n            const data: SweepCallbackData = {\n              collectionId: collectionId,\n              maker: address,\n              stepData,\n            }\n            onSweepError(transactionError, data)\n          }\n        }, [transactionError])\n\n        const hasTokens = availableTokens && availableTokens.length > 0\n\n        const images = selectedTokens.slice(0, 2).map((token) => {\n          return `${currentChain?.baseApiUrl}/redirect/tokens/${token.contract}:${token.tokenId}/image/v1?imageSize=small`\n        }) as string[]\n\n        const pathMap = stepData?.path\n          ? (stepData.path as Path[]).reduce(\n            (paths: Record<string, Path>, path: Path) => {\n              if (path.orderId) {\n                paths[path.orderId] = path\n              }\n\n              return paths\n            },\n            {} as Record<string, Path>\n          )\n          : {}\n\n        const salesTxHashes =\n          stepData?.currentStep?.items?.reduce((txHashes, item) => {\n            item.salesData?.forEach((saleData) => {\n              if (saleData.txHash) {\n                txHashes.add(saleData.txHash)\n              }\n            })\n            return txHashes\n          }, new Set<string>()) || []\n        const totalSales = Array.from(salesTxHashes).length\n        const failedSales =\n          totalSales - (stepData?.currentStep?.items?.length || 0)\n        const successfulSales = totalSales - failedSales\n\n        return (\n          <Modal\n            trigger={trigger}\n            title={copy.title}\n            open={open}\n            loading={loading}\n            onOpenChange={(open) => {\n              if (!open && onClose) {\n                const data: SweepCallbackData = {\n                  collectionId: collectionId,\n                  maker: address,\n                  stepData,\n                }\n                onClose(data, sweepStep)\n              }\n              setOpen(open)\n            }}\n          >\n            {!loading && !hasTokens ? (\n              <Flex\n                direction=\"column\"\n                align=\"center\"\n                css={{ py: '$6', px: '$4', gap: '$3' }}\n              >\n                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                  No available items were found for this collection.\n                </Text>\n              </Flex>\n            ) : null}\n            {!loading && hasTokens && sweepStep === SweepStep.Idle && (\n              <Flex direction=\"column\">\n                <Flex direction=\"column\" css={{ px: '$4', pt: '$4', pb: '$2' }}>\n                  {transactionError ? <ErrorWell /> : null}\n                  <Slider\n                    min={0}\n                    max={isItemsToggled ? Math.min(50, maxInput) : maxInput}\n                    step={\n                      isItemsToggled\n                        ? 1\n                        : Math.min(\n                          0.01,\n                          availableTokens?.[0]?.totalPrice || 0.01\n                        )\n                    }\n                    value={\n                      isItemsToggled ? [itemAmount || 0] : [ethAmount || 0]\n                    }\n                    onValueChange={(value) => {\n                      if (isItemsToggled) {\n                        setItemAmount(value[0])\n                      } else {\n                        setEthAmount(value[0])\n                      }\n                    }}\n                    css={{ width: '100%', my: '$3' }}\n                  />\n                  <Flex align=\"center\" css={{ gap: '$3', mb: 20 }}>\n                    <Input\n                      value={\n                        isItemsToggled ? itemAmount || '' : ethAmount || ''\n                      }\n                      type=\"number\"\n                      placeholder=\"0\"\n                      step={isItemsToggled ? 1 : 0.01}\n                      onChange={(e) => {\n                        const inputValue = Number(e.target.value)\n\n                        if (e.target.value == '') {\n                          setItemAmount(undefined)\n                          setEthAmount(undefined)\n                        } else if (isItemsToggled) {\n                          setItemAmount(\n                            Math.min(Math.max(inputValue, 0), maxInput) // min: 0, max: maxInput\n                          )\n                        } else {\n                          setEthAmount(\n                            Math.min(Math.max(inputValue, 0), maxInput)\n                          )\n                        }\n                      }}\n                      css={{\n                        textAlign: 'center',\n                        width: '100%',\n                        height: 44,\n                        boxSizing: 'border-box',\n                        '&::placeholder': {\n                          paddingLeft: 12,\n                        },\n                      }}\n                      containerCss={{ width: '100%' }}\n                    />\n                    <ItemToggle\n                      isItemsToggled={isItemsToggled}\n                      setIsItemsToggled={setIsItemsToggled}\n                      currency={currency}\n                    />\n                  </Flex>\n                  <Flex\n                    direction=\"column\"\n                    css={{ height: 185, overflowY: 'auto', mb: '$4' }}\n                  >\n                    {selectedTokens && selectedTokens.length > 0 ? (\n                      <Grid\n                        css={{\n                          gridTemplateColumns: 'repeat(5,minmax(0,1fr))',\n                          '@bp1': {\n                            gridTemplateColumns: 'repeat(7,minmax(0,1fr))',\n                          },\n                          gap: 8,\n                        }}\n                      >\n                        {selectedTokens.map((token, i) => (\n                          <SweepItem\n                            key={`${token?.tokenId}-${i}`}\n                            name={`#${token.tokenId}`}\n                            image={`${currentChain?.baseApiUrl}/redirect/tokens/${token.contract}:${token.tokenId}/image/v1?imageSize=small`}\n                            currency={currency}\n                            amount={\n                              token?.currency != chainCurrency.address &&\n                                isChainCurrency\n                                ? token?.buyInQuote\n                                : token?.totalPrice\n                            }\n                          />\n                        ))}\n                      </Grid>\n                    ) : (\n                      <Text\n                        style=\"body2\"\n                        color=\"subtle\"\n                        css={{ textAlign: 'center', my: 'auto' }}\n                      >\n                        Selected items will appear here\n                      </Text>\n                    )}\n                  </Flex>\n                  {feeOnTop > 0 && (\n                    <Flex\n                      direction=\"column\"\n                      css={{ width: '100%', py: '$4', gap: '$1' }}\n                    >\n                      <Flex align=\"center\" justify=\"between\">\n                        <Text style=\"subtitle2\">Referral Fee</Text>\n                        <FormatCryptoCurrency\n                          amount={feeOnTop}\n                          address={currency?.address}\n                          decimals={currency?.decimals}\n                          symbol={currency?.symbol}\n                        />\n                      </Flex>\n                      <Flex justify=\"end\">\n                        <FormatCurrency amount={feeUsd} color=\"subtle\" />\n                      </Flex>\n                    </Flex>\n                  )}\n                  <Flex justify=\"between\" align=\"start\" css={{ height: 34 }}>\n                    <Text style=\"h6\">Total</Text>\n                    <Flex direction=\"column\" align=\"end\" css={{ gap: '$1' }}>\n                      <FormatCryptoCurrency\n                        textStyle=\"h6\"\n                        amount={total}\n                        address={currency?.address}\n                        decimals={currency?.decimals}\n                        symbol={currency?.symbol}\n                        logoWidth={18}\n                      />\n                      <FormatCurrency\n                        amount={totalUsd}\n                        style=\"tiny\"\n                        color=\"subtle\"\n                      />\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {hasEnoughCurrency ? (\n                  <Button\n                    css={{ m: '$4' }}\n                    disabled={\n                      !(selectedTokens.length > 0) || !hasEnoughCurrency\n                    }\n                    onClick={sweepTokens}\n                  >\n                    {selectedTokens.length > 0\n                      ? copy.ctaBuy\n                      : copy.ctaBuyDisabled}\n                  </Button>\n                ) : (\n                  <Flex direction=\"column\" align=\"center\" css={{ px: '$3' }}>\n                    <Flex align=\"center\">\n                      <Text css={{ mr: '$3' }} color=\"error\" style=\"body3\">\n                        Insufficient Balance\n                      </Text>\n\n                      <FormatCryptoCurrency\n                        amount={balance}\n                        address={currency?.address}\n                        decimals={currency?.decimals}\n                        symbol={currency?.symbol}\n                        textStyle=\"body3\"\n                      />\n                    </Flex>\n                    <Button\n                      css={{ my: '$4', width: '100%' }}\n                      disabled={true}\n                      onClick={sweepTokens}\n                    >\n                      {copy.ctaInsufficientFunds}\n                    </Button>\n                  </Flex>\n                )}\n              </Flex>\n            )}\n\n            {!loading && sweepStep === SweepStep.Approving && (\n              <Flex direction=\"column\">\n                <Box\n                  css={{\n                    p: '$4',\n                    borderBottom: '1px solid $neutralBorder',\n                  }}\n                >\n                  <TokenCheckout\n                    itemCount={selectedTokens.length}\n                    images={images}\n                    totalPrice={total}\n                    usdPrice={usdPrice}\n                    currency={currency}\n                    chain={currentChain}\n                  />\n                </Box>\n                <Flex\n                  direction=\"column\"\n                  align=\"center\"\n                  css={{ p: '$4', overflowY: 'auto' }}\n                >\n                  {stepData?.currentStep == undefined ? (\n                    <Flex css={{ py: '$5' }}>\n                      <Loader />\n                    </Flex>\n                  ) : null}\n                  {stepData?.currentStep &&\n                    stepData.currentStep.id === 'auth' ? (\n                    <>\n                      <SigninStep css={{ mt: 48, mb: '$4', gap: 20 }} />\n                      <Button disabled={true} css={{ mt: '$4', width: '100%' }}>\n                        <Loader />\n                        {copy.ctaAwaitingApproval}\n                      </Button>\n                    </>\n                  ) : null}\n\n                  {stepData?.currentStep &&\n                    stepData?.currentStep?.id !== 'auth' ? (\n                    <>\n                      {stepData?.currentStep?.items &&\n                        stepData?.currentStep?.items.length > 1 ? (\n                        <Flex\n                          direction=\"column\"\n                          css={{ gap: '$4', width: '100%' }}\n                        >\n                          <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                            Approve Purchases\n                          </Text>\n                          <Text style=\"subtitle2\" color=\"subtle\">\n                            Due to limitations with Blur, the purchase of these\n                            items needs to be split into{' '}\n                            {stepData?.currentStep?.items.length} separate\n                            transactions.\n                          </Text>\n                          {stepData?.currentStep?.items.map((item) => (\n                            <ApprovePurchasingCollapsible\n                              item={item}\n                              pathMap={pathMap}\n                              usdPrice={totalUsd}\n                              chain={currentChain}\n                              open={true}\n                            />\n                          ))}\n                        </Flex>\n                      ) : (\n                        <Flex\n                          direction=\"column\"\n                          align=\"center\"\n                          css={{ gap: '$4', pt: '$4', width: '100%' }}\n                        >\n                          <Text style=\"h6\">\n                            Confirm transaction in your wallet\n                          </Text>\n                          <Box css={{ color: '$neutralText' }}>\n                            <FontAwesomeIcon\n                              icon={faWallet}\n                              style={{\n                                width: '32px',\n                                height: '32px',\n                                margin: '12px 0px',\n                              }}\n                            />\n                          </Box>\n                          <Button\n                            disabled={true}\n                            css={{ mt: '$4', width: '100%' }}\n                          >\n                            <Loader />\n                            {copy.ctaAwaitingApproval}\n                          </Button>\n                        </Flex>\n                      )}\n                    </>\n                  ) : null}\n                </Flex>\n              </Flex>\n            )}\n\n            {!loading && sweepStep === SweepStep.Finalizing && (\n              <Flex direction=\"column\">\n                <Box\n                  css={{\n                    p: '$4',\n                    borderBottom: '1px solid $neutralBorder',\n                  }}\n                >\n                  <TokenCheckout\n                    itemCount={selectedTokens.length}\n                    images={images}\n                    totalPrice={total}\n                    usdPrice={totalUsd}\n                    currency={currency}\n                    chain={currentChain}\n                  />\n                </Box>\n                <Flex\n                  direction=\"column\"\n                  align=\"center\"\n                  justify=\"center\"\n                  css={{\n                    gap: '$4',\n                    px: '$4',\n                    py: '$5',\n                  }}\n                >\n                  <Text style=\"h6\">Finalizing on blockchain</Text>\n                  <Text\n                    style=\"subtitle2\"\n                    color=\"subtle\"\n                    css={{ textAlign: 'center' }}\n                  >\n                    You can close this modal while it finalizes on the\n                    blockchain. The transaction will continue in the background.\n                  </Text>\n                  <Box css={{ color: '$neutralSolid' }}>\n                    <FontAwesomeIcon\n                      icon={faCube}\n                      style={{ width: 32, height: 32 }}\n                    />\n                  </Box>\n                </Flex>\n              </Flex>\n            )}\n\n            {sweepStep === SweepStep.Complete && (\n              <Flex\n                direction=\"column\"\n                align=\"center\"\n                css={{ width: '100%', p: '$4' }}\n              >\n                <Flex\n                  direction=\"column\"\n                  align=\"center\"\n                  css={{ px: '$4', py: '$5', gap: 24 }}\n                >\n                  <Box\n                    css={{\n                      color: failedSales ? '$errorAccent' : '$successAccent',\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={failedSales ? faCircleExclamation : faCheckCircle}\n                      fontSize={32}\n                    />\n                  </Box>\n                  <Text style=\"h5\" css={{ textAlign: 'center' }}>\n                    {failedSales\n                      ? `${successfulSales} ${successfulSales > 1 ? 'items' : 'item'\n                      } purchased, ${failedSales} ${failedSales > 1 ? 'items' : 'item'\n                      } failed`\n                      : 'Congrats! Purchase was successful.'}\n                  </Text>\n                  <Flex direction=\"column\" css={{ gap: '$2', mb: '$3' }}>\n                    {stepData?.currentStep?.items?.map((item) => {\n                      const txHash = item.txHash\n                        ? `${item.txHash.slice(0, 4)}...${item.txHash.slice(\n                          -4\n                        )}`\n                        : ''\n\n                      return (\n                        <Anchor\n                          href={`${blockExplorerBaseUrl}/tx/${item?.txHash}`}\n                          color=\"primary\"\n                          weight=\"medium\"\n                          target=\"_blank\"\n                          css={{ fontSize: 12 }}\n                        >\n                          View transaction: {txHash}\n                        </Anchor>\n                      )\n                    })}\n                  </Flex>\n                </Flex>\n                <Button css={{ width: '100%' }} onClick={() => setOpen(false)}>\n                  {copy.ctaClose}\n                </Button>\n              </Flex>\n            )}\n          </Modal>\n        )\n      }}\n    </SweepModalRenderer>\n  )\n}\n\nSweepModal.Custom = SweepModalRenderer\n","import React, { ComponentPropsWithoutRef } from 'react'\nimport { styled } from '../../stitches.config'\nimport * as SliderPrimitive from '@radix-ui/react-slider'\n\nconst SliderRoot = styled(SliderPrimitive.Root, {\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  userSelect: 'none',\n  touchAction: 'none',\n  width: 200,\n  height: 20,\n})\n\nconst SliderTrack = styled(SliderPrimitive.Track, {\n  backgroundColor: '$neutralBorder',\n  position: 'relative',\n  flexGrow: 1,\n  borderRadius: '9999px',\n  height: 8,\n})\n\nconst SliderRange = styled(SliderPrimitive.Range, {\n  position: 'absolute',\n  backgroundColor: '$accentSolid',\n  borderRadius: '9999px',\n  height: '100%',\n})\n\nconst SliderThumb = styled(SliderPrimitive.Thumb, {\n  display: 'block',\n  cursor: 'pointer',\n  width: 20,\n  height: 20,\n  backgroundColor: '$accentSolid',\n  borderRadius: 10,\n  border: '1px solid $neutralLine',\n  '&:hover': { backgroundColor: '$accentSolidHover' },\n  '&:focus': { outline: 'none', boxShadow: `0 0 0 5px $neutralBgSubtle` },\n})\n\nconst Slider = (props?: ComponentPropsWithoutRef<typeof SliderRoot>) => (\n  <SliderRoot {...props}>\n    <SliderTrack>\n      <SliderRange />\n    </SliderTrack>\n    <SliderThumb />\n  </SliderRoot>\n)\n\nexport default Slider\n","import React, { FC, useEffect, useState } from 'react'\nimport { TokenCheckout } from './TokenCheckout'\nimport { Execute, ReservoirChain } from '@reservoir0x/reservoir-sdk'\nimport { ApproveCollapsible } from './ApproveCollapisble'\nimport { Flex } from '../primitives'\n\ntype Props = {\n  title?: string\n  item: NonNullable<Execute['steps'][0]['items']>[0]\n  pathMap: Record<string, NonNullable<Execute['path']>[0]>\n  usdPrice: number\n  chain?: ReservoirChain | null\n  open?: boolean\n}\n\nexport const ApprovePurchasingCollapsible: FC<Props> = ({\n  item,\n  pathMap,\n  usdPrice,\n  chain,\n  open,\n}) => {\n  const [collapsibleOpen, setCollapsibleOpen] = useState(false)\n\n  const isComplete = item && item?.status == 'complete'\n  const itemCount = item?.orderIds?.length || 1\n\n  function processOrders(orderIds: string[]) {\n    let totalPrice = 0\n    let images: string[] = []\n\n    orderIds.forEach((orderId: string) => {\n      const path = pathMap[orderId]\n\n      if (path) {\n        let imageRedirect = `${chain?.baseApiUrl}/redirect/tokens/${path.contract}:${path.tokenId}/image/v1?imageSize=small`\n        images.push(imageRedirect)\n        totalPrice += path.quote || 0\n      }\n    })\n\n    images = images.slice(0, 2)\n\n    return { totalPrice, images }\n  }\n\n  const { totalPrice, images } = processOrders(item?.orderIds as string[])\n\n  useEffect(() => {\n    if (open !== undefined && open !== collapsibleOpen) {\n      setCollapsibleOpen(open)\n    }\n  }, [open])\n\n  return (\n    <ApproveCollapsible\n      title={'Approve transaction'}\n      open={collapsibleOpen}\n      onOpenChange={setCollapsibleOpen}\n      isComplete={isComplete}\n    >\n      <Flex\n        justify=\"between\"\n        align=\"center\"\n        css={{\n          px: '$4',\n          pb: '$2',\n        }}\n      >\n        <TokenCheckout\n          usdPrice={usdPrice}\n          itemCount={itemCount}\n          totalPrice={totalPrice}\n          images={images}\n          size={0}\n        />\n      </Flex>\n    </ApproveCollapsible>\n  )\n}\n","import { ReservoirChain } from '@reservoir0x/reservoir-sdk'\nimport React, { FC } from 'react'\nimport { Cart } from '../context/CartProvider'\nimport {\n  Flex,\n  FormatCryptoCurrency,\n  FormatCurrency,\n  Img,\n  Text,\n} from '../primitives'\n\nenum Size {\n  SM,\n  LG,\n}\n\ntype Props = {\n  itemCount: number\n  images: string[]\n  totalPrice: number\n  usdPrice: number\n  currency?: NonNullable<Cart['items'][0]['price']>['currency']\n  chain?: ReservoirChain | null\n  size?: Size\n}\n\nexport const TokenCheckout: FC<Props> = ({\n  itemCount,\n  images,\n  totalPrice,\n  usdPrice,\n  currency,\n  chain,\n  size = Size.LG,\n}) => {\n  const itemSubject = itemCount > 1 ? 'items' : 'item'\n  return (\n    <Flex justify=\"between\" align=\"center\" css={{ width: '100%' }}>\n      <Flex align=\"center\" css={{ gap: size == Size.SM ? '$3' : '$4' }}>\n        <Flex>\n          {images.map((image) => (\n            <Img\n              src={image}\n              key={image}\n              css={{\n                borderRadius: 4,\n                objectFit: 'cover',\n                height: size == Size.SM ? 40 : 56,\n                width: size == Size.SM ? 40 : 56,\n                '& + img, & + div': {\n                  marginLeft: size == Size.SM ? -32 : -48,\n                  zIndex: -1,\n                },\n              }}\n            />\n          ))}\n        </Flex>\n        <Text style={size == Size.SM ? 'subtitle2' : 'h6'}>\n          {itemCount} {itemSubject}\n        </Text>\n      </Flex>\n      <Flex direction=\"column\" align=\"end\" css={{ gap: '$1' }}>\n        <FormatCryptoCurrency\n          textStyle={size == Size.SM ? 'subtitle2' : 'h6'}\n          amount={totalPrice}\n          address={currency?.contract}\n          decimals={currency?.decimals}\n          symbol={currency?.symbol}\n          logoWidth={size == Size.SM ? 12 : 18}\n          chainId={chain?.id}\n        />\n        {usdPrice && (\n          <FormatCurrency\n            amount={usdPrice * totalPrice}\n            style=\"subtitle2\"\n            color=\"subtle\"\n            css={{ textAlign: 'end' }}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n","import React, { FC } from 'react'\nimport { useChainCurrency } from '../../hooks'\nimport { ToggleGroup, ToggleGroupButton, Text } from '../../primitives'\n\ntype Props = {\n  isItemsToggled: boolean\n  setIsItemsToggled: React.Dispatch<React.SetStateAction<boolean>>\n  currency: ReturnType<typeof useChainCurrency>\n}\n\nexport const ItemToggle: FC<Props> = ({\n  isItemsToggled,\n  setIsItemsToggled,\n  currency,\n}) => {\n  return (\n    <ToggleGroup\n      type=\"single\"\n      value={isItemsToggled ? 'items' : 'currency'}\n      onValueChange={(value) => {\n        if (value === 'items') {\n          setIsItemsToggled(true)\n        } else {\n          setIsItemsToggled(false)\n        }\n      }}\n      css={{\n        width: 'min-content',\n        borderRadius: 8,\n        height: 44,\n        boxSizing: 'border-box',\n      }}\n    >\n      <ToggleGroupButton value=\"items\" css={{ borderRadius: 8 }}>\n        <Text style=\"subtitle2\" css={{ fontSize: 14 }}>\n          Items\n        </Text>\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"currency\" css={{ borderRadius: 8 }}>\n        <Text style=\"subtitle2\" css={{ fontSize: 14 }}>\n          {currency.symbol.toUpperCase()}\n        </Text>\n      </ToggleGroupButton>\n    </ToggleGroup>\n  )\n}\n","import React, { ComponentPropsWithoutRef, FC } from 'react'\nimport { styled } from '../../stitches.config'\nimport * as ToggleGroupPrimitive from '@radix-ui/react-toggle-group'\n\ntype ToggleGroupProps = ComponentPropsWithoutRef<typeof StyledToggleGroup> & {\n  children: React.ReactNode\n}\n\nconst StyledToggleGroup = styled(ToggleGroupPrimitive.Root, {\n  p: 2,\n  backgroundColor: '$neutralBgHover',\n  display: 'flex',\n  borderRadius: 99999,\n  gap: '$1',\n})\n\nconst ToggleGroup: FC<ToggleGroupProps> = ({ children, ...props }) => (\n  <StyledToggleGroup {...props}>{children}</StyledToggleGroup>\n)\n\nconst ToggleGroupButton = styled(ToggleGroupPrimitive.Item, {\n  all: 'unset',\n  cursor: 'pointer',\n  backgroundColor: '$neutralBgHover',\n  color: '$textColor',\n  py: 8,\n  px: 16,\n  borderRadius: 99999,\n  $$focusColor: '$colors$accentBorderHover',\n  '&:hover': { backgroundColor: '$neutralBgActive' },\n  '&[data-state=on]': {\n    backgroundColor: '$neutralBgSubtle',\n    pointerEvents: 'none',\n  },\n  '&:focus': { position: 'relative', boxShadow: '0 0 0 2px $$focusColor' },\n})\n\nexport { ToggleGroup, ToggleGroupButton }\n","import React, { FC } from 'react'\nimport { useChainCurrency } from '../../hooks'\nimport { Flex, FormatCryptoCurrency, Img, Text } from '../../primitives'\nimport Tooltip from '../../primitives/Tooltip'\n\ntype Props = {\n  name?: string\n  image?: string\n  amount?: number\n  currency: ReturnType<typeof useChainCurrency>\n}\n\nexport const SweepItem: FC<Props> = ({ name, image, amount, currency }) => {\n  return (\n    <Tooltip\n      content={\n        <Text style=\"body3\" as=\"p\">\n          {name}\n        </Text>\n      }\n      side=\"top\"\n      sideOffset={-6}\n    >\n      <Flex\n        direction=\"column\"\n        css={{\n          width: 60,\n          borderRadius: 8,\n          backgroundColor: '$neutralBg',\n          overflow: 'hidden',\n        }}\n      >\n        <Img src={image as string} css={{ width: 60, height: 60 }} width={20} />\n        <Flex css={{ px: '$1', py: '$2' }}>\n          <FormatCryptoCurrency\n            amount={amount}\n            address={currency.address}\n            decimals={currency.decimals}\n            symbol={currency.symbol}\n            maximumFractionDigits={amount && amount >= 10 ? 2 : 3}\n            css={{ whiteSpace: 'nowrap' }}\n          />\n        </Flex>\n      </Flex>\n    </Tooltip>\n  )\n}\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n} from 'react'\nimport {\n  useChainCurrency,\n  useCoinConversion,\n  useReservoirClient,\n  useTokens,\n} from '../../hooks'\nimport { useAccount, useBalance, useNetwork, useWalletClient } from 'wagmi'\nimport Token from '../list/Token'\nimport {\n  BuyPath,\n  Execute,\n  ReservoirChain,\n  ReservoirClientActions,\n} from '@reservoir0x/reservoir-sdk'\nimport { toFixed } from '../../lib/numbers'\nimport { UseBalanceToken } from '../../types/wagmi'\nimport { Address, formatUnits, parseUnits, zeroAddress } from 'viem'\n\nexport enum SweepStep {\n  Idle,\n  Approving,\n  Finalizing,\n  Complete,\n}\n\nexport type SweepModalStepData = {\n  totalSteps: number\n  stepProgress: number\n  currentStep: Execute['steps'][0]\n  currentStepItem: NonNullable<Execute['steps'][0]['items']>[0]\n  path: Execute['path']\n}\n\ntype Token = ReturnType<typeof useTokens>['data'][0]\n\ntype BuyTokenOptions = Parameters<\n  ReservoirClientActions['buyToken']\n>['0']['options']\n\ntype Currency = NonNullable<\n  NonNullable<NonNullable<Token['market']>['floorAsk']>['price']\n>['currency']\n\ntype ChildrenProps = {\n  loading: boolean\n  selectedTokens: NonNullable<BuyPath>\n  setSelectedTokens: React.Dispatch<React.SetStateAction<NonNullable<BuyPath>>>\n  itemAmount?: number\n  setItemAmount: React.Dispatch<React.SetStateAction<number | undefined>>\n  ethAmount?: number\n  setEthAmount: React.Dispatch<React.SetStateAction<number | undefined>>\n  isItemsToggled: boolean\n  setIsItemsToggled: React.Dispatch<React.SetStateAction<boolean>>\n  maxInput: number\n  setMaxInput: React.Dispatch<React.SetStateAction<number>>\n  currency: ReturnType<typeof useChainCurrency>\n  chainCurrency: ReturnType<typeof useChainCurrency>\n  isChainCurrency: boolean\n  total: number\n  totalUsd: number\n  feeOnTop: number\n  feeUsd: number\n  usdPrice: number\n  currentChain: ReservoirChain | null | undefined\n  availableTokens: BuyPath\n  address?: string\n  tokens: BuyPath\n  balance?: bigint\n  hasEnoughCurrency: boolean\n  blockExplorerBaseUrl: string\n  transactionError: Error | null | undefined\n  stepData: SweepModalStepData | null\n  setStepData: React.Dispatch<React.SetStateAction<SweepModalStepData | null>>\n  sweepStep: SweepStep\n  setSweepStep: React.Dispatch<React.SetStateAction<SweepStep>>\n  sweepTokens: () => void\n}\n\ntype Props = {\n  open: boolean\n  collectionId?: string\n  feesOnTopBps?: string[] | null\n  feesOnTopFixed?: string[] | null\n  normalizeRoyalties?: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const SweepModalRenderer: FC<Props> = ({\n  open,\n  collectionId,\n  feesOnTopBps,\n  feesOnTopFixed,\n  normalizeRoyalties,\n  children,\n}) => {\n  const { data: wallet } = useWalletClient()\n  const account = useAccount()\n  const [selectedTokens, setSelectedTokens] = useState<NonNullable<BuyPath>>([])\n  const [itemAmount, setItemAmount] = useState<number | undefined>(undefined)\n  const [ethAmount, setEthAmount] = useState<number | undefined>(undefined)\n  const [isItemsToggled, setIsItemsToggled] = useState<boolean>(true)\n  const [maxInput, setMaxInput] = useState<number>(0)\n  const [sweepStep, setSweepStep] = useState<SweepStep>(SweepStep.Idle)\n  const [stepData, setStepData] = useState<SweepModalStepData | null>(null)\n  const [transactionError, setTransactionError] = useState<Error | null>()\n\n  const [hasEnoughCurrency, setHasEnoughCurrency] = useState(true)\n  const [feeOnTop, setFeeOnTop] = useState(0)\n\n  const chainCurrency = useChainCurrency()\n  const [currency, setCurrency] = useState(chainCurrency)\n\n  const isChainCurrency = currency.address === chainCurrency.address\n\n  const client = useReservoirClient()\n  const currentChain = client?.currentChain()\n\n  const { chains } = useNetwork()\n  const chain = chains.find((chain) => chain.id === currentChain?.id)\n\n  const blockExplorerBaseUrl =\n    chain?.blockExplorers?.default?.url || 'https://etherscan.io'\n\n  const [fetchedInitialTokens, setFetchedInitialTokens] = useState(false)\n  const [tokens, setTokens] = useState<BuyPath | undefined>(undefined)\n\n  const fetchBuyPath = useCallback(() => {\n    if (!wallet || !client) {\n      return\n    }\n\n    let options: BuyTokenOptions = {\n      partial: true,\n      onlyPath: true,\n    }\n\n    if (normalizeRoyalties !== undefined) {\n      options.normalizeRoyalties = normalizeRoyalties\n    }\n\n    client?.actions\n      .buyToken({\n        items: [\n          {\n            collection: collectionId,\n            quantity: 50,\n            fillType: 'trade',\n          },\n        ],\n        expectedPrice: undefined,\n        options,\n        wallet,\n        precheck: true,\n        onProgress: () => {},\n      })\n      .then((data) => {\n        setTokens(\n          'path' in (data as any)\n            ? ((data as Execute)['path'] as BuyPath)\n            : undefined\n        )\n      })\n      .finally(() => {\n        setFetchedInitialTokens(true)\n      })\n  }, [client, wallet, normalizeRoyalties, collectionId, currency])\n\n  useEffect(() => {\n    if (open) {\n      fetchBuyPath()\n    }\n  }, [client, wallet, open])\n\n  // Update currency\n  const updateCurrency = useCallback(\n    (tokens: typeof selectedTokens) => {\n      let currencies = new Set<string>()\n      let currenciesData: Record<string, Currency> = {}\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i]\n        if (token.currency) {\n          currencies.add(token.currency)\n          currenciesData[token.currency] = {\n            contract: token.currency,\n            symbol: token.currencySymbol,\n            decimals: token.currencyDecimals,\n          }\n        }\n        if (currencies.size > 1) {\n          break\n        }\n      }\n      if (currencies.size > 1) {\n        if (currency?.address != chainCurrency?.address) {\n          setCurrency(chainCurrency)\n        }\n      } else if (currencies.size > 0) {\n        let otherCurrency = Object.values(currenciesData)[0]\n        if (otherCurrency?.contract != currency?.address) {\n          setCurrency({\n            symbol: otherCurrency?.symbol as string,\n            decimals: otherCurrency?.decimals as number,\n            name: '',\n            address: otherCurrency?.contract as Address,\n            chainId: chain?.id as number,\n          })\n        }\n      }\n    },\n    [chain, chainCurrency]\n  )\n\n  // update currency based on selected tokens\n  useEffect(() => {\n    updateCurrency(selectedTokens)\n  }, [selectedTokens])\n\n  const total = useMemo(() => {\n    const updatedTotal = selectedTokens?.reduce((total, token) => {\n      return (\n        total +\n        (token?.currency != chainCurrency.address && isChainCurrency\n          ? token?.buyInQuote || 0\n          : token?.totalPrice || 0)\n      )\n    }, 0)\n\n    let fees = 0\n    if (feesOnTopBps && feesOnTopBps.length > 0) {\n      fees = feesOnTopBps.reduce((totalFees, feeOnTop) => {\n        const [_, fee] = feeOnTop.split(':')\n        return totalFees + (Number(fee) / 10000) * updatedTotal\n      }, 0)\n    } else if (feesOnTopFixed && feesOnTopFixed.length > 0) {\n      fees = feesOnTopFixed.reduce((totalFees, feeOnTop) => {\n        const [_, fee] = feeOnTop.split(':')\n        const parsedFee = formatUnits(BigInt(fee), currency?.decimals || 18)\n        return totalFees + Number(parsedFee)\n      }, 0)\n    }\n    setFeeOnTop(fees)\n\n    return updatedTotal + fees\n  }, [selectedTokens, feesOnTopBps, feesOnTopFixed, currency, isChainCurrency])\n\n  const coinConversion = useCoinConversion(\n    open ? 'USD' : undefined,\n    currency?.symbol\n  )\n  const usdPrice = coinConversion.length > 0 ? coinConversion[0].price : 0\n  const feeUsd = feeOnTop * usdPrice\n  const totalUsd = usdPrice * (total || 0)\n\n  const { data: balance } = useBalance({\n    chainId: chain?.id,\n    address: account.address,\n    token:\n      currency?.address !== zeroAddress\n        ? (currency?.address as UseBalanceToken)\n        : undefined,\n    watch: open,\n    formatUnits: currency?.decimals,\n  })\n\n  // Determine if user has enough funds\n  useEffect(() => {\n    if (balance) {\n      const totalPriceTruncated = toFixed(total, currency?.decimals || 18)\n      if (!balance.value) {\n        setHasEnoughCurrency(false)\n      } else if (\n        balance?.value <\n        parseUnits(`${totalPriceTruncated as number}`, currency?.decimals || 18)\n      ) {\n        setHasEnoughCurrency(false)\n      } else {\n        setHasEnoughCurrency(true)\n      }\n    }\n  }, [total, balance, currency])\n\n  const availableTokens = useMemo(() => {\n    if (!tokens) return []\n    return tokens\n  }, [tokens, account])\n\n  const cheapestAvailablePrice = availableTokens?.[0]?.totalPrice || 0\n\n  useEffect(() => {\n    setItemAmount(1)\n    setEthAmount(cheapestAvailablePrice)\n  }, [availableTokens.length])\n\n  // set max input\n  useEffect(() => {\n    if (isItemsToggled) {\n      setMaxInput(Math.min(availableTokens.length, 50))\n    } else {\n      const maxEth = availableTokens.slice(0, 50).reduce((total, token) => {\n        total +=\n          token?.currency != chainCurrency.address && isChainCurrency\n            ? token?.buyInQuote || 0\n            : token?.totalPrice || 0\n\n        return total\n      }, 0)\n\n      setMaxInput(maxEth)\n    }\n  }, [availableTokens, isItemsToggled])\n\n  const calculateTokensToAdd = useCallback(() => {\n    let totalEthPrice = 0\n    let tokensToAdd = []\n    for (let token of availableTokens) {\n      if (\n        ethAmount &&\n        totalEthPrice + (token?.totalPrice || 0) <= ethAmount &&\n        tokensToAdd.length < 50\n      ) {\n        totalEthPrice += token?.totalPrice || 0\n        tokensToAdd.push(token)\n      } else {\n        break\n      }\n    }\n    return tokensToAdd\n  }, [availableTokens, ethAmount])\n\n  useEffect(() => {\n    if (isItemsToggled) {\n      const updatedTokens = availableTokens?.slice(0, itemAmount)\n      setSelectedTokens(updatedTokens)\n    } else {\n      setSelectedTokens(calculateTokensToAdd())\n    }\n  }, [isItemsToggled, ethAmount, itemAmount])\n\n  // reset selectedItems when toggle changes\n  useEffect(() => {\n    setItemAmount(1)\n    setEthAmount(cheapestAvailablePrice)\n  }, [isItemsToggled])\n\n  // reset state on close\n  useEffect(() => {\n    if (!open) {\n      setSelectedTokens([])\n      setTokens(undefined)\n      setItemAmount(undefined)\n      setEthAmount(undefined)\n      setSweepStep(SweepStep.Idle)\n      setIsItemsToggled(true)\n      setTransactionError(null)\n      setFetchedInitialTokens(false)\n    }\n  }, [open])\n\n  const sweepTokens = useCallback(() => {\n    if (!wallet) {\n      const error = new Error('Missing a wallet/signer')\n      setTransactionError(error)\n      throw error\n    }\n\n    if (!client) {\n      const error = new Error('ReservoirClient was not initialized')\n      setTransactionError(error)\n      throw error\n    }\n\n    setTransactionError(null)\n\n    let options: BuyTokenOptions = {\n      partial: true,\n    }\n\n    if (feesOnTopBps && feesOnTopBps?.length > 0) {\n      const fixedFees = feesOnTopBps.map((fullFee) => {\n        const [referrer, feeBps] = fullFee.split(':')\n        const totalFeeTruncated = toFixed(\n          total - feeOnTop,\n          currency?.decimals || 18\n        )\n        const fee =\n          Number(\n            parseUnits(\n              `${Number(totalFeeTruncated)}`,\n              currency?.decimals || 18\n            ) * BigInt(feeBps)\n          ) / 10000\n        const atomicUnitsFee = formatUnits(BigInt(fee), 0)\n        return `${referrer}:${atomicUnitsFee}`\n      })\n      options.feesOnTop = fixedFees\n    }\n    if (feesOnTopFixed && feesOnTopFixed.length > 0) {\n      options.feesOnTop = feesOnTopFixed\n    } else if (!feesOnTopFixed && !feesOnTopBps) {\n      delete options.feesOnTop\n    }\n\n    if (normalizeRoyalties !== undefined) {\n      options.normalizeRoyalties = normalizeRoyalties\n    }\n\n    if (!selectedTokens || selectedTokens.length === 0) {\n      const error = new Error('No tokens to sweep')\n      setTransactionError(error)\n      throw error\n    }\n\n    setSweepStep(SweepStep.Approving)\n\n    client.actions\n      .buyToken({\n        items: [{ collection: collectionId, quantity: selectedTokens.length }],\n        expectedPrice: total - feeOnTop,\n        wallet,\n        options,\n        onProgress: (steps: Execute['steps'], path: Execute['path']) => {\n          if (!steps) {\n            return\n          }\n\n          const executableSteps = steps.filter(\n            (step) => step.items && step.items.length > 0\n          )\n\n          let stepCount = executableSteps.length\n\n          let currentStepItem:\n            | NonNullable<Execute['steps'][0]['items']>[0]\n            | undefined\n\n          const currentStepIndex = executableSteps.findIndex((step) => {\n            currentStepItem = step.items?.find(\n              (item) => item.status === 'incomplete'\n            )\n            return currentStepItem\n          })\n\n          const currentStep =\n            currentStepIndex > -1\n              ? executableSteps[currentStepIndex]\n              : executableSteps[stepCount - 1]\n\n          if (currentStepItem) {\n            setStepData({\n              totalSteps: stepCount,\n              stepProgress: currentStepIndex,\n              currentStep,\n              currentStepItem,\n              path: path,\n            })\n          }\n\n          if (currentStep.items?.every((item) => item.txHash)) {\n            setSweepStep(SweepStep.Finalizing)\n          }\n\n          if (\n            steps.every(\n              (step) =>\n                !step.items ||\n                step.items.length == 0 ||\n                step.items?.every((item) => item.status === 'complete')\n            )\n          ) {\n            setSweepStep(SweepStep.Complete)\n          }\n        },\n      })\n      .catch((e: any) => {\n        const error = e as Error\n        const transactionError = new Error(error?.message || '', {\n          cause: error,\n        })\n        setTransactionError(transactionError)\n        setSweepStep(SweepStep.Idle)\n        fetchBuyPath()\n      })\n  }, [\n    selectedTokens,\n    client,\n    wallet,\n    total,\n    normalizeRoyalties,\n    chain,\n    collectionId,\n    currency,\n    feesOnTopBps,\n    feesOnTopFixed,\n  ])\n\n  return (\n    <>\n      {children({\n        loading: !fetchedInitialTokens,\n        address: account?.address,\n        selectedTokens,\n        setSelectedTokens,\n        itemAmount,\n        setItemAmount,\n        ethAmount,\n        setEthAmount,\n        isItemsToggled,\n        setIsItemsToggled,\n        maxInput,\n        setMaxInput,\n        currency,\n        chainCurrency,\n        isChainCurrency,\n        total,\n        totalUsd,\n        feeOnTop,\n        feeUsd,\n        usdPrice,\n        currentChain,\n        availableTokens,\n        tokens,\n        balance: balance?.value,\n        hasEnoughCurrency,\n        blockExplorerBaseUrl,\n        transactionError,\n        stepData,\n        setStepData,\n        sweepStep,\n        setSweepStep,\n        sweepTokens,\n      })}\n    </>\n  )\n}\n","import React, {\n  CSSProperties,\n  FC,\n  ReactElement,\n  SyntheticEvent,\n  useContext,\n  useState,\n  useRef,\n  LegacyRef,\n  VideoHTMLAttributes,\n  AudioHTMLAttributes,\n  IframeHTMLAttributes,\n} from 'react'\nimport { useTokens } from '../../hooks'\nimport { useModelViewer } from '../../hooks'\nimport { ThemeContext } from '../../ReservoirKitProvider'\nimport { Box } from '../../primitives'\nimport MediaPlayButton from './MediaPlayButton'\nimport { useMeasure } from '@react-hookz/web'\nimport TokenFallback from './TokenFallback'\n\ntype MediaType =\n  | 'mp4'\n  | 'mp3'\n  | 'wav'\n  | 'gltf'\n  | 'glb'\n  | 'png'\n  | 'jpeg'\n  | 'jpg'\n  | 'svg'\n  | 'gif'\n  | 'html'\n  | 'other'\n  | undefined\n\nexport const extractMediaType = (\n  token?: RequiredTokenProps\n): MediaType | null => {\n  let extension: string | null = null\n  if (token?.media) {\n    const pieces = token.media.split('/')\n    const file =\n      pieces && pieces[pieces.length - 1] ? pieces[pieces.length - 1] : null\n    const matches = file ? file.match('(\\\\.[^.]+)$') : null\n    extension = matches && matches[0] ? matches[0].replace('.', '') : null\n  }\n  return (extension as MediaType) ? (extension as MediaType) : null\n}\n\ntype Token = NonNullable<\n  NonNullable<ReturnType<typeof useTokens>['data']>['0']\n>['token']\n\ntype RequiredTokenProps = Pick<\n  NonNullable<Token>,\n  'image' | 'media' | 'collection' | 'tokenId'\n>\n\ntype Props = {\n  token?: RequiredTokenProps\n  preview?: boolean\n  style?: CSSProperties\n  className?: string\n  modelViewerOptions?: any\n  videoOptions?: VideoHTMLAttributes<HTMLVideoElement>\n  audioOptions?: AudioHTMLAttributes<HTMLAudioElement>\n  iframeOptions?: IframeHTMLAttributes<HTMLIFrameElement>\n  fallback?: (mediaType: MediaType | null) => ReactElement | null\n  onError?: (e: Event) => void\n  onRefreshToken?: () => void\n}\n\nconst TokenMedia: FC<Props> = ({\n  preview,\n  token,\n  style,\n  className,\n  modelViewerOptions = {},\n  videoOptions = {},\n  audioOptions = {},\n  iframeOptions = {},\n  fallback,\n  onError = () => {},\n  onRefreshToken = () => {},\n}) => {\n  const mediaRef = useRef<HTMLAudioElement | HTMLVideoElement>(null)\n  const themeContext = useContext(ThemeContext)\n  let borderRadius: string = themeContext?.radii?.borderRadius?.value || '0'\n  const [error, setError] = useState<SyntheticEvent | Event | null>(null)\n  const media = token?.media\n  const tokenPreview = token?.image\n  const mediaType = extractMediaType(token)\n  const defaultStyle: CSSProperties = {\n    width: '150px',\n    height: '150px',\n    objectFit: 'cover',\n    borderRadius,\n    position: 'relative',\n  }\n  const computedStyle = {\n    ...defaultStyle,\n    ...style,\n  }\n\n  useModelViewer(\n    !preview && mediaType && (mediaType === 'gltf' || mediaType === 'glb')\n      ? true\n      : false\n  )\n\n  const [measurements, containerRef] = useMeasure<HTMLDivElement>()\n  const isContainerLarge = (measurements?.width || 0) >= 360\n\n  if (!token && !preview) {\n    console.warn('A token object or a media url are required!')\n    return null\n  }\n\n  if (error || (!media && !tokenPreview)) {\n    let fallbackElement: ReactElement | null | undefined\n    if (fallback) {\n      fallbackElement = fallback(mediaType)\n    }\n    if (!fallbackElement) {\n      fallbackElement = (\n        <TokenFallback\n          style={style}\n          className={className}\n          token={token}\n          onRefreshClicked={onRefreshToken}\n        />\n      )\n    }\n    return fallbackElement\n  }\n\n  const onErrorCb = (e: SyntheticEvent) => {\n    setError(e)\n    onError(e.nativeEvent)\n  }\n\n  if (preview || !media) {\n    return (\n      <img\n        alt=\"Token Image\"\n        src={tokenPreview}\n        style={{\n          ...computedStyle,\n          visibility:\n            !tokenPreview || tokenPreview.length === 0 ? 'hidden' : 'visible',\n        }}\n        className={className}\n        onError={onErrorCb}\n      />\n    )\n  }\n\n  // VIDEO\n  if (mediaType === 'mp4') {\n    return (\n      <Box className={className} style={computedStyle} ref={containerRef}>\n        {!isContainerLarge && <MediaPlayButton mediaRef={mediaRef} />}\n        <video\n          style={computedStyle}\n          className={className}\n          poster={tokenPreview}\n          {...videoOptions}\n          controls={isContainerLarge}\n          loop\n          playsInline\n          onError={onErrorCb}\n          ref={mediaRef as LegacyRef<HTMLVideoElement>}\n        >\n          <source src={media} type=\"video/mp4\" />\n          Your browser does not support the\n          <code>video</code> element.\n        </video>\n      </Box>\n    )\n  }\n\n  // AUDIO\n  if (mediaType === 'wav' || mediaType === 'mp3') {\n    return (\n      <Box className={className} style={computedStyle} ref={containerRef}>\n        {!isContainerLarge && <MediaPlayButton mediaRef={mediaRef} />}\n        <img\n          alt=\"Audio Poster\"\n          src={tokenPreview}\n          style={{\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            visibility:\n              !tokenPreview || tokenPreview.length === 0 ? 'hidden' : 'visible',\n            objectFit: 'cover',\n          }}\n          onError={onErrorCb}\n        />\n        <audio\n          src={media}\n          {...audioOptions}\n          onError={onErrorCb}\n          ref={mediaRef}\n          controls={isContainerLarge}\n          style={{\n            position: 'absolute',\n            bottom: 16,\n            left: 16,\n            width: 'calc(100% - 32px)',\n          }}\n        >\n          Your browser does not support the\n          <code>audio</code> element.\n        </audio>\n      </Box>\n    )\n  }\n\n  // 3D\n  if (mediaType === 'gltf' || mediaType === 'glb') {\n    return (\n      <model-viewer\n        src={media}\n        ar\n        ar-modes=\"webxr scene-viewer quick-look\"\n        poster={tokenPreview}\n        seamless-poster\n        shadow-intensity=\"1\"\n        camera-controls\n        enable-pan\n        {...modelViewerOptions}\n        style={computedStyle}\n        className={className}\n        onError={onErrorCb}\n      ></model-viewer>\n    )\n  }\n\n  //Image\n  if (\n    mediaType === 'png' ||\n    mediaType === 'jpeg' ||\n    mediaType === 'jpg' ||\n    mediaType === 'gif'\n  ) {\n    return (\n      <img\n        alt=\"Token Image\"\n        src={media}\n        className={className}\n        style={{\n          ...computedStyle,\n          visibility: !media || media.length === 0 ? 'hidden' : 'visible',\n        }}\n        onError={onErrorCb}\n      />\n    )\n  }\n\n  // HTML\n  if (\n    mediaType === 'html' ||\n    mediaType === null ||\n    mediaType === undefined ||\n    mediaType === 'other' ||\n    mediaType === 'svg'\n  ) {\n    return (\n      <iframe\n        style={computedStyle}\n        className={className}\n        src={media}\n        sandbox=\"allow-scripts\"\n        frameBorder=\"0\"\n        {...iframeOptions}\n      ></iframe>\n    )\n  }\n\n  return (\n    <img\n      alt=\"Token Image\"\n      src={tokenPreview}\n      style={{\n        ...computedStyle,\n        visibility:\n          !tokenPreview || tokenPreview.length === 0 ? 'hidden' : 'visible',\n      }}\n      className={className}\n      onError={onErrorCb}\n    />\n  )\n}\n\nexport default TokenMedia\n","import { useEffect } from 'react'\n\nlet modelViewerInjected = false\n\nconst importScript = (src: string) => {\n  if (document) {\n    const script = document.createElement('script')\n    script.async = true\n    script.src = src\n    script.type = 'module'\n    document.body.appendChild(script)\n  }\n}\n\nconst useModelViewer = (enabled: boolean) => {\n  useEffect(() => {\n    if (enabled && !modelViewerInjected) {\n      modelViewerInjected = true\n      importScript(\n        'https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js'\n      )\n    }\n  }, [enabled])\n}\n\nexport default useModelViewer\n","import React, { FC, useState, useEffect, RefObject } from 'react'\nimport { Button } from '../../primitives'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\n\ntype MediaPlayButtonProps = {\n  mediaRef: RefObject<HTMLAudioElement> | RefObject<HTMLVideoElement>\n}\n\nconst MediaPlayButton: FC<MediaPlayButtonProps> = ({ mediaRef }) => {\n  const [playing, setPlaying] = useState(false)\n\n  useEffect(() => {\n    if (mediaRef.current) {\n      mediaRef.current.onplaying = () => {\n        setPlaying(true)\n      }\n      mediaRef.current.onpause = () => {\n        setPlaying(false)\n      }\n    }\n    return () => {\n      if (mediaRef.current) {\n        mediaRef.current.onplaying = null\n        mediaRef.current.onpause = null\n      }\n    }\n  }, [mediaRef])\n\n  return (\n    <Button\n      css={{\n        zIndex: 5,\n        position: 'absolute',\n        right: 16,\n        bottom: 16,\n        backdropFilter: 'blur(2px)',\n        background: 'rgba(105, 113, 119, 0.5)',\n        width: 48,\n        height: 48,\n        borderRadius: '50%',\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 0,\n        '&:hover': {\n          background: 'rgba(105, 113, 119, 0.7)',\n        },\n      }}\n      onClick={(e) => {\n        e.preventDefault()\n        if (mediaRef.current) {\n          if (mediaRef.current.paused) {\n            mediaRef.current.play()\n          } else {\n            mediaRef.current.pause()\n          }\n        }\n      }}\n    >\n      <FontAwesomeIcon\n        icon={playing ? faPause : faPlay}\n        width={24}\n        height={24}\n      />\n    </Button>\n  )\n}\n\nexport default MediaPlayButton\n","import React, { FC, ComponentPropsWithoutRef, CSSProperties } from 'react'\nimport { Button, Flex, Text } from '../../primitives'\nimport TokenMedia from './index'\nimport { defaultHeaders } from '../../lib/swr'\nimport { useReservoirClient } from '../../hooks'\nimport { paths } from '@reservoir0x/reservoir-sdk'\n\ntype TokenFallbackProps = {\n  style?: CSSProperties\n  className?: string\n  token: ComponentPropsWithoutRef<typeof TokenMedia>['token']\n  chainId?: number\n  onRefreshClicked: () => void\n}\n\nconst TokenFallback: FC<TokenFallbackProps> = ({\n  style,\n  className,\n  token,\n  chainId,\n  onRefreshClicked,\n}) => {\n  const client = useReservoirClient()\n  const reservoirChain = chainId\n    ? client?.chains.find((chain) => chain.id === chainId)\n    : client?.currentChain()\n\n  return (\n    <Flex\n      justify=\"center\"\n      align=\"center\"\n      direction=\"column\"\n      css={{ gap: '$2', aspectRatio: '1/1', p: '$2', ...style }}\n      className={className}\n    >\n      {token?.collection?.image && (\n        <img\n          style={{ width: 64, height: 64, objectFit: 'cover', borderRadius: 8 }}\n          src={token?.collection?.image}\n        />\n      )}\n      <Text style=\"body2\" css={{ textAlign: 'center' }}>\n        No Content Available\n      </Text>\n      <Button\n        color=\"secondary\"\n        onClick={(e) => {\n          e.preventDefault()\n          if (!reservoirChain) {\n            throw 'ReservoirClient missing chain configuration'\n          }\n          onRefreshClicked()\n          const url = `${reservoirChain?.baseApiUrl}/tokens/refresh/v1`\n          const body: paths['/tokens/refresh/v1']['post']['parameters']['body']['body'] =\n            {\n              token: `${token?.collection?.id}:${token?.tokenId}`,\n            }\n          const headers = {\n            ...defaultHeaders(reservoirChain?.apiKey, client?.version),\n            'Content-Type': 'application/json',\n          }\n          fetch(url, {\n            headers,\n            method: 'POST',\n            body: JSON.stringify(body),\n          })\n            .then((res) => res.json())\n            .catch((e) => {\n              throw e\n            })\n        }}\n      >\n        Refresh\n      </Button>\n    </Flex>\n  )\n}\n\nexport default TokenFallback\n","import { useFallbackState } from '../../hooks'\nimport { keyframes } from '../../../stitches.config'\nimport {\n  Box,\n  Flex,\n  Text,\n  Button,\n  Anchor,\n  FormatCryptoCurrency,\n  FormatCurrency,\n  Loader,\n} from '../../primitives'\nimport Popover from '../../primitives/Popover'\nimport React, {\n  ComponentPropsWithRef,\n  Dispatch,\n  ReactElement,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faClose,\n  faLock,\n  faRefresh,\n  faShoppingCart,\n} from '@fortawesome/free-solid-svg-icons'\nimport { ProviderOptionsContext } from '../../ReservoirKitProvider'\nimport CartItem from './CartItem'\nimport CartToast from './CartToast'\nimport CartPopoverRenderer from './CartPopoverRenderer'\nimport {\n  CheckoutStatus,\n  CheckoutTransactionError,\n} from '../../context/CartProvider'\nimport { useAccount } from 'wagmi'\nimport { CartCheckoutModal } from './CartCheckoutModal'\nimport { Logo } from '../../modal/Modal'\n\nconst scaleUp = keyframes({\n  '0%': { opacity: 0, transform: 'scale(0.9) translateY(-10px)' },\n  '100%': { opacity: 1, transform: 'scale(1) translateY(0)' },\n})\n\nconst scaleDown = keyframes({\n  '0%': { opacity: 1, transform: 'scale(1) translateY(0)' },\n  '100%': { opacity: 0, transform: 'scale(0.9) translateY(-10px)' },\n})\n\ntype Props = {\n  trigger: ReactNode\n  side?: ComponentPropsWithRef<typeof Popover>['side']\n  openState?: [boolean, Dispatch<SetStateAction<boolean>>]\n  tokenUrl?: string\n  onConnectWallet: () => void\n}\n\nconst CONTENT_OFFSET = 8\n\nexport function CartPopover({\n  trigger,\n  side,\n  openState,\n  tokenUrl,\n  onConnectWallet,\n}: Props): ReactElement {\n  const [popoverTrigger, setPopoverTrigger] =\n    useState<HTMLButtonElement | null>(null)\n  const [open, setOpen] = useFallbackState(\n    openState ? openState[0] : false,\n    openState\n  )\n  const providerOptionsContext = useContext(ProviderOptionsContext)\n  const [displayPendingTransaction, setDisplayPendingTransaction] =\n    useState(false)\n  const [purchaseComplete, setPurchaseComplete] = useState(false)\n  const { isConnected } = useAccount()\n\n  useEffect(() => {\n    if (!open) {\n      setDisplayPendingTransaction(false)\n      setPurchaseComplete(false)\n    }\n  }, [open])\n\n  const triggerBottom = useMemo(\n    () =>\n      (popoverTrigger?.offsetTop || 0) +\n      (popoverTrigger?.offsetHeight || 0) +\n      CONTENT_OFFSET,\n    [trigger]\n  )\n\n  return (\n    <CartPopoverRenderer open={open}>\n      {({\n        loading,\n        items,\n        unavailableItems,\n        priceChangeItems,\n        totalPrice,\n        feeOnTop,\n        usdPrice,\n        hasEnoughCurrency,\n        balance,\n        currency,\n        cartCurrencyConverted,\n        transaction,\n        blockExplorerBaseUrl,\n        cartChain,\n        remove,\n        clear,\n        checkout,\n      }) => {\n        useEffect(() => {\n          if (transaction?.status === CheckoutStatus.Complete) {\n            setDisplayPendingTransaction(false)\n            setPurchaseComplete(true)\n          }\n        }, [transaction?.status])\n\n        const unavailableItemsSubject =\n          unavailableItems.length > 1 ? 'items' : 'item'\n        const priceChangeItemsSubject =\n          priceChangeItems.length > 1 ? 'items prices' : 'item price'\n        const isCartEmpty = items.length === 0\n        const hasValidItems = items.length > unavailableItems.length\n\n        return (\n          <Popover.Root modal={true} open={open} onOpenChange={setOpen}>\n            <Popover.Trigger asChild ref={setPopoverTrigger}>\n              {trigger}\n            </Popover.Trigger>\n            <Popover.Content\n              side={side}\n              sideOffset={CONTENT_OFFSET}\n              css={{\n                display: 'flex',\n                flexDirection: 'column',\n                zIndex: 1001,\n                transformOrigin:\n                  'var(--radix-popover-content-transform-origin)',\n                animation: `${open ? scaleUp : scaleDown} 0.2s ease-in-out`,\n                overflowY: 'auto',\n                borderRadius: '$borderRadius',\n                $$shadowColor: '$colors$gray7',\n                boxShadow: 'box-shadow: 0px 2px 16px $$shadowColor',\n                border: '1px solid $borderColor',\n                p: 24,\n                minHeight: 500,\n                width: 395,\n                maxHeight: `calc(100vh - ${triggerBottom || 0\n                  }px - (25px * 2) - 10px)`,\n                backgroundColor: '$contentBackground',\n                boxSizing: 'border-box',\n                '@media(max-width: 520px)': {\n                  height: `calc(100vh - ${triggerBottom || 0}px - (25px * 2))`,\n                  width: '100vw',\n                  minHeight: '100%',\n                },\n              }}\n            >\n              {loading && (\n                <Loader\n                  css={{\n                    backgroundColor: '$contentBackground',\n                    position: 'absolute',\n                    inset: 0,\n                    opacity: 0.6,\n                    zIndex: 10000,\n                  }}\n                />\n              )}\n              <Flex align=\"center\" css={{ mb: '$4' }}>\n                <Text style=\"h6\">Cartyyyyyyy</Text>\n                {!isCartEmpty && (\n                  <Flex\n                    align=\"center\"\n                    justify=\"center\"\n                    css={{\n                      background: '$accentBgActive',\n                      height: 20,\n                      width: 20,\n                      borderRadius: '99999px',\n                      ml: '$2',\n                    }}\n                  >\n                    <Text style=\"subtitle2\">{items.length}</Text>\n                  </Flex>\n                )}\n                {!isCartEmpty && (\n                  <Text\n                    style=\"subtitle2\"\n                    color=\"accent\"\n                    css={{\n                      cursor: 'pointer',\n                      ml: 24,\n                      '&:hover': { color: '$accentSolidHover' },\n                    }}\n                    onClick={clear}\n                  >\n                    Clear All\n                  </Text>\n                )}\n                <Button\n                  size=\"none\"\n                  color=\"ghost\"\n                  css={{ color: '$neutralSolid', ml: 'auto' }}\n                  onClick={() => {\n                    setOpen(false)\n                  }}\n                >\n                  <FontAwesomeIcon icon={faClose} width=\"16\" height=\"16\" />\n                </Button>\n              </Flex>\n              {cartCurrencyConverted && (\n                <CartToast\n                  kind=\"warning\"\n                  message={`Mixed currency items are only available to be checked out with ${currency?.symbol}`}\n                />\n              )}\n              {unavailableItems.length > 0 && (\n                <CartToast\n                  kind=\"error\"\n                  message={`${unavailableItems.length} ${unavailableItemsSubject} no longer available`}\n                  link={\n                    <Text\n                      color=\"accent\"\n                      style=\"subtitle2\"\n                      css={{ ml: 'auto', mt: 3, cursor: 'pointer' }}\n                      onClick={(e) => {\n                        e.preventDefault()\n                        remove(\n                          unavailableItems.map(\n                            (item) => `${item.collection.id}:${item.token.id}`\n                          )\n                        )\n                      }}\n                    >\n                      Remove {unavailableItemsSubject}\n                    </Text>\n                  }\n                />\n              )}\n              {priceChangeItems.length > 0 && (\n                <CartToast\n                  kind=\"warning\"\n                  message={`${priceChangeItems.length} ${priceChangeItemsSubject} updated`}\n                />\n              )}\n              {transaction?.error && (\n                <CartToast\n                  kind=\"error\"\n                  message={\n                    transaction.errorType ===\n                      CheckoutTransactionError.UserDenied\n                      ? 'User denied transaction signature.'\n                      : transaction.error.message\n                  }\n                />\n              )}\n              {purchaseComplete && (\n                <CartToast\n                  message={`Transaction Complete`}\n                  link={\n                    <Anchor\n                      href={`${blockExplorerBaseUrl}/tx/${transaction?.txHash}`}\n                      target=\"_blank\"\n                      css={{ ml: 'auto', fontSize: 12, mt: 2 }}\n                      weight=\"medium\"\n                      color=\"primary\"\n                    >\n                      Etherscan\n                    </Anchor>\n                  }\n                />\n              )}\n              {!isCartEmpty && (\n                <Flex\n                  direction=\"column\"\n                  css={{ gap: '$4', mb: '$4', overflowY: 'auto', mx: -24 }}\n                >\n                  {items.map((item) => (\n                    <CartItem\n                      key={`${item.collection.id}:${item.token.id}`}\n                      item={item}\n                      usdConversion={usdPrice}\n                      tokenUrl={tokenUrl}\n                    />\n                  ))}\n                </Flex>\n              )}\n              {isCartEmpty &&\n                !(\n                  displayPendingTransaction &&\n                  transaction?.status === CheckoutStatus.Finalizing\n                ) && (\n                  <Flex\n                    direction=\"column\"\n                    align=\"center\"\n                    justify=\"center\"\n                    css={{ color: '$neutralBorderHover', flex: 1, gap: '$5' }}\n                  >\n                    <FontAwesomeIcon\n                      icon={faShoppingCart}\n                      width=\"30\"\n                      height=\"30\"\n                      style={{ height: 30 }}\n                    />\n                    <Text style=\"body2\" color=\"subtle\">\n                      No items in your cart - TESTINGGG\n                    </Text>\n                  </Flex>\n                )}\n              <Flex direction=\"column\" css={{ mt: 'auto', pb: 10 }}>\n                {!isCartEmpty && feeOnTop ? (\n                  <Flex css={{ mb: '$4' }}>\n                    <Text style=\"subtitle2\">Referrer Fee</Text>\n                    <Flex\n                      direction=\"column\"\n                      justify=\"center\"\n                      css={{ ml: 'auto', gap: '$1', '> div': { ml: 'auto' } }}\n                    >\n                      <FormatCryptoCurrency\n                        textStyle=\"subtitle2\"\n                        amount={feeOnTop}\n                        address={currency?.contract}\n                        decimals={currency?.decimals}\n                        symbol={currency?.symbol}\n                        logoWidth={12}\n                        chainId={cartChain?.id}\n                      />\n                      {usdPrice && (\n                        <FormatCurrency\n                          amount={usdPrice * feeOnTop}\n                          style=\"subtitle2\"\n                          color=\"subtle\"\n                          css={{ textAlign: 'end' }}\n                        />\n                      )}\n                    </Flex>\n                  </Flex>\n                ) : null}\n                {!isCartEmpty && (\n                  <Flex css={{ mb: 28 }}>\n                    <Text style=\"h6\">Total</Text>\n                    <Flex\n                      direction=\"column\"\n                      justify=\"center\"\n                      css={{ ml: 'auto', gap: '$1', '> div': { ml: 'auto' } }}\n                    >\n                      <FormatCryptoCurrency\n                        textStyle=\"h6\"\n                        amount={totalPrice}\n                        address={currency?.contract}\n                        decimals={currency?.decimals}\n                        symbol={currency?.symbol}\n                        logoWidth={18}\n                        chainId={cartChain?.id}\n                      />\n                      {usdPrice && (\n                        <FormatCurrency\n                          amount={usdPrice * totalPrice}\n                          style=\"subtitle2\"\n                          color=\"subtle\"\n                          css={{ textAlign: 'end' }}\n                        />\n                      )}\n                    </Flex>\n                  </Flex>\n                )}\n                <CartCheckoutModal\n                  open={\n                    (transaction?.status == CheckoutStatus.Approving ||\n                      transaction?.status == CheckoutStatus.Finalizing ||\n                      transaction?.status == CheckoutStatus.Complete) &&\n                    !transaction?.error\n                  }\n                  items={items}\n                  currency={currency}\n                  totalPrice={totalPrice}\n                  usdPrice={usdPrice || 0}\n                  transaction={transaction}\n                  cartChain={cartChain}\n                  blockExplorerBaseUrl={blockExplorerBaseUrl}\n                  setCartPopoverOpen={setOpen}\n                />\n\n                {!hasEnoughCurrency && isConnected && (\n                  <Flex\n                    align=\"center\"\n                    justify=\"center\"\n                    css={{ mb: '$2', gap: '$2' }}\n                  >\n                    <Text style=\"body3\" color=\"error\">\n                      Insufficient balance\n                    </Text>\n                    <FormatCryptoCurrency\n                      textStyle=\"body3\"\n                      amount={balance}\n                      address={currency?.contract}\n                      decimals={currency?.decimals}\n                      symbol={currency?.symbol}\n                      logoWidth={10}\n                    />\n                  </Flex>\n                )}\n                {isCartEmpty && !displayPendingTransaction && (\n                  <Button disabled={true}>Select Items to Buy....</Button>\n                )}\n                {!isCartEmpty &&\n                  hasValidItems &&\n                  (transaction?.status === CheckoutStatus.Idle ||\n                    !displayPendingTransaction) && (\n                    <Button\n                      disabled={!hasEnoughCurrency && isConnected}\n                      onClick={async () => {\n                        if (!isConnected) {\n                          onConnectWallet?.()\n                        } else {\n                          checkout()\n                            .then(() => {\n                              setDisplayPendingTransaction(true)\n                            })\n                            .catch((e) => {\n                              console.error(e)\n                              setDisplayPendingTransaction(false)\n                            })\n                        }\n                      }}\n                    >\n                      {hasEnoughCurrency || !isConnected\n                        ? 'Purchase'\n                        : 'Add Funds to Purchase'}\n                    </Button>\n                  )}\n                {!isCartEmpty && !hasValidItems && (\n                  <Button\n                    color=\"secondary\"\n                    onClick={() => {\n                      clear()\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faRefresh} width=\"16\" height=\"16\" />\n                    Refresh Cart\n                  </Button>\n                )}\n\n                {!providerOptionsContext.disablePoweredByReservoir && (\n                  <Flex\n                    align=\"center\"\n                    css={{\n                      mx: 'auto',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      mt: 26,\n                      gap: '$1',\n                      visibility: '$poweredByReservoirVisibility',\n                    }}\n                  >\n                    <Box css={{ color: '$neutralBorderHover' }}>\n                      <FontAwesomeIcon icon={faLock} width={9} height={10} />\n                    </Box>\n                    <Text\n                      style=\"tiny\"\n                      color=\"subtle\"\n                      css={{\n                        display: 'inline-flex',\n                        alignItems: 'center',\n                        gap: 4,\n                        lineHeight: '14px',\n                        fontWeight: 400,\n                        color: '$neutralText',\n                      }}\n                    >\n                      Powered by{' '}\n                      <Anchor\n                        href=\"https://reservoir.tools/\"\n                        target=\"_blank\"\n                        weight=\"heavy\"\n                        color=\"gray\"\n                        css={{\n                          height: 12,\n                          fontSize: 12,\n                          '&:hover': {\n                            color: '$neutralSolid',\n                            fill: '$neutralSolid',\n                          },\n                        }}\n                      >\n                        <Logo />\n                      </Anchor>\n                    </Text>\n                  </Flex>\n                )}\n              </Flex>\n            </Popover.Content>\n            {open && (\n              <Box\n                css={{\n                  backgroundColor: '$overlayBackground',\n                  position: 'fixed',\n                  inset: 0,\n                  zIndex: 1000,\n                }}\n              ></Box>\n            )}\n          </Popover.Root>\n        )\n      }}\n    </CartPopoverRenderer>\n  )\n}\n\nCartPopover.Custom = CartPopoverRenderer\n\nexport default CartPopover\n","import React, { FC } from 'react'\nimport { useCart, useReservoirClient } from '../../hooks'\nimport {\n  Button,\n  Flex,\n  FormatCryptoCurrency,\n  FormatCurrency,\n  Text,\n} from '../../primitives'\nimport { styled } from '../../../stitches.config'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowDown,\n  faArrowUp,\n  faClose,\n} from '@fortawesome/free-solid-svg-icons'\nimport { Cart } from '../../context/CartProvider'\nimport { formatNumber } from '../../lib/numbers'\nimport QuantitySelector from '../../modal/QuantitySelector'\nimport * as allChains from 'viem/chains'\nimport { customChains } from '@reservoir0x/reservoir-sdk'\n\ntype Props = {\n  item: Cart['items'][0]\n  usdConversion: number | null\n  tokenUrl?: string\n}\n\nconst CartItemImage = styled('img', {\n  width: 56,\n  height: 56,\n  borderRadius: 4,\n  objectFit: 'cover',\n})\n\nconst CloseButton = styled(Button, {\n  position: 'absolute',\n  width: 24,\n  height: 24,\n  top: -8,\n  right: -8,\n  flexShrink: 0,\n  defaultVariants: {\n    size: 'none',\n    corners: 'circle',\n  },\n})\n\nconst CartItem: FC<Props> = ({ item, usdConversion, tokenUrl }) => {\n  const { token, collection, order } = item\n  const contract = collection.id.split(':')[0]\n  const client = useReservoirClient()\n  const {\n    remove,\n    data: cartCurrency,\n    setQuantity,\n  } = useCart((cart) => cart.currency)\n  const { data: cartChain } = useCart((cart) => cart.chain)\n\n  const currencyConverted =\n    item.price && item.price?.currency?.contract !== cartCurrency?.contract\n  let price = currencyConverted\n    ? item.price?.amount?.native\n    : item.price?.amount?.decimal\n  let previousPrice =\n    item.previousPrice?.currency?.contract !== cartCurrency?.contract\n      ? item.previousPrice?.amount?.native\n      : item.previousPrice?.amount?.decimal\n  let priceDiff = 0\n  let priceIncrease = false\n  let priceDecrease = false\n  if (price !== undefined && previousPrice !== undefined) {\n    priceDiff = Math.abs(((price - previousPrice) / price) * 100)\n    priceIncrease = price > previousPrice\n    priceDecrease = price < previousPrice\n  }\n  let usdPrice = (usdConversion || 0) * (price || 0)\n  const reservoirChain = client?.chains.find(\n    (chain) => cartChain?.id === chain.id\n  )\n\n  if (price && order?.quantity) {\n    price = price * order.quantity\n    usdPrice = usdPrice * order.quantity\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        transition: 'background-color 0.25s ease-in-out',\n        '&:hover': {\n          backgroundColor: '$neutralBgHover',\n        },\n      }}\n    >\n      <Flex\n        onClick={() => {\n          let chain = Object.values(allChains).find(\n            (chain) => cartChain?.id === chain.id\n          )\n\n          if (!chain) {\n            chain = Object.values(customChains).find(\n              (chain) => chain.id === (reservoirChain?.id || 1)\n            )\n          }\n\n          let url: string | undefined = tokenUrl\n          if (!url && cartChain) {\n            let tokenMetaKey: string | null = null\n            if (cartChain.id === allChains.mainnet.id) {\n              tokenMetaKey = 'reservoir:token-url-mainnet'\n            } else {\n              tokenMetaKey = `reservoir:token-url-${chain?.name.toLowerCase()}`\n            }\n            const tokenMetaTag = document.querySelector(\n              `meta[property='${tokenMetaKey}']`\n            )\n            if (tokenMetaTag) {\n              url = tokenMetaTag.getAttribute('content') || undefined\n            }\n          }\n          if (url) {\n            window.location.href = url\n              .replace('${contract}', contract)\n              .replace('${tokenId}', token.id)\n          }\n        }}\n        css={{\n          width: '100%',\n          px: 24,\n          py: 8,\n          cursor: 'pointer',\n        }}\n      >\n        <Flex css={{ position: 'relative', minWidth: 0, flexShrink: 0 }}>\n          <CartItemImage\n            src={`${reservoirChain?.baseApiUrl}/redirect/tokens/${contract}:${token.id}/image/v1?imageSize=small`}\n            css={!price ? { filter: 'grayscale(1)' } : {}}\n            onError={({ currentTarget }) => {\n              const collectionImage = `${reservoirChain?.baseApiUrl}/redirect/collections/${collection.id}/image/v1`\n              if (currentTarget.src != collectionImage) {\n                currentTarget.src = collectionImage\n              }\n            }}\n          />\n          <CloseButton\n            css={{\n              '&:hover': {\n                background: '$errorAccent',\n              },\n              background: !item.price ? '$errorAccent' : '$neutralSolid',\n            }}\n            onClick={(e) => {\n              e.stopPropagation()\n              e.preventDefault()\n              if (order?.id) {\n                remove([order?.id])\n              } else {\n                remove([`${collection.id}:${token.id}`])\n              }\n            }}\n          >\n            <FontAwesomeIcon icon={faClose} width=\"16\" height=\"16\" />\n          </CloseButton>\n        </Flex>\n        <Flex\n          direction=\"column\"\n          justify=\"center\"\n          css={{ gap: 2, ml: '$2', minWidth: 0 }}\n        >\n          <Flex align=\"center\" css={{ gap: '$1' }}>\n            <Text style=\"h6\" color={price ? undefined : 'subtle'} ellipsify>\n              {token.name ? token.name : `#${token.id}`}\n            </Text>\n          </Flex>\n          <Text style=\"body3\" color=\"subtle\" ellipsify>\n            {collection.name}\n          </Text>\n          {!price && !order?.id && (\n            <Text style=\"body3\" color=\"error\">\n              Item no longer available\n            </Text>\n          )}\n          {!price && order?.id && (\n            <Text style=\"body3\" color=\"error\">\n              Listing no longer available\n            </Text>\n          )}\n          {!priceIncrease && !priceDecrease && currencyConverted && (\n            <Flex\n              css={{ gap: '$1', color: '$accentSolidHover' }}\n              align=\"center\"\n            >\n              <Text style=\"body3\" color=\"accent\">\n                Currency converted\n              </Text>\n            </Flex>\n          )}\n          {priceIncrease && (\n            <Flex\n              css={{ gap: '$1', color: '$accentSolidHover' }}\n              align=\"center\"\n            >\n              <FontAwesomeIcon width=\"11\" icon={faArrowUp} />\n              <Text style=\"body2\" color=\"accent\">\n                Price has gone up {formatNumber(priceDiff)}%\n              </Text>\n            </Flex>\n          )}\n          {priceDecrease && (\n            <Flex\n              css={{ gap: '$1', color: '$accentSolidHover' }}\n              align=\"center\"\n            >\n              <FontAwesomeIcon width=\"11\" icon={faArrowDown} />\n              <Text style=\"body3\" color=\"accent\">\n                Price went down {formatNumber(priceDiff)}%\n              </Text>\n            </Flex>\n          )}\n        </Flex>\n        {price ? (\n          <Flex\n            direction=\"column\"\n            justify=\"center\"\n            css={{\n              ml: 'auto',\n              flexShrink: 0,\n              gap: '$1',\n              '> div': { ml: 'auto' },\n            }}\n          >\n            <FormatCryptoCurrency\n              textStyle=\"subtitle2\"\n              amount={price}\n              address={cartCurrency?.contract}\n              decimals={cartCurrency?.decimals}\n              symbol={cartCurrency?.symbol}\n              logoWidth={12}\n              chainId={cartChain?.id}\n            />\n            {usdPrice && usdPrice > 0 ? (\n              <FormatCurrency\n                amount={usdPrice}\n                style=\"tiny\"\n                color=\"subtle\"\n                css={{ textAlign: 'end' }}\n              />\n            ) : null}\n          </Flex>\n        ) : null}\n      </Flex>\n      {order && order?.quantityRemaining > 1 && price ? (\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{ width: '100%', px: 24, pb: 8, gap: '$3' }}\n        >\n          <Flex\n            direction=\"column\"\n            align=\"start\"\n            css={{ gap: '$1', overflow: 'hidden', minWidth: 0 }}\n          >\n            <Text style=\"body3\">Quantity</Text>\n            <Text\n              style=\"body3\"\n              color=\"subtle\"\n              ellipsify\n              css={{ width: '100%' }}\n            >\n              {formatNumber(order.quantityRemaining)} items available\n            </Text>\n          </Flex>\n          <QuantitySelector\n            min={1}\n            max={order.quantityRemaining as number}\n            quantity={order.quantity}\n            setQuantity={(number) => setQuantity(order.id, number)}\n            css={{\n              border: '1px solid $neutralBorder',\n              background: 'none',\n            }}\n          />\n        </Flex>\n      ) : null}\n    </Flex>\n  )\n}\n\nexport default CartItem\n","import React, { FC, ReactNode } from 'react'\nimport { Flex, Text } from '../../primitives'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleCheck,\n  faCircleInfo,\n  faTriangleExclamation,\n} from '@fortawesome/free-solid-svg-icons'\n\nexport type CartToastKind = 'success' | 'error' | 'warning'\n\ntype Props = {\n  kind?: CartToastKind\n  message: string\n  link?: ReactNode\n}\n\nconst CartToast: FC<Props> = ({ kind = 'success', message, link }) => {\n  return (\n    <Flex\n      css={{\n        width: '100%',\n        background: '$wellBackground',\n        p: '$2',\n        borderRadius: '$borderRadius',\n        mb: '$2',\n      }}\n    >\n      {kind === 'success' && (\n        <Text color=\"success\">\n          <FontAwesomeIcon icon={faCircleCheck} width=\"16\" height=\"16\" />\n        </Text>\n      )}\n      {kind === 'error' && (\n        <Text color=\"error\">\n          <FontAwesomeIcon\n            icon={faTriangleExclamation}\n            width=\"16\"\n            height=\"16\"\n          />\n        </Text>\n      )}\n      {kind === 'warning' && (\n        <Text color=\"error\">\n          <FontAwesomeIcon icon={faCircleInfo} width=\"16\" height=\"16\" />\n        </Text>\n      )}\n      <Text css={{ ml: '$1', mt: 3 }} style=\"body3\">\n        {message}\n      </Text>\n      {link}\n    </Flex>\n  )\n}\n\nexport default CartToast\n","import { useCoinConversion, useCart, useReservoirClient } from '../../hooks'\nimport React, { FC, ReactNode, useEffect, useMemo, useState } from 'react'\nimport { useAccount, useBalance, useNetwork } from 'wagmi'\nimport { zeroAddress, parseUnits } from 'viem'\nimport { UseBalanceToken } from '../../types/wagmi'\nimport { toFixed } from '../../lib/numbers'\nimport {\n  Cart,\n  CheckoutStatus,\n  CheckoutTransactionError,\n} from '../../context/CartProvider'\n\ntype ChildrenProps = {\n  loading: boolean\n  currency?: NonNullable<Cart['items'][0]['price']>['currency']\n  cartCurrencyConverted?: Boolean\n  totalPrice: number\n  feeOnTop?: number\n  usdPrice: number | null\n  balance?: bigint\n  hasEnoughCurrency: boolean\n  items: Cart['items']\n  unavailableItems: Cart['items']\n  priceChangeItems: Cart['items']\n  transaction?: Cart['transaction']\n  blockExplorerBaseUrl: string\n  cartChain: Cart['chain']\n  checkout: ReturnType<typeof useCart>['checkout']\n  clear: ReturnType<typeof useCart>['clear']\n  remove: ReturnType<typeof useCart>['remove']\n  add: ReturnType<typeof useCart>['add']\n  validate: ReturnType<typeof useCart>['validate']\n}\n\ntype Props = {\n  open: boolean\n  children: (props: ChildrenProps) => ReactNode\n}\n\nexport const CartPopoverRenderer: FC<Props> = ({ open, children }) => {\n  const client = useReservoirClient()\n  const [hasEnoughCurrency, setHasEnoughCurrency] = useState(true)\n  const { data, clear, clearTransaction, validate, remove, add, checkout } =\n    useCart((cart) => cart)\n  const {\n    isValidating,\n    totalPrice,\n    items,\n    currency,\n    transaction,\n    feeOnTop,\n    chain: cartChain,\n  } = data\n  const usdConversion = useCoinConversion(\n    open ? 'USD' : undefined,\n    currency?.symbol || currency?.name\n  )\n  const usdPrice = usdConversion.length > 0 ? usdConversion[0].price : null\n\n  const { chains } = useNetwork()\n  const chain = chains.find((chain) => chain.id === transaction?.chain.id)\n  const blockExplorerBaseUrl =\n    chain?.blockExplorers?.default?.url || 'https://etherscan.io'\n  const cartCurrencyConverted = items.some(\n    (item) =>\n      item.price && item.price?.currency?.contract !== currency?.contract\n  )\n\n  useEffect(() => {\n    if (open) {\n      validate()\n    } else if (\n      transaction?.status === CheckoutStatus.Complete ||\n      transaction?.error\n    ) {\n      clearTransaction()\n    }\n  }, [open])\n\n  const unavailableItems = useMemo(\n    () => items.filter((item) => !item.price),\n    [items]\n  )\n  const priceChangeItems = useMemo(\n    () =>\n      items.filter(\n        ({ previousPrice, price }) =>\n          previousPrice &&\n          price?.amount?.decimal !== undefined &&\n          previousPrice.amount?.decimal !== price?.amount?.decimal\n      ),\n    [items]\n  )\n  const { address } = useAccount()\n  const { data: balance } = useBalance({\n    chainId: cartChain?.id || client?.currentChain()?.id,\n    address: address,\n    token:\n      currency?.contract !== zeroAddress\n        ? (currency?.contract as UseBalanceToken)\n        : undefined,\n    watch: open,\n    formatUnits: currency?.decimals,\n  })\n\n  useEffect(() => {\n    if (balance) {\n      const totalPriceTruncated = toFixed(totalPrice, currency?.decimals || 18)\n      if (!balance.value) {\n        setHasEnoughCurrency(false)\n      } else if (\n        balance.value <\n        parseUnits(`${totalPriceTruncated as number}`, currency?.decimals || 18)\n      ) {\n        setHasEnoughCurrency(false)\n      } else {\n        setHasEnoughCurrency(true)\n      }\n    }\n  }, [totalPrice, balance, currency])\n\n  useEffect(() => {\n    if (\n      hasEnoughCurrency &&\n      transaction?.errorType === CheckoutTransactionError.InsufficientBalance\n    ) {\n      setHasEnoughCurrency(false)\n    }\n  }, [transaction])\n\n  return (\n    <>\n      {children({\n        loading: isValidating,\n        items,\n        unavailableItems,\n        priceChangeItems,\n        currency,\n        cartCurrencyConverted,\n        totalPrice,\n        feeOnTop,\n        usdPrice,\n        hasEnoughCurrency,\n        balance: balance?.value,\n        transaction,\n        blockExplorerBaseUrl,\n        cartChain,\n        checkout,\n        clear,\n        remove,\n        add,\n        validate,\n      })}\n    </>\n  )\n}\n\nexport default CartPopoverRenderer\n","import React, { ReactElement, useContext, useEffect, useState } from 'react'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\nimport { AnimatePresence } from 'framer-motion'\nimport { AnimatedOverlay, StyledAnimatedContent } from '../../primitives/Dialog'\nimport { Anchor, Button, Flex, Text, Box, Loader } from '../../primitives'\nimport { styled } from '@stitches/react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCheckCircle,\n  faCircleExclamation,\n  faClose,\n  faCube,\n  faLock,\n  faWallet,\n} from '@fortawesome/free-solid-svg-icons'\nimport { ProviderOptionsContext } from '../../ReservoirKitProvider'\nimport { TokenCheckout } from '../../modal/TokenCheckout'\nimport { Cart, CheckoutStatus } from '../../context/CartProvider'\nimport SigninStep from '../../modal/SigninStep'\nimport { ApprovePurchasingCollapsible } from '../../modal/ApprovePurchasingCollapsible'\nimport { Execute } from '@reservoir0x/reservoir-sdk'\nimport { Logo } from '../../modal/Modal'\n\nconst Title = styled(DialogPrimitive.Title, {\n  margin: 0,\n})\n\nexport type Path = NonNullable<Execute['path']>[0]\n\ntype Props = {\n  items: Cart['items']\n  totalPrice: number\n  usdPrice: number\n  currency: NonNullable<Cart['items'][0]['price']>['currency']\n  cartChain: Cart['chain']\n  blockExplorerBaseUrl: string\n  transaction?: Cart['transaction']\n  open?: boolean\n  setCartPopoverOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport function CartCheckoutModal({\n  items,\n  totalPrice,\n  usdPrice,\n  currency,\n  cartChain,\n  blockExplorerBaseUrl,\n  transaction,\n  open,\n  setCartPopoverOpen,\n}: Props): ReactElement | null {\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const providerOptionsContext = useContext(ProviderOptionsContext)\n\n  const images = items.slice(0, 2).map((item) => {\n    const { token, collection } = item\n    const contract = collection.id.split(':')[0]\n\n    return `${cartChain?.baseApiUrl}/redirect/tokens/${contract}:${token.id}/image/v1?imageSize=small`\n  })\n\n  const salesTxHashes =\n    transaction?.currentStep?.items?.reduce((txHashes, item) => {\n      item.salesData?.forEach((saleData) => {\n        if (saleData.txHash) {\n          txHashes.add(saleData.txHash)\n        }\n      })\n      return txHashes\n    }, new Set<string>()) || []\n  const totalSales = Array.from(salesTxHashes).length\n  const failedSales =\n    totalSales - (transaction?.currentStep?.items?.length || 0)\n  const successfulSales = totalSales - failedSales\n\n  const pathMap = transaction?.path\n    ? (transaction.path as Path[]).reduce(\n        (paths: Record<string, Path>, path: Path) => {\n          if (path.orderId) {\n            paths[path.orderId] = path\n          }\n\n          return paths\n        },\n        {} as Record<string, Path>\n      )\n    : {}\n\n  useEffect(() => {\n    if (open !== undefined && open !== dialogOpen) {\n      setDialogOpen(open)\n    }\n  }, [open])\n\n  return (\n    <DialogPrimitive.Root\n      onOpenChange={(open) => {\n        setDialogOpen(open)\n        if (!open) {\n          setCartPopoverOpen(false)\n        }\n      }}\n      open={dialogOpen}\n    >\n      <AnimatePresence>\n        {dialogOpen && (\n          <DialogPrimitive.DialogPortal forceMount>\n            <AnimatedOverlay style={{ zIndex: 1002 }} />\n            <StyledAnimatedContent\n              forceMount\n              css={{\n                zIndex: 1003,\n              }}\n            >\n              <Flex\n                css={{\n                  p: 16,\n                  backgroundColor: '$headerBackground',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  borderTopRightRadius: '$borderRadius',\n                  borderTopLeftRadius: '$borderRadius',\n                }}\n              >\n                <Title css={{ alignItems: 'center', display: 'flex' }}>\n                  <Text style=\"h6\">Complete Checkout</Text>\n                </Title>\n                <DialogPrimitive.Close asChild>\n                  <Button\n                    color=\"ghost\"\n                    size=\"none\"\n                    css={{ color: '$neutralText' }}\n                  >\n                    <FontAwesomeIcon icon={faClose} width={16} height={16} />\n                  </Button>\n                </DialogPrimitive.Close>\n              </Flex>\n              <Box css={{ maxHeight: '85vh', overflowY: 'auto' }}>\n                {transaction?.status === CheckoutStatus.Approving && (\n                  <Flex direction=\"column\">\n                    <Box\n                      css={{\n                        p: '$4',\n                        borderBottom: '1px solid $neutralBorder',\n                      }}\n                    >\n                      <TokenCheckout\n                        itemCount={items.length}\n                        images={images}\n                        totalPrice={totalPrice}\n                        usdPrice={usdPrice}\n                        currency={currency}\n                        chain={cartChain}\n                      />\n                    </Box>\n                    <Flex\n                      direction=\"column\"\n                      css={{ p: '$4', overflowY: 'auto' }}\n                    >\n                      <Flex\n                        direction=\"column\"\n                        align=\"center\"\n                        justify=\"center\"\n                        css={{\n                          color: '$neutralBorderHover',\n                          flex: 1,\n                          gap: '$5',\n                        }}\n                      >\n                        {transaction?.currentStep == undefined ? (\n                          <Flex css={{ py: '$5' }}>\n                            <Loader />\n                          </Flex>\n                        ) : null}\n                        {transaction?.currentStep &&\n                        transaction?.currentStep?.id === 'auth' ? (\n                          <SigninStep css={{ mt: 48, mb: '$4', gap: 20 }} />\n                        ) : null}\n                        {transaction?.currentStep &&\n                        transaction?.currentStep?.id !== 'auth' ? (\n                          <>\n                            {transaction?.currentStep?.items &&\n                            transaction.currentStep?.items.length > 1 ? (\n                              <Flex\n                                direction=\"column\"\n                                css={{ gap: '$4', width: '100%' }}\n                              >\n                                <Text style=\"h6\" css={{ textAlign: 'center' }}>\n                                  Approve Purchases\n                                </Text>\n                                <Text style=\"subtitle2\" color=\"subtle\">\n                                  Due to limitations with Blur, the purchase of\n                                  these items needs to be split into{' '}\n                                  {transaction?.currentStep?.items.length}{' '}\n                                  separate transactions.\n                                </Text>\n                                {transaction.currentStep?.items.map((item) => (\n                                  <ApprovePurchasingCollapsible\n                                    item={item}\n                                    pathMap={pathMap}\n                                    usdPrice={usdPrice}\n                                    chain={cartChain}\n                                    open={true}\n                                  />\n                                ))}\n                              </Flex>\n                            ) : (\n                              <Flex\n                                direction=\"column\"\n                                align=\"center\"\n                                css={{ gap: '$4', py: '$4' }}\n                              >\n                                <Text style=\"h6\">\n                                  Confirm transaction in your wallet\n                                </Text>\n                                <Box css={{ color: '$neutralText' }}>\n                                  <FontAwesomeIcon\n                                    icon={faWallet}\n                                    style={{\n                                      width: '32px',\n                                      height: '32px',\n                                      margin: '12px 0px',\n                                    }}\n                                  />\n                                </Box>\n                              </Flex>\n                            )}\n                          </>\n                        ) : null}\n                      </Flex>\n                    </Flex>\n                    <Button disabled={true} css={{ m: '$4' }}>\n                      <Loader />\n                      Waiting for Approval...\n                    </Button>\n                  </Flex>\n                )}\n                {transaction?.status === CheckoutStatus.Finalizing && (\n                  <Flex direction=\"column\">\n                    <Flex direction=\"column\" css={{ px: '$4', py: '$5' }}>\n                      <Flex\n                        direction=\"column\"\n                        align=\"center\"\n                        justify=\"center\"\n                        css={{\n                          gap: '$4',\n                        }}\n                      >\n                        <Text style=\"h6\">Finalizing on blockchain</Text>\n                        <Text\n                          style=\"subtitle2\"\n                          color=\"subtle\"\n                          css={{ textAlign: 'center' }}\n                        >\n                          You can close this modal while it finalizes on the\n                          blockchain. The transaction will continue in the\n                          background.\n                        </Text>\n\n                        <FontAwesomeIcon\n                          icon={faCube}\n                          style={{ height: 24, width: 24 }}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Button disabled={true} css={{ m: '$4' }}>\n                      <Loader />\n                      Waiting to be Validated...\n                    </Button>\n                  </Flex>\n                )}\n\n                {transaction?.status === CheckoutStatus.Complete && (\n                  <Flex\n                    direction=\"column\"\n                    align=\"center\"\n                    css={{ width: '100%', p: '$4' }}\n                  >\n                    <Flex\n                      direction=\"column\"\n                      align=\"center\"\n                      css={{ width: '100%', p: '$4' }}\n                    >\n                      <Flex\n                        direction=\"column\"\n                        align=\"center\"\n                        css={{ px: '$4', py: '$5', gap: 24 }}\n                      >\n                        <Box\n                          css={{\n                            color: failedSales\n                              ? '$errorAccent'\n                              : '$successAccent',\n                          }}\n                        >\n                          <FontAwesomeIcon\n                            icon={\n                              failedSales ? faCircleExclamation : faCheckCircle\n                            }\n                            fontSize={32}\n                          />\n                        </Box>\n                        <Text style=\"h5\" css={{ textAlign: 'center' }}>\n                          {failedSales\n                            ? `${successfulSales} ${\n                                successfulSales > 1 ? 'items' : 'item'\n                              } purchased, ${failedSales} ${\n                                failedSales > 1 ? 'items' : 'item'\n                              } failed`\n                            : 'Congrats! Purchase was successful.'}\n                        </Text>\n                        <Flex direction=\"column\" css={{ gap: '$2', mb: '$3' }}>\n                          {transaction.currentStep?.items?.map((item) => {\n                            const txHash = item.txHash\n                              ? `${item.txHash.slice(\n                                  0,\n                                  4\n                                )}...${item.txHash.slice(-4)}`\n                              : ''\n                            return (\n                              <Anchor\n                                href={`${blockExplorerBaseUrl}/tx/${item?.txHash}`}\n                                color=\"primary\"\n                                weight=\"medium\"\n                                target=\"_blank\"\n                                css={{ fontSize: 12 }}\n                              >\n                                View transaction: {txHash}\n                              </Anchor>\n                            )\n                          })}\n                        </Flex>\n                      </Flex>\n                    </Flex>\n                    <Flex css={{ width: '100%', p: '$4' }}>\n                      <Button\n                        css={{ width: '100%' }}\n                        onClick={() => setDialogOpen(false)}\n                      >\n                        Close\n                      </Button>\n                    </Flex>\n                  </Flex>\n                )}\n              </Box>\n\n              {!providerOptionsContext.disablePoweredByReservoir && (\n                <Flex\n                  align=\"center\"\n                  css={{\n                    mx: 'auto',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    pb: 12,\n                    gap: '$1',\n                    visibility: '$poweredByReservoirVisibility',\n                    borderBottomRightRadius: '$borderRadius',\n                    borderBottomLeftRadius: '$borderRadius',\n                  }}\n                >\n                  <Box css={{ color: '$neutralBorderHover' }}>\n                    <FontAwesomeIcon icon={faLock} width={9} height={10} />\n                  </Box>\n                  <Text\n                    style=\"tiny\"\n                    color=\"subtle\"\n                    css={{\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      gap: 4,\n                      lineHeight: '12px',\n                      fontWeight: 400,\n                      color: '$neutralText',\n                    }}\n                  >\n                    Powered by{' '}\n                    <Anchor\n                      href=\"https://reservoir.tools/\"\n                      target=\"_blank\"\n                      weight=\"heavy\"\n                      color=\"gray\"\n                      css={{\n                        height: 12,\n                        fontSize: 12,\n                        '&:hover': {\n                          color: '$neutralSolid',\n                          fill: '$neutralSolid',\n                        },\n                      }}\n                    >\n                      <Logo />\n                    </Anchor>\n                  </Text>\n                </Flex>\n              )}\n            </StyledAnimatedContent>\n          </DialogPrimitive.DialogPortal>\n        )}\n      </AnimatePresence>\n    </DialogPrimitive.Root>\n  )\n}\n"],"names":[],"version":3,"file":"index.module.js.map"}